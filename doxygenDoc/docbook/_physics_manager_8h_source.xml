<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__physics_manager_8h_source" xml:lang="en-US">
<title>PhysicsManager.h</title>
<indexterm><primary>Src/Physics/PhysicsManager.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
2 <emphasis role="preprocessor">#ifndef&#32;__PHYSICS_PHYSICSMANAGER</emphasis>
3 <emphasis role="preprocessor">#define&#32;__PHYSICS_PHYSICSMANAGER</emphasis>
4 
5 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__motor_engine_a_p_i_8h">MotorEngine/MotorEngineAPI.h</link>&quot;</emphasis>
6 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__singleton_8h">Utils/Singleton.h</link>&quot;</emphasis>
7 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__debug_drawer_8h">DebugDrawer.h</link>&quot;</emphasis>
8 
9 <emphasis role="keyword">enum</emphasis>&#32;<link linkend="__physics_manager_8h_1a3c6c49dd4d974c67346f991bc443b14b">Shapes</link>&#32;{
10 &#32;&#32;&#32;&#32;<link linkend="__physics_manager_8h_1a3c6c49dd4d974c67346f991bc443b14bad234e1337b65f7d48adcec10b0a5233e">SHAPES_SPHERE</link>,
11 &#32;&#32;&#32;&#32;<link linkend="__physics_manager_8h_1a3c6c49dd4d974c67346f991bc443b14baf52143b9efb76308441d30efa1013e8f">SHAPES_BOX</link>,
12 &#32;&#32;&#32;&#32;<link linkend="__physics_manager_8h_1a3c6c49dd4d974c67346f991bc443b14ba9d9edaa5743e042d75e3a3cedcf17e5b">SHAPES_CYLINDER</link>,
13 &#32;&#32;&#32;&#32;<link linkend="__physics_manager_8h_1a3c6c49dd4d974c67346f991bc443b14ba6e7c12404e97120c0a157da639dae55a">SHAPES_CAPSULE</link>
14 };
15 
16 <emphasis role="keyword">enum</emphasis>&#32;<link linkend="__physics_manager_8h_1a8a93b61bc797a7d1907f42796a252493">MovementType</link>&#32;{
17 &#32;&#32;&#32;&#32;<link linkend="__physics_manager_8h_1a8a93b61bc797a7d1907f42796a252493a5f3293f4fee67e119d537aba61589bc8">MOVEMENT_TYPE_DYNAMIC</link>,
18 &#32;&#32;&#32;&#32;<link linkend="__physics_manager_8h_1a8a93b61bc797a7d1907f42796a252493aaff433b41af5badf4d9de6b351e1cf17">MOVEMENT_TYPE_STATIC</link>,
19 &#32;&#32;&#32;&#32;<link linkend="__physics_manager_8h_1a8a93b61bc797a7d1907f42796a252493a5f2da38a18deb028bb9707880ec80441">MOVEMENT_TYPE_KINEMATIC</link>
20 };
21 
22 <emphasis role="keyword">class&#32;</emphasis>btDiscreteDynamicsWorld;
23 <emphasis role="keyword">class&#32;</emphasis>btRigidBody;
24 <emphasis role="keyword">class&#32;</emphasis>btDefaultCollisionConfiguration;
25 <emphasis role="keyword">class&#32;</emphasis>btDbvBroadphase;
26 <emphasis role="keyword">class&#32;</emphasis>btActionInterface;
27 <emphasis role="keyword">class&#32;</emphasis>btCollisionShape;
28 <emphasis role="keyword">class&#32;</emphasis>btConstrainSolver;
29 <emphasis role="keyword">class&#32;</emphasis>btSequentialImpulseConstraintSolver;
30 <emphasis role="keyword">class&#32;</emphasis>btDefaultMotionState;
31 <emphasis role="keyword">class&#32;</emphasis>btDispatcher;
32 <emphasis role="keyword">class&#32;</emphasis>btBroadphaseInterface;
33 <emphasis role="keyword">class&#32;</emphasis>btCollisionConfiguration;
34 
35 
36 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceme">me</link>&#32;{
37 
38 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="__motor_engine_a_p_i_8h_1ae7d210fc6a9598f82960577024307219">__MOTORENGINE_API</link>&#32;<link linkend="_classme_1_1_physics_manager">PhysicsManager</link>:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_classme_1_1_singleton">Singleton</link>&lt;PhysicsManager&gt;
39 &#32;&#32;&#32;&#32;{
40 
41 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
42 
43 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;<link linkend="_classme_1_1_singleton">Singleton&lt;PhysicsManager&gt;</link>;
44 
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classme_1_1_physics_manager">PhysicsManager</link>();
46 
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//DynamicWorld</emphasis>
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;btDiscreteDynamicsWorld*&#32;mDynamicsWorld;
49 
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Variables&#32;used&#32;to&#32;inicializate&#32;the&#32;dynamicsWorld</emphasis>
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;btDispatcher*&#32;mDispatcher;
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;btBroadphaseInterface*&#32;mBroadphaseInterface;
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;btCollisionConfiguration*&#32;mCollisionConfiguration;
54 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;btSequentialImpulseConstraintSolver*&#32;mConstraintSolver;
55 
56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classme_1_1_debug_drawer">DebugDrawer</link>*&#32;mDebug;
57 
58 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
59 
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classme_1_1_physics_manager">~PhysicsManager</link>();
64 
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;start();
70 
77 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;addRigidBody(btRigidBody*&#32;rigidBody);
78 
85 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;addVehicle(btActionInterface*&#32;vehicle);
86 
87 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
88 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns&#32;the&#32;Collision&#32;Shape&#32;of&#32;the&#32;rigidbody</emphasis>
89 <emphasis role="comment"></emphasis>
90 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;@param&#32;shape&#32;indicates&#32;the&#32;shape&#32;of&#32;the&#32;rigidbody&#32;(0&#32;=&#32;sphere,&#32;1&#32;=&#32;box,&#32;2&#32;=&#32;cylinder,&#32;3&#32;=&#32;capsule)</emphasis>
91 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;@param&#32;scale&#32;indicates&#32;the&#32;scale&#32;of&#32;transform</emphasis>
92 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;@param&#32;size&#32;indicates&#32;the&#32;size&#32;of&#32;transform</emphasis>
93 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;btCollisionShape*&#32;createShape(<link linkend="__physics_manager_8h_1a3c6c49dd4d974c67346f991bc443b14b">Shapes</link>&#32;shape,&#32;<emphasis role="keyword">const</emphasis>&#32;btVector3&#32;&amp;scale);
95 
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
97 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Create&#32;and&#32;add&#32;a&#32;rigidbody&#32;to&#32;the&#32;dynamic&#32;world</emphasis>
98 <emphasis role="comment"></emphasis>
99 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;@param&#32;transform&#32;is&#32;the&#32;transform&#32;of&#32;the&#32;rigidBody</emphasis>
100 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;@param&#32;scale&#32;indicates&#32;the&#32;scale&#32;of&#32;transform</emphasis>
101 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;@param&#32;size&#32;indicates&#32;the&#32;size&#32;of&#32;transform</emphasis>
102 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;@param&#32;shape&#32;indicates&#32;the&#32;shape&#32;of&#32;the&#32;rigidbody&#32;(0&#32;=&#32;sphere,&#32;1&#32;=&#32;box,&#32;2&#32;=&#32;cylinder,&#32;3&#32;=&#32;capsule)</emphasis>
103 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;@param&#32;mvType&#32;the&#32;movement&#32;of&#32;the&#32;object&#32;(0&#32;=&#32;Dynamic,&#32;1&#32;=&#32;Static,&#32;2&#32;=&#32;Kinematic)</emphasis>
104 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;@param&#32;isTrigger&#32;indicates&#32;if&#32;the&#32;object&#32;is&#32;trigger&#32;or&#32;not</emphasis>
105 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;@param&#32;friction&#32;friction&#32;of&#32;the&#32;objetct</emphasis>
106 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;@param&#32;mass&#32;mass&#32;of&#32;the&#32;object</emphasis>
107 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;@param&#32;restitution&#32;restitution&#32;of&#32;the&#32;object</emphasis>
108 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;btRigidBody*createRigidBody(btTransform&#32;*transform,&#32;<emphasis role="keyword">const</emphasis>&#32;btVector3&#32;&amp;scale,&#32;<link linkend="__physics_manager_8h_1a3c6c49dd4d974c67346f991bc443b14b">Shapes</link>&#32;shape,&#32;<link linkend="__physics_manager_8h_1a8a93b61bc797a7d1907f42796a252493">MovementType</link>&#32;mvType,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isTrigger,&#32;<emphasis role="keywordtype">float</emphasis>&#32;friction,&#32;<emphasis role="keywordtype">float</emphasis>&#32;&amp;mass,&#32;<emphasis role="keywordtype">float</emphasis>&#32;restitution);
110 
111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;update(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&amp;&#32;dt);
112 &#32;&#32;&#32;&#32;};
113 
118 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_classme_1_1_physics_manager">PhysicsManager</link>&amp;&#32;<link linkend="_namespaceme_1a4c5f82cdd874c703ca40fb8fc4336d8d">physicsManager</link>()&#32;{
119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<link linkend="_classme_1_1_singleton_1a8810aab25f6fdc043bfac52761a9a260">PhysicsManager::instance</link>();
120 &#32;&#32;&#32;&#32;}
121 
122 }
123 
124 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
