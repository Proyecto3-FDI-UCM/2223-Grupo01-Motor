<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classme_1_1_render_mesh" xml:lang="en-US">
<title>me::RenderMesh Class Reference</title>
<indexterm><primary>me::RenderMesh</primary></indexterm>
<para>
<computeroutput>#include &lt;RenderMesh.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classme_1_1_render_mesh_1a54a4bf99c2243033a24bd16c5f909ee0">RenderMesh</link> (Ogre::SceneNode *node, std::string meshName)</para>
</listitem>
            <listitem><para><link linkend="_classme_1_1_render_mesh_1ae93ce9766eed4cd88f841c19ffe10595">~RenderMesh</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_classme_1_1_render_mesh_1ac51564e410f50c8a79d0e03a9ccf3796">setTransform</link> (const <link linkend="_namespace_ogre_1a8b4adeb18d1b0fcedea1b58bcbc67879">Ogre::Vector3f</link> &amp;pos, const <link linkend="_namespace_ogre_1a8b4adeb18d1b0fcedea1b58bcbc67879">Ogre::Vector3f</link> &amp;scale, const Ogre::Quaternion &amp;rot)</para>
</listitem>
            <listitem><para>void <link linkend="_classme_1_1_render_mesh_1a575c2ce1c6d49d58daf78a2dd6fec0e0">setPosition</link> (const <link linkend="_namespace_ogre_1a8b4adeb18d1b0fcedea1b58bcbc67879">Ogre::Vector3f</link> &amp;pos)</para>
</listitem>
            <listitem><para>void <link linkend="_classme_1_1_render_mesh_1ab94e87bc5223c4ea558dedaa8c5992f8">setScale</link> (const <link linkend="_namespace_ogre_1a8b4adeb18d1b0fcedea1b58bcbc67879">Ogre::Vector3f</link> &amp;scale)</para>
</listitem>
            <listitem><para>void <link linkend="_classme_1_1_render_mesh_1a1abef28d58cd023be4c8e986d14e8740">setRotation</link> (Ogre::Quaternion rot)</para>
</listitem>
            <listitem><para>Ogre::Entity * <link linkend="_classme_1_1_render_mesh_1a10d529e7ca70d19e125ef595a88f68de">getOgreEntity</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_classme_1_1_render_mesh_1aa3b9991173b75a29da5d71b4f7b20a79">setMaterial</link> (std::string materialName)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para>Ogre::SceneNode * <link linkend="_classme_1_1_render_mesh_1a7b0503d0a84d1e528ea9c450ab48a0c1">mNode</link></para>
</listitem>
            <listitem><para>Ogre::Entity * <link linkend="_classme_1_1_render_mesh_1a10ec5689b8d395b7a3313731a67530e5">mEntity</link></para>
</listitem>
            <listitem><para>std::string <link linkend="_classme_1_1_render_mesh_1a8ddfbdf2193533e71721139fd2332332">mMeshName</link></para>
</listitem>
            <listitem><para>std::string <link linkend="_classme_1_1_render_mesh_1ab3dc00d2951b2f5ee467f87b2810d460">mMaterialName</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classme_1_1_render_mesh_1a54a4bf99c2243033a24bd16c5f909ee0"/><section>
    <title>RenderMesh()</title>
<indexterm><primary>RenderMesh</primary><secondary>me::RenderMesh</secondary></indexterm>
<indexterm><primary>me::RenderMesh</primary><secondary>RenderMesh</secondary></indexterm>
<para><computeroutput>me::RenderMesh::RenderMesh (Ogre::SceneNode * node, std::string meshName)</computeroutput></para>
<para>Assign information and create Ogre::Entity with the given mesh and attach to mNode 
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>node</entry><entry>
<para>mNode for attach Ogre::Entity created </para>
</entry>
                            </row>
                            <row>
<entry>meshName</entry><entry>
<para>name of resource (type mesh) that we used for create Ogre::Entity. Must be writted in resource.cfg (.mesh inside Zip or FileSystem) </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_classme_1_1_render_mesh_1ae93ce9766eed4cd88f841c19ffe10595"/><section>
    <title>~RenderMesh()</title>
<indexterm><primary>~RenderMesh</primary><secondary>me::RenderMesh</secondary></indexterm>
<indexterm><primary>me::RenderMesh</primary><secondary>~RenderMesh</secondary></indexterm>
<para><computeroutput>me::RenderMesh::~RenderMesh ( )</computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classme_1_1_render_mesh_1a10d529e7ca70d19e125ef595a88f68de"/><section>
    <title>getOgreEntity()</title>
<indexterm><primary>getOgreEntity</primary><secondary>me::RenderMesh</secondary></indexterm>
<indexterm><primary>me::RenderMesh</primary><secondary>getOgreEntity</secondary></indexterm>
<para><computeroutput>Ogre::Entity * me::RenderMesh::getOgreEntity ( )</computeroutput></para>
<para>Return the Ogre::Entity asociated </para>
</section>
<anchor xml:id="_classme_1_1_render_mesh_1aa3b9991173b75a29da5d71b4f7b20a79"/><section>
    <title>setMaterial()</title>
<indexterm><primary>setMaterial</primary><secondary>me::RenderMesh</secondary></indexterm>
<indexterm><primary>me::RenderMesh</primary><secondary>setMaterial</secondary></indexterm>
<para><computeroutput>void me::RenderMesh::setMaterial (std::string materialName)</computeroutput></para>
<para>Assign material name to entity 
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>materialName</entry><entry>
<para>name of material that we used Must be writted in MaterialResource.material </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_classme_1_1_render_mesh_1a575c2ce1c6d49d58daf78a2dd6fec0e0"/><section>
    <title>setPosition()</title>
<indexterm><primary>setPosition</primary><secondary>me::RenderMesh</secondary></indexterm>
<indexterm><primary>me::RenderMesh</primary><secondary>setPosition</secondary></indexterm>
<para><computeroutput>void me::RenderMesh::setPosition (const <link linkend="_namespace_ogre_1a8b4adeb18d1b0fcedea1b58bcbc67879">Ogre::Vector3f</link> &amp; pos)</computeroutput></para></section>
<anchor xml:id="_classme_1_1_render_mesh_1a1abef28d58cd023be4c8e986d14e8740"/><section>
    <title>setRotation()</title>
<indexterm><primary>setRotation</primary><secondary>me::RenderMesh</secondary></indexterm>
<indexterm><primary>me::RenderMesh</primary><secondary>setRotation</secondary></indexterm>
<para><computeroutput>void me::RenderMesh::setRotation (Ogre::Quaternion rot)</computeroutput></para></section>
<anchor xml:id="_classme_1_1_render_mesh_1ab94e87bc5223c4ea558dedaa8c5992f8"/><section>
    <title>setScale()</title>
<indexterm><primary>setScale</primary><secondary>me::RenderMesh</secondary></indexterm>
<indexterm><primary>me::RenderMesh</primary><secondary>setScale</secondary></indexterm>
<para><computeroutput>void me::RenderMesh::setScale (const <link linkend="_namespace_ogre_1a8b4adeb18d1b0fcedea1b58bcbc67879">Ogre::Vector3f</link> &amp; scale)</computeroutput></para></section>
<anchor xml:id="_classme_1_1_render_mesh_1ac51564e410f50c8a79d0e03a9ccf3796"/><section>
    <title>setTransform()</title>
<indexterm><primary>setTransform</primary><secondary>me::RenderMesh</secondary></indexterm>
<indexterm><primary>me::RenderMesh</primary><secondary>setTransform</secondary></indexterm>
<para><computeroutput>void me::RenderMesh::setTransform (const <link linkend="_namespace_ogre_1a8b4adeb18d1b0fcedea1b58bcbc67879">Ogre::Vector3f</link> &amp; pos, const <link linkend="_namespace_ogre_1a8b4adeb18d1b0fcedea1b58bcbc67879">Ogre::Vector3f</link> &amp; scale, const Ogre::Quaternion &amp; rot)</computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classme_1_1_render_mesh_1a10ec5689b8d395b7a3313731a67530e5"/><section>
    <title>mEntity</title>
<indexterm><primary>mEntity</primary><secondary>me::RenderMesh</secondary></indexterm>
<indexterm><primary>me::RenderMesh</primary><secondary>mEntity</secondary></indexterm>
<para><computeroutput>Ogre::Entity* me::RenderMesh::mEntity<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classme_1_1_render_mesh_1ab3dc00d2951b2f5ee467f87b2810d460"/><section>
    <title>mMaterialName</title>
<indexterm><primary>mMaterialName</primary><secondary>me::RenderMesh</secondary></indexterm>
<indexterm><primary>me::RenderMesh</primary><secondary>mMaterialName</secondary></indexterm>
<para><computeroutput>std::string me::RenderMesh::mMaterialName<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classme_1_1_render_mesh_1a8ddfbdf2193533e71721139fd2332332"/><section>
    <title>mMeshName</title>
<indexterm><primary>mMeshName</primary><secondary>me::RenderMesh</secondary></indexterm>
<indexterm><primary>me::RenderMesh</primary><secondary>mMeshName</secondary></indexterm>
<para><computeroutput>std::string me::RenderMesh::mMeshName<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classme_1_1_render_mesh_1a7b0503d0a84d1e528ea9c450ab48a0c1"/><section>
    <title>mNode</title>
<indexterm><primary>mNode</primary><secondary>me::RenderMesh</secondary></indexterm>
<indexterm><primary>me::RenderMesh</primary><secondary>mNode</secondary></indexterm>
<para><computeroutput>Ogre::SceneNode* me::RenderMesh::mNode<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following files:</para>
Src/Render/<link linkend="__render_mesh_8h">RenderMesh.h</link>Src/Render/<link linkend="__render_mesh_8cpp">RenderMesh.cpp</link></section>
</section>
