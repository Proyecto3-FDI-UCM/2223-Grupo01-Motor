<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__audio_source_8h_source" xml:lang="en-US">
<title>AudioSource.h</title>
<indexterm><primary>Src/EntityComponent/Components/AudioSource.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
2 <emphasis role="preprocessor">#ifndef&#32;__ENTITYCOMPONENT_AUDIOSOURCE</emphasis>
3 <emphasis role="preprocessor">#define&#32;__ENTITYCOMPONENT_AUDIOSOURCE</emphasis>
4 
5 <emphasis role="preprocessor">#include&#32;&lt;string&gt;</emphasis>
6 
7 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__component_8h">Component.h</link>&quot;</emphasis>
8 
9 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_f_m_o_d">FMOD</link>&#32;{
10 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>Sound;
11 }
12 
13 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceme">me</link>&#32;{
14 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="__motor_engine_a_p_i_8h_1ae7d210fc6a9598f82960577024307219">__MOTORENGINE_API</link>&#32;<link linkend="_classme_1_1_audio_source">AudioSource</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_classme_1_1_component">Component</link>
15 &#32;&#32;&#32;&#32;{
16 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
17 
18 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
19 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Default&#32;constructor</emphasis>
20 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
21 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classme_1_1_audio_source">AudioSource</link>();
22 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classme_1_1_audio_source">~AudioSource</link>();
23 
24 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;start();
25 
26 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;update();
27 
31 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;play();
32 
36 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;stop();
37 
41 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;pause();
42 
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;resume();
47 
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isPlaying();
53 
54 
59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classme_1_1_audio_source_1a5ca6a460d477f066272381801a3bee99">setVolume</link>(<emphasis role="keywordtype">float</emphasis>&#32;value)&#32;{
60 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mVolume&#32;=&#32;value;
61 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
62 
67 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classme_1_1_audio_source_1aeb8529bf0253d9b5a381590e51c5895b">setSource</link>(std::string&#32;source)&#32;{
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mSource&#32;=&#32;source;
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
70 
74 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classme_1_1_audio_source_1a2f5c395ed054590810167de8bee36340">setLoop</link>(<emphasis role="keywordtype">bool</emphasis>&#32;loop)&#32;{
75 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mLoop&#32;=&#32;loop;
76 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
77 
81 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classme_1_1_audio_source_1a99a58dc68d3016d54ebb5e9f8cbfc49a">setIs3D</link>(<emphasis role="keywordtype">bool</emphasis>&#32;is3D)&#32;{
82 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mIs3D&#32;=&#32;is3D;
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
84 
88 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classme_1_1_audio_source_1aa2bc76ebd47588a27e223f2eb67d012f">setPlayOnStart</link>(<emphasis role="keywordtype">bool</emphasis>&#32;playOnStart)&#32;{
89 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mPlayOnStart&#32;=&#32;playOnStart;
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
91 
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_classme_1_1_audio_source_1af282226ee2ddb7fea0fb920ed189cf41">getVolume</link>()&#32;{
97 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mVolume;
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
99 
100 
101 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;mVolume;&#32;&#32;<emphasis role="comment">//&#32;The&#32;volume&#32;of&#32;the&#32;audio</emphasis>
103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FMOD::Sound*&#32;mSound;&#32;<emphasis role="comment">//&#32;The&#32;FMOD&#32;sound&#32;object</emphasis>
104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;mSource;&#32;<emphasis role="comment">//&#32;The&#32;audio&#32;file&#32;to&#32;play</emphasis>
105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;mPlaying;&#32;<emphasis role="comment">//&#32;Whether&#32;the&#32;audio&#32;is&#32;currently&#32;playing&#32;or&#32;not</emphasis>
106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;mLoop;&#32;<emphasis role="comment">//&#32;Whether&#32;the&#32;audio&#32;should&#32;loop&#32;or&#32;not</emphasis>
107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;mIs3D;
108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;mPlayOnStart;
109 
110 &#32;&#32;&#32;&#32;};
111 }
112 
113 
114 <emphasis role="preprocessor">#endif</emphasis>
115 
</programlisting></section>
