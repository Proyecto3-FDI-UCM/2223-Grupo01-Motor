<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__button_8h_source" xml:lang="en-US">
<title>Button.h</title>
<indexterm><primary>Src/Input/Button.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
2 <emphasis role="preprocessor">#ifndef&#32;__INPUT_BUTTON</emphasis>
3 <emphasis role="preprocessor">#define&#32;__INPUT_BUTTON</emphasis>
4 
5 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__motor_engine_a_p_i_8h">MotorEngine/MotorEngineAPI.h</link>&quot;</emphasis>
6 <emphasis role="preprocessor">#include&#32;&lt;string&gt;</emphasis>
7 <emphasis role="preprocessor">#include&#32;&lt;unordered_map&gt;</emphasis>
8 
9 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">union&#32;</emphasis><link linkend="__button_8h_1a33fcc6aa445cb781bfca881e39e5333e">SDL_Event</link>&#32;<link linkend="__button_8h_1a33fcc6aa445cb781bfca881e39e5333e">SDL_Event</link>;
10 <emphasis role="keyword">typedef</emphasis>&#32;int&#32;(__cdecl*&#32;<link linkend="__button_8h_1aeb0e500783d5ab2d59cb0509da33af0c">SDL_EventFilter</link>)&#32;(<emphasis role="keywordtype">void</emphasis>*&#32;userdata,&#32;<link linkend="__button_8h_1a33fcc6aa445cb781bfca881e39e5333e">SDL_Event</link>*&#32;event);
11 
12 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceme">me</link>&#32;{
13 &#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>&#32;InputType&#32;:&#32;int;
14 
19 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="__motor_engine_a_p_i_8h_1ae7d210fc6a9598f82960577024307219">__MOTORENGINE_API</link>&#32;<link linkend="_structme_1_1_button">Button</link>&#32;{
20 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Value</emphasis>
21 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_structme_1_1_button_1ad58d17e945a82434bb904ee99b64143c">pressed</link>;
22 
23 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*Whose&#32;player&#32;this&#32;button&#32;is,&#32;used&#32;in&#32;case&#32;its&#32;a&#32;gamepad&#32;button&#32;press</emphasis>
24 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-1&#32;will&#32;be&#32;considered&#32;as&#32;a&#32;playerless&#32;input.*/</emphasis>
25 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_structme_1_1_button_1aae750ddc36e499fbbcc091ee7272d14d">player</link>;
26 &#32;&#32;&#32;&#32;};
27 
28 &#32;&#32;&#32;&#32;<emphasis role="comment">//Represents&#32;a&#32;physical&#32;button&#32;or&#32;key&#32;that&#32;can&#32;trigger&#32;a&#32;virtual&#32;button.</emphasis>
29 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="__motor_engine_a_p_i_8h_1ae7d210fc6a9598f82960577024307219">__MOTORENGINE_API</link>&#32;<link linkend="_structme_1_1_input">Input</link>&#32;{
30 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
31 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;INPUTTYPE_KEYBOARD&#32;for&#32;keyboard&#32;key&#32;presses</emphasis>
32 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;INPUTTYPE_MOUSE&#32;for&#32;mouse&#32;clicks</emphasis>
33 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;INPUTTYPE_GAMEPAD&#32;for&#32;controller&#32;presses</emphasis>
34 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;INPUTTYPE_NULL&#32;for&#32;invalid&#32;input</emphasis>
35 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
36 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InputType&#32;<link linkend="_structme_1_1_input_1ad80a18dd05ad864a6da82e70dea1af1a">type</link>;
37 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
38 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*Which&#32;key,&#32;mouse&#32;button,&#32;or&#32;controller&#32;button&#32;has&#32;been&#32;pressed.</emphasis>
39 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Represents&#32;a&#32;value&#32;of&#32;KeyboardCode,&#32;MouseClickCode,&#32;MouseWheelCode,</emphasis>
40 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GamepadButtonCode&#32;or&#32;GamepadAxisCode&#32;depending&#32;on&#32;the&#32;type&#32;of&#32;the&#32;event*/</emphasis>
41 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_structme_1_1_input_1abb8d8dd9c37d1bea216affb4c9b8aa5a">which</link>;
42 
43 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*In&#32;case&#32;it&#32;is&#32;a&#32;gamepad&#32;axis&#32;motion,&#32;or&#32;a&#32;mouse&#32;motion,&#32;the&#32;value&#32;will&#32;be&#32;stored&#32;here*/</emphasis>
44 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_structme_1_1_input_1acd194ff45efeb5ed38a7f6cc23f31df3">value</link>;
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
46 
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_structme_1_1_input_1a1d02605a516a0dfa3cd680aa24733d31">operator==</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structme_1_1_input">Input</link>&amp;&#32;i)<emphasis role="keyword">&#32;const</emphasis>
48 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{
49 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;type&#32;==&#32;i.<link linkend="_structme_1_1_input_1ad80a18dd05ad864a6da82e70dea1af1a">type</link>&#32;&amp;&amp;&#32;which&#32;==&#32;i.<link linkend="_structme_1_1_input_1abb8d8dd9c37d1bea216affb4c9b8aa5a">which</link>;
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
51 &#32;&#32;&#32;&#32;};
52 
53 &#32;&#32;&#32;&#32;<emphasis role="comment">//Provides&#32;hash&#32;suppport&#32;for&#32;using&#32;struct&#32;Input&#32;as&#32;a&#32;key&#32;in&#32;std::unordered_map</emphasis>
54 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="__motor_engine_a_p_i_8h_1ae7d210fc6a9598f82960577024307219">__MOTORENGINE_API</link>&#32;<link linkend="_structme_1_1_input_hasher">InputHasher</link>&#32;{
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_structme_1_1_input_hasher_1a73c49166daa33d72cebb98c59c4bcbc3">operator()</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structme_1_1_input">Input</link>&amp;&#32;t)<emphasis role="keyword">&#32;const&#32;</emphasis>{
56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::hash&lt;int&gt;()(t.<link linkend="_structme_1_1_input_1abb8d8dd9c37d1bea216affb4c9b8aa5a">which</link>)&#32;^&#32;std::hash&lt;int&gt;()(t.<link linkend="_structme_1_1_input_1ad80a18dd05ad864a6da82e70dea1af1a">type</link>);
57 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
58 &#32;&#32;&#32;&#32;};
59 
60 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
61 <emphasis role="comment">&#32;&#32;&#32;&#32;Stores&#32;data&#32;for&#32;virtual&#32;buttons&apos;&#32;callbacks.</emphasis>
62 <emphasis role="comment">&#32;&#32;&#32;&#32;*/</emphasis>
63 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="__motor_engine_a_p_i_8h_1ae7d210fc6a9598f82960577024307219">__MOTORENGINE_API</link>&#32;<link linkend="_structme_1_1_on_button_pressed_info">OnButtonPressedInfo</link>&#32;{
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Simple&#32;callback&#32;provided&#32;by&#32;the&#32;user.</emphasis>
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int(*callback)(<emphasis role="keywordtype">void</emphasis>*);&#32;
66 
67 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Additional&#32;userdata&#32;given&#32;to&#32;callback&#32;as&#32;a&#32;parameter.</emphasis>
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>*&#32;<link linkend="_structme_1_1_on_button_pressed_info_1a7f08adf20c54925200f25cdd51ac15d7">additionalData</link>;
69 
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Filtered&#32;callback&#32;that&#32;calls&#32;callback&#32;if&#32;the&#32;event&#32;source&#32;matches&#32;any&#32;of&#32;the&#32;virtual&#32;button&apos;s&#32;bindings.</emphasis>
71 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__button_8h_1aeb0e500783d5ab2d59cb0509da33af0c">SDL_EventFilter</link>&#32;<link linkend="_structme_1_1_on_button_pressed_info_1a8b77a2514ed3f32f28e6c2bc7638856c">filter</link>;
72 
73 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Reference&#32;to&#32;InputManager&apos;s&#32;mButtonBindings&#32;multimap.</emphasis>
74 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::unordered_multimap&lt;Input,&#32;std::string,&#32;InputHasher&gt;*&#32;<link linkend="_structme_1_1_on_button_pressed_info_1a763217dc1bcd45569a6c7ebe08106cf1">buttonBindings</link>;&#32;
75 
76 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Name&#32;of&#32;the&#32;button&#32;this&#32;callback&#32;belongs&#32;to.</emphasis>
77 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;<link linkend="_structme_1_1_on_button_pressed_info_1a49ee0adbdae15793f2f29ce77fd5a706">buttonName</link>;
78 
79 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*Whose&#32;player&#32;this&#32;button&#32;is,&#32;used&#32;in&#32;case&#32;its&#32;a&#32;gamepad&#32;button&#32;press.</emphasis>
80 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;first&#32;player&#32;is&#32;0.</emphasis>
81 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-1&#32;will&#32;be&#32;considered&#32;as&#32;a&#32;playerless&#32;input.*/</emphasis>
82 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_structme_1_1_on_button_pressed_info_1ab6d8a7a6dbd3afc4ebfe924588c83a77">player</link>;
83 &#32;&#32;&#32;&#32;};
84 }
85 
86 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
