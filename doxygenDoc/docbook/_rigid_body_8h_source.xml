<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__rigid_body_8h_source" xml:lang="en-US">
<title>RigidBody.h</title>
<indexterm><primary>Src/EntityComponent/Components/RigidBody.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
2 
3 <emphasis role="preprocessor">#ifndef&#32;__ENTITYCOMPONENT_RIGIDBODY</emphasis>
4 <emphasis role="preprocessor">#define&#32;__ENTITYCOMPONENT_RIGIDBODY</emphasis>
5 
6 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__component_8h">Component.h</link>&quot;</emphasis>
7 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__transform_8h">Transform.h</link>&quot;</emphasis>
8 
9 <emphasis role="keyword">class&#32;</emphasis>btRigidBody;
10 <emphasis role="keyword">class&#32;</emphasis>btTransform;
11 <emphasis role="keyword">class&#32;</emphasis>btQuaternion;
12 <emphasis role="keyword">class&#32;</emphasis>btCollisionShape;
13 
14 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceme">me</link>{
15 
16 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="__motor_engine_a_p_i_8h_1ae7d210fc6a9598f82960577024307219">__MOTORENGINE_API</link>&#32;<link linkend="_classme_1_1_rigid_body">RigidBody</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_classme_1_1_component">Component</link>
17 &#32;&#32;&#32;&#32;{
18 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;mColShape;
19 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;mMvType;
20 
21 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;mMass;
22 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;mFricion;
23 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;mRestitution;
24 
25 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;mIsTrigger;
26 
27 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;btRigidBody*&#32;mBtRigidBody&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
28 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;btTransform*&#32;mBtTransform&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
29 
30 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classme_1_1_transform">Transform</link>*&#32;mTransform&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
31 
32 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
33 
34 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
35 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Set&#32;the&#32;values&#32;of&#32;the&#32;new&#32;RigidBody&#32;that&#32;will&#32;be&#32;created</emphasis>
36 <emphasis role="comment"></emphasis>
37 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;@param&#32;colShape&#32;indicates&#32;the&#32;shape&#32;of&#32;the&#32;rigidbody&#32;(0&#32;=&#32;sphere,&#32;1&#32;=&#32;box,&#32;2&#32;=&#32;cylinder,&#32;3&#32;=&#32;capsule)</emphasis>
38 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;@param&#32;mvType&#32;the&#32;movement&#32;of&#32;the&#32;object&#32;(0&#32;=&#32;Dynamic,&#32;1&#32;=&#32;Static,&#32;2&#32;=&#32;Kinematic)</emphasis>
39 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;@param&#32;mass&#32;mass&#32;of&#32;the&#32;RigidBody</emphasis>
40 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;@param&#32;friction&#32;the&#32;magnitude&#32;friction&#32;force</emphasis>
41 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;@param&#32;restitution&#32;magnitude&#32;of&#32;the&#32;rebounding&#32;ability</emphasis>
42 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;@param&#32;isTrigger&#32;indicates&#32;if&#32;the&#32;body&#32;will&#32;have&#32;collisions</emphasis>
43 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
44 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classme_1_1_rigid_body">RigidBody</link>();
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classme_1_1_rigid_body">~RigidBody</link>();
46 
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
48 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Starts&#32;the&#32;RigidBody&#32;of&#32;the&#32;entity&#32;for&#32;the&#32;physics</emphasis>
49 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;start()&#32;<emphasis role="keyword">override</emphasis>;
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;update()&#32;<emphasis role="keyword">override</emphasis>;
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;lateUpdate()&#32;<emphasis role="keyword">override</emphasis>;
53 
54 
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;setTrigger(<emphasis role="keywordtype">bool</emphasis>&#32;isTrigger);
56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;setMass&#32;(<emphasis role="keywordtype">float</emphasis>&#32;mass);
57 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;setFriction(<emphasis role="keywordtype">float</emphasis>&#32;friction);
58 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;setRestitution(<emphasis role="keywordtype">float</emphasis>&#32;restitution);
59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;setColShape(<emphasis role="keywordtype">int</emphasis>&#32;colShape);
60 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;setMomeventType(<emphasis role="keywordtype">int</emphasis>&#32;mvType);
61 
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;getTrigger();
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;getMass();
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;getFriction();
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;getRestitution();
66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;getColShape();
67 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;getMovementType();
68 
75 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;addForce(<link linkend="_classme_1_1_vector3">Vector3</link>&#32;force,&#32;<link linkend="_classme_1_1_vector3">Vector3</link>&#32;relativePos);
76 
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;addImpulse(<link linkend="_classme_1_1_vector3">Vector3</link>&#32;impulse,&#32;<link linkend="_classme_1_1_vector3">Vector3</link>&#32;relativePos);
84 
85 &#32;&#32;&#32;&#32;};
86 
87 }
88 
89 <emphasis role="preprocessor">#endif</emphasis>
90 
</programlisting></section>
