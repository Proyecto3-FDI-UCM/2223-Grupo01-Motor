<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__animator_8h_source" xml:lang="en-US">
<title>Animator.h</title>
<indexterm><primary>Src/EntityComponent/Components/Animator.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
2 <emphasis role="preprocessor">#ifndef&#32;__ENTITYCOMPONENT_ANIMATOR</emphasis>
3 <emphasis role="preprocessor">#define&#32;__ENTITYCOMPONENT_ANIMATOR</emphasis>
4 
5 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__component_8h">Component.h</link>&quot;</emphasis>
6 <emphasis role="preprocessor">#include&#32;&lt;string&gt;</emphasis>
7 
8 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_ogre">Ogre</link>&#32;{
9 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>AnimationState;
10 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>AnimationStateSet;
11 }
12 
13 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceme">me</link>&#32;{
14 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>MeshRenderer;
15 
16 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="__motor_engine_a_p_i_8h_1ae7d210fc6a9598f82960577024307219">__MOTORENGINE_API</link>&#32;<link linkend="_classme_1_1_animator">Animator</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_classme_1_1_component">Component</link>
17 &#32;&#32;&#32;&#32;{
18 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
19 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classme_1_1_animator">Animator</link>();
20 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classme_1_1_animator">~Animator</link>();
21 
22 
23 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;update()&#32;<emphasis role="keyword">override</emphasis>;
24 
29 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;setActive(<emphasis role="keywordtype">bool</emphasis>&#32;state);
30 
35 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;setLoop(<emphasis role="keywordtype">bool</emphasis>&#32;state);
36 
37 
42 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;getCurrAnimName();
43 
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isActive();
49 
54 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isLoop();
55 
56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
57 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;Returns&#32;whether&#32;the&#32;current&#32;animation&#32;has&#32;ended&#32;or&#32;not</emphasis>
58 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;@return&#32;A&#32;boolean&#32;value&#32;indicating&#32;whether&#32;the&#32;current&#32;animation&#32;has&#32;ended</emphasis>
59 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
60 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;animHasEnded();
61 
62 
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;playAnim(std::string&#32;anim,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;loop&#32;=&#32;<emphasis role="keyword">true</emphasis>);
69 
73 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;stopAnim();
74 
78 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;resumeAnim();
79 
80 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
81 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ogre::AnimationState*&#32;mCurrentState;&#32;<emphasis role="comment">//&#32;Pointer&#32;to&#32;the&#32;current&#32;animation&#32;state</emphasis>
82 
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ogre::AnimationStateSet*&#32;mAnimStatesMap;&#32;<emphasis role="comment">//&#32;Pointer&#32;to&#32;the&#32;animation&#32;state&#32;set</emphasis>
84 
85 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classme_1_1_mesh_renderer">MeshRenderer</link>*&#32;mMesh&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;&#32;&#32;<emphasis role="comment">//&#32;Pointer&#32;to&#32;the&#32;MeshRenderer&#32;component&#32;of&#32;the&#32;Entity</emphasis>
86 
87 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;mStop;&#32;<emphasis role="comment">//&#32;Boolean&#32;value&#32;indicating&#32;whether&#32;the&#32;current&#32;animation&#32;has&#32;been&#32;stopped</emphasis>
88 &#32;&#32;&#32;&#32;};
89 }
90 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;!__EC_ANIMATOR</emphasis>
91 
92 
93 
94 
</programlisting></section>
