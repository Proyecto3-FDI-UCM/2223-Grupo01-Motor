<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__components_factory_8h_source" xml:lang="en-US">
<title>ComponentsFactory.h</title>
<indexterm><primary>Src/EntityComponent/Components/ComponentsFactory.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
2 <emphasis role="preprocessor">#ifndef&#32;__ENTITYCOMPONENT_COMPONENTSFACTORY</emphasis>
3 <emphasis role="preprocessor">#define&#32;__ENTITYCOMPONENT_COMPONENTSFACTORY</emphasis>
4 
5 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__motor_engine_a_p_i_8h">MotorEngine/MotorEngineAPI.h</link>&quot;</emphasis>
6 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__info_scene_8h">EntityComponent/InfoScene.h</link>&quot;</emphasis>
7 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__singleton_8h">Utils/Singleton.h</link>&quot;</emphasis>
8 
9 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceme">me</link>&#32;{
10 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>Component;
11 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>FactoryComponent;
12 
13 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="__motor_engine_a_p_i_8h_1ae7d210fc6a9598f82960577024307219">__MOTORENGINE_API</link>&#32;<link linkend="_classme_1_1_components_factory">ComponentsFactory</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_classme_1_1_singleton">Singleton</link>&lt;ComponentsFactory&gt;
14 &#32;&#32;&#32;&#32;{
15 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;<link linkend="_classme_1_1_singleton">Singleton&lt;ComponentsFactory&gt;</link>;
16 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classme_1_1_components_factory">ComponentsFactory</link>();
17 
18 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::unordered_map&lt;ComponentName,&#32;FactoryComponent*&gt;&#32;mFactories;
19 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
20 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classme_1_1_components_factory">~ComponentsFactory</link>();
21 
22 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classme_1_1_component">me::Component</link>*&#32;create(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespaceme_1a5bb8ed18150e0bc29a11923a7093a347">ComponentName</link>&amp;&#32;name,&#32;<link linkend="_namespaceme_1aa32db0f4d84698471d693fe90639d8e6">Parameters</link>&amp;&#32;params);
23 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;addFactoryComponent(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespaceme_1a5bb8ed18150e0bc29a11923a7093a347">ComponentName</link>&amp;&#32;name,&#32;<link linkend="_classme_1_1_factory_component">FactoryComponent</link>*&#32;factoryComponent);
24 &#32;&#32;&#32;&#32;};
25 
30 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_classme_1_1_components_factory">ComponentsFactory</link>&amp;&#32;<link linkend="_namespaceme_1a2b2e5ee03fa025cbc18185e54c865b08">componentsFactory</link>()&#32;{
31 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<link linkend="_classme_1_1_singleton_1a8810aab25f6fdc043bfac52761a9a260">ComponentsFactory::instance</link>();
32 &#32;&#32;&#32;&#32;}
33 }
34 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
