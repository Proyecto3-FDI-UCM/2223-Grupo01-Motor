<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classme_1_1_particle_system" xml:lang="en-US">
<title>me::ParticleSystem Class Reference</title>
<indexterm><primary>me::ParticleSystem</primary></indexterm>
<para>
<computeroutput>#include &lt;ParticleSystem.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for me::ParticleSystem:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classme_1_1_particle_system.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classme_1_1_particle_system_1a2dbd29f07988c69014758847ebcd7680">ParticleSystem</link> (std::string name, std::string particleName)</para>
</listitem>
            <listitem><para><link linkend="_classme_1_1_particle_system_1a8e228ecd1d9d759c1b784cfef5c4d389">~ParticleSystem</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_classme_1_1_particle_system_1aae4f5e2597b60eb13806ede0320fed6d">start</link> () override</para>
</listitem>
            <listitem><para>void <link linkend="_classme_1_1_particle_system_1ae9553e4244f97cc49c4f44b08096bb4d">update</link> () override</para>
</listitem>
            <listitem><para>void <link linkend="_classme_1_1_particle_system_1a844a04e4dc959dc3c1070f87ef2c4570">setEmitting</link> (bool emitted)</para>
</listitem>
            <listitem><para>void <link linkend="_classme_1_1_particle_system_1a1027ef30bf9435150c2aa617b67699aa">setOffsetPos</link> (<link linkend="_classme_1_1_vector3">Vector3</link> offset)</para>
</listitem>
            <listitem><para>void <link linkend="_classme_1_1_particle_system_1a0bec91f37c753a5fcfce427be7f47710">setOffsetScale</link> (<link linkend="_classme_1_1_vector3">Vector3</link> offset)</para>
</listitem>
        </itemizedlist>
</simplesect>
Public Member Functions inherited from <link linkend="_classme_1_1_component">me::Component</link>        <itemizedlist>
            <listitem><para><link linkend="_classme_1_1_component_1a4dae1070d5cb2b14b49466e64b3095d6">Component</link> ()</para>
</listitem>
            <listitem><para>virtual <link linkend="_classme_1_1_component_1ab2a3844334f7d532196025c32e100799">~Component</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_classme_1_1_component_1a7c5786c94bfaf7b6e110f9fa30feafb3">setEntity</link> (<link linkend="_classme_1_1_entity">Entity</link> *e)</para>
</listitem>
            <listitem><para><link linkend="_classme_1_1_entity">Entity</link> * <link linkend="_classme_1_1_component_1a1c8917fcfda2d8ad66ab487ab726a0cd">getEntity</link> ()</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classme_1_1_component_1a349e2dfff958c956945a12fbcb6951ae">start</link> ()</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classme_1_1_component_1a421049b57bf72b90a48425f772b39aa1">update</link> ()</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classme_1_1_component_1af9625b0308ccd7b22c7871922de0b0a0">lateUpdate</link> ()</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classme_1_1_component_1a4d98175f03ee8266f71d9237b3d23748">OnCollisionEnter</link> (<link linkend="_classme_1_1_entity">Entity</link> *other)</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classme_1_1_component_1a9e024171b2bbed0cedf1476e2879081f">OnCollisionStay</link> (<link linkend="_classme_1_1_entity">Entity</link> *other)</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classme_1_1_component_1a643aad67bcb41b2c936e49e25b78342e">OnCollisionExit</link> (<link linkend="_classme_1_1_entity">Entity</link> *other)</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para>std::string <link linkend="_classme_1_1_particle_system_1ada09ae2be897ba4f732f47999c4ef276">mName</link></para>
</listitem>
            <listitem><para>std::string <link linkend="_classme_1_1_particle_system_1a21a259a3b70a9148483b7d6c23270854">mParticleName</link></para>
</listitem>
            <listitem><para><link linkend="_classme_1_1_transform">Transform</link> * <link linkend="_classme_1_1_particle_system_1a6a94325bf928e26192d758cd9adebf85">mTransform</link></para>
</listitem>
            <listitem><para><link linkend="_classme_1_1_vector3">Vector3</link> <link linkend="_classme_1_1_particle_system_1aa403cd5a34a33e79091543878cacebb5">mOffsetPos</link></para>
</listitem>
            <listitem><para><link linkend="_classme_1_1_vector3">Vector3</link> <link linkend="_classme_1_1_particle_system_1a30c0a6ed66e7410efa94c255d7b2c4f0">mOffsetScale</link></para>
</listitem>
        </itemizedlist>
</simplesect>
Protected Attributes inherited from <link linkend="_classme_1_1_component">me::Component</link>        <itemizedlist>
            <listitem><para><link linkend="_classme_1_1_entity">Entity</link> * <link linkend="_classme_1_1_component_1a89862182926907ae608d3244d1d4e6d1">mEntity</link></para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Additional Inherited Members    </title>
Public Attributes inherited from <link linkend="_classme_1_1_component">me::Component</link>        <itemizedlist>
            <listitem><para>bool <link linkend="_classme_1_1_component_1ab29a0b2c3a9ad3e4e0cf81d8fdbff4f3">enabled</link> = true</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>The <link linkend="_classme_1_1_particle_system">ParticleSystem</link> class represents a visual particle system in 3D space and can be attached to entities. </para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classme_1_1_particle_system_1a2dbd29f07988c69014758847ebcd7680"/><section>
    <title>ParticleSystem()</title>
<indexterm><primary>ParticleSystem</primary><secondary>me::ParticleSystem</secondary></indexterm>
<indexterm><primary>me::ParticleSystem</primary><secondary>ParticleSystem</secondary></indexterm>
<para><computeroutput>me::ParticleSystem::ParticleSystem (std::string name, std::string particleName)</computeroutput></para>
<para>Construct a new particle system component and save necesary info 
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>name</entry><entry>
<para>name saved in om() map and used for particle that attached in node </para>
</entry>
                            </row>
                            <row>
<entry>particleName</entry><entry>
<para>name of particle that is written int ParticleResource.particle </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_classme_1_1_particle_system_1a8e228ecd1d9d759c1b784cfef5c4d389"/><section>
    <title>~ParticleSystem()</title>
<indexterm><primary>~ParticleSystem</primary><secondary>me::ParticleSystem</secondary></indexterm>
<indexterm><primary>me::ParticleSystem</primary><secondary>~ParticleSystem</secondary></indexterm>
<para><computeroutput>me::ParticleSystem::~ParticleSystem ( )</computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classme_1_1_particle_system_1a844a04e4dc959dc3c1070f87ef2c4570"/><section>
    <title>setEmitting()</title>
<indexterm><primary>setEmitting</primary><secondary>me::ParticleSystem</secondary></indexterm>
<indexterm><primary>me::ParticleSystem</primary><secondary>setEmitting</secondary></indexterm>
<para><computeroutput>void me::ParticleSystem::setEmitting (bool emitted)</computeroutput></para>
<para>Set it emitting state </para>
</section>
<anchor xml:id="_classme_1_1_particle_system_1a1027ef30bf9435150c2aa617b67699aa"/><section>
    <title>setOffsetPos()</title>
<indexterm><primary>setOffsetPos</primary><secondary>me::ParticleSystem</secondary></indexterm>
<indexterm><primary>me::ParticleSystem</primary><secondary>setOffsetPos</secondary></indexterm>
<para><computeroutput>void me::ParticleSystem::setOffsetPos (<link linkend="_classme_1_1_vector3">Vector3</link> offset)</computeroutput></para></section>
<anchor xml:id="_classme_1_1_particle_system_1a0bec91f37c753a5fcfce427be7f47710"/><section>
    <title>setOffsetScale()</title>
<indexterm><primary>setOffsetScale</primary><secondary>me::ParticleSystem</secondary></indexterm>
<indexterm><primary>me::ParticleSystem</primary><secondary>setOffsetScale</secondary></indexterm>
<para><computeroutput>void me::ParticleSystem::setOffsetScale (<link linkend="_classme_1_1_vector3">Vector3</link> offset)</computeroutput></para></section>
<anchor xml:id="_classme_1_1_particle_system_1aae4f5e2597b60eb13806ede0320fed6d"/><section>
    <title>start()</title>
<indexterm><primary>start</primary><secondary>me::ParticleSystem</secondary></indexterm>
<indexterm><primary>me::ParticleSystem</primary><secondary>start</secondary></indexterm>
<para><computeroutput>void me::ParticleSystem::start ( )<computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para>
<para>Get info for mTransform and create (ogreParticleSystem) and set the start pos </para>
<para>
Reimplemented from <link linkend="_classme_1_1_component_1a349e2dfff958c956945a12fbcb6951ae">me::Component</link>.</para>
</section>
<anchor xml:id="_classme_1_1_particle_system_1ae9553e4244f97cc49c4f44b08096bb4d"/><section>
    <title>update()</title>
<indexterm><primary>update</primary><secondary>me::ParticleSystem</secondary></indexterm>
<indexterm><primary>me::ParticleSystem</primary><secondary>update</secondary></indexterm>
<para><computeroutput>void me::ParticleSystem::update ( )<computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para>
<para>Update transform info to particle(ogreParticleSystem) </para>
<para>
Reimplemented from <link linkend="_classme_1_1_component_1a421049b57bf72b90a48425f772b39aa1">me::Component</link>.</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classme_1_1_particle_system_1ada09ae2be897ba4f732f47999c4ef276"/><section>
    <title>mName</title>
<indexterm><primary>mName</primary><secondary>me::ParticleSystem</secondary></indexterm>
<indexterm><primary>me::ParticleSystem</primary><secondary>mName</secondary></indexterm>
<para><computeroutput>std::string me::ParticleSystem::mName<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classme_1_1_particle_system_1aa403cd5a34a33e79091543878cacebb5"/><section>
    <title>mOffsetPos</title>
<indexterm><primary>mOffsetPos</primary><secondary>me::ParticleSystem</secondary></indexterm>
<indexterm><primary>me::ParticleSystem</primary><secondary>mOffsetPos</secondary></indexterm>
<para><computeroutput><link linkend="_classme_1_1_vector3">Vector3</link> me::ParticleSystem::mOffsetPos<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classme_1_1_particle_system_1a30c0a6ed66e7410efa94c255d7b2c4f0"/><section>
    <title>mOffsetScale</title>
<indexterm><primary>mOffsetScale</primary><secondary>me::ParticleSystem</secondary></indexterm>
<indexterm><primary>me::ParticleSystem</primary><secondary>mOffsetScale</secondary></indexterm>
<para><computeroutput><link linkend="_classme_1_1_vector3">Vector3</link> me::ParticleSystem::mOffsetScale<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classme_1_1_particle_system_1a21a259a3b70a9148483b7d6c23270854"/><section>
    <title>mParticleName</title>
<indexterm><primary>mParticleName</primary><secondary>me::ParticleSystem</secondary></indexterm>
<indexterm><primary>me::ParticleSystem</primary><secondary>mParticleName</secondary></indexterm>
<para><computeroutput>std::string me::ParticleSystem::mParticleName<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classme_1_1_particle_system_1a6a94325bf928e26192d758cd9adebf85"/><section>
    <title>mTransform</title>
<indexterm><primary>mTransform</primary><secondary>me::ParticleSystem</secondary></indexterm>
<indexterm><primary>me::ParticleSystem</primary><secondary>mTransform</secondary></indexterm>
<para><computeroutput><link linkend="_classme_1_1_transform">Transform</link>* me::ParticleSystem::mTransform<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following files:</para>
Src/EntityComponent/Components/<link linkend="__particle_system_8h">ParticleSystem.h</link>Src/EntityComponent/Components/<link linkend="__particle_system_8cpp">ParticleSystem.cpp</link></section>
</section>
