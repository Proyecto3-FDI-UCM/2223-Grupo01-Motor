<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classme_1_1_camera" xml:lang="en-US">
<title>me::Camera Class Reference</title>
<indexterm><primary>me::Camera</primary></indexterm>
<para>
<computeroutput>#include &lt;Camera.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for me::Camera:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classme_1_1_camera.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classme_1_1_camera_1ab056bc235ad9333533061de828040d9b">Camera</link> ()</para>
</listitem>
            <listitem><para><link linkend="_classme_1_1_camera_1a018b4f90ee65cba858d74b98a22afad9">~Camera</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_classme_1_1_camera_1a2703d4f36193fa328b0fae6be26260e2">setName</link> (std::string name)</para>
</listitem>
            <listitem><para>void <link linkend="_classme_1_1_camera_1a086be3808300bb5f7381fb75c5dfcc39">setNearDistance</link> (int nearDistance)</para>
</listitem>
            <listitem><para>void <link linkend="_classme_1_1_camera_1a7ebd57ecfe7fdac4f05ec17085a59894">setFarDistance</link> (int farDistance)</para>
</listitem>
            <listitem><para>void <link linkend="_classme_1_1_camera_1afd714756c07e4e772affef8ce4e70fd2">setAutoRadio</link> (bool autoRadio)</para>
</listitem>
            <listitem><para>void <link linkend="_classme_1_1_camera_1abb44256375ca1417fa507be047be96b2">setZOrder</link> (int zOrder)</para>
</listitem>
            <listitem><para>void <link linkend="_classme_1_1_camera_1a83dc55560d8b19a266afc5f2e079e3e9">setLookAt</link> (<link linkend="_classme_1_1_vector3">Vector3</link> lookAt)</para>
</listitem>
            <listitem><para>void <link linkend="_classme_1_1_camera_1a733c8cf61120248beaa21cca6e2af3f1">start</link> () override</para>
</listitem>
            <listitem><para>void <link linkend="_classme_1_1_camera_1ad64b448ab73a9d402a22b212d321ad53">update</link> () override</para>
</listitem>
            <listitem><para>void <link linkend="_classme_1_1_camera_1a252372e285f398b68f0dae0598e2b02c">setStatic</link> (bool stat)</para>
</listitem>
            <listitem><para>void <link linkend="_classme_1_1_camera_1a406770d1481fcf5628e69701ccaf5b19">setViewportDimension</link> (float left, float top, float width, float height)</para>
</listitem>
        </itemizedlist>
</simplesect>
Public Member Functions inherited from <link linkend="_classme_1_1_component">me::Component</link>        <itemizedlist>
            <listitem><para><link linkend="_classme_1_1_component_1a4dae1070d5cb2b14b49466e64b3095d6">Component</link> ()</para>
</listitem>
            <listitem><para>virtual <link linkend="_classme_1_1_component_1ab2a3844334f7d532196025c32e100799">~Component</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_classme_1_1_component_1a7c5786c94bfaf7b6e110f9fa30feafb3">setEntity</link> (<link linkend="_classme_1_1_entity">Entity</link> *e)</para>
</listitem>
            <listitem><para><link linkend="_classme_1_1_entity">Entity</link> * <link linkend="_classme_1_1_component_1a1c8917fcfda2d8ad66ab487ab726a0cd">getEntity</link> ()</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classme_1_1_component_1a349e2dfff958c956945a12fbcb6951ae">start</link> ()</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classme_1_1_component_1a421049b57bf72b90a48425f772b39aa1">update</link> ()</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classme_1_1_component_1af9625b0308ccd7b22c7871922de0b0a0">lateUpdate</link> ()</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classme_1_1_component_1a4d98175f03ee8266f71d9237b3d23748">OnCollisionEnter</link> (<link linkend="_classme_1_1_entity">Entity</link> *other)</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classme_1_1_component_1a9e024171b2bbed0cedf1476e2879081f">OnCollisionStay</link> (<link linkend="_classme_1_1_entity">Entity</link> *other)</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classme_1_1_component_1a643aad67bcb41b2c936e49e25b78342e">OnCollisionExit</link> (<link linkend="_classme_1_1_entity">Entity</link> *other)</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para>std::string <link linkend="_classme_1_1_camera_1abdcff56f8591e11001a6e90d2813af9e">mName</link></para>
</listitem>
            <listitem><para>int <link linkend="_classme_1_1_camera_1aeca43b11e5398b3c2fd879101234517c">mNearDistance</link></para>
</listitem>
            <listitem><para>int <link linkend="_classme_1_1_camera_1a9e635f68597a0be0836fd4981353c476">mFarDistance</link></para>
</listitem>
            <listitem><para>bool <link linkend="_classme_1_1_camera_1af9dc9156976b4d8c7c1e74c911491a7e">mAutoRadio</link></para>
</listitem>
            <listitem><para>int <link linkend="_classme_1_1_camera_1a163337a30044c6020e3771029738bea4">mZOrder</link></para>
</listitem>
            <listitem><para><link linkend="_classme_1_1_vector3">Vector3</link> <link linkend="_classme_1_1_camera_1ae449ffbacf0da4c1ff0019223ec479d3">mLookAt</link></para>
</listitem>
            <listitem><para><link linkend="_classme_1_1_transform">Transform</link> * <link linkend="_classme_1_1_camera_1a99b0b0754bdc90cf1794df0e4f017d87">mTransform</link></para>
</listitem>
            <listitem><para>bool <link linkend="_classme_1_1_camera_1a91a53aeb26201c9c8f3a9c8e1484d0ce">mStaticObject</link> = true</para>
</listitem>
        </itemizedlist>
</simplesect>
Protected Attributes inherited from <link linkend="_classme_1_1_component">me::Component</link>        <itemizedlist>
            <listitem><para><link linkend="_classme_1_1_entity">Entity</link> * <link linkend="_classme_1_1_component_1a89862182926907ae608d3244d1d4e6d1">mEntity</link></para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Additional Inherited Members    </title>
Public Attributes inherited from <link linkend="_classme_1_1_component">me::Component</link>        <itemizedlist>
            <listitem><para>bool <link linkend="_classme_1_1_component_1ab29a0b2c3a9ad3e4e0cf81d8fdbff4f3">enabled</link> = true</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>The <link linkend="_classme_1_1_camera">Camera</link> class create camera(Viewer) in scene </para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classme_1_1_camera_1ab056bc235ad9333533061de828040d9b"/><section>
    <title>Camera()</title>
<indexterm><primary>Camera</primary><secondary>me::Camera</secondary></indexterm>
<indexterm><primary>me::Camera</primary><secondary>Camera</secondary></indexterm>
<para><computeroutput>me::Camera::Camera ( )</computeroutput></para></section>
<anchor xml:id="_classme_1_1_camera_1a018b4f90ee65cba858d74b98a22afad9"/><section>
    <title>~Camera()</title>
<indexterm><primary>~Camera</primary><secondary>me::Camera</secondary></indexterm>
<indexterm><primary>me::Camera</primary><secondary>~Camera</secondary></indexterm>
<para><computeroutput>me::Camera::~Camera ( )</computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classme_1_1_camera_1afd714756c07e4e772affef8ce4e70fd2"/><section>
    <title>setAutoRadio()</title>
<indexterm><primary>setAutoRadio</primary><secondary>me::Camera</secondary></indexterm>
<indexterm><primary>me::Camera</primary><secondary>setAutoRadio</secondary></indexterm>
<para><computeroutput>void me::Camera::setAutoRadio (bool autoRadio)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classme_1_1_camera_1a7ebd57ecfe7fdac4f05ec17085a59894"/><section>
    <title>setFarDistance()</title>
<indexterm><primary>setFarDistance</primary><secondary>me::Camera</secondary></indexterm>
<indexterm><primary>me::Camera</primary><secondary>setFarDistance</secondary></indexterm>
<para><computeroutput>void me::Camera::setFarDistance (int farDistance)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classme_1_1_camera_1a83dc55560d8b19a266afc5f2e079e3e9"/><section>
    <title>setLookAt()</title>
<indexterm><primary>setLookAt</primary><secondary>me::Camera</secondary></indexterm>
<indexterm><primary>me::Camera</primary><secondary>setLookAt</secondary></indexterm>
<para><computeroutput>void me::Camera::setLookAt (<link linkend="_classme_1_1_vector3">Vector3</link> lookAt)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classme_1_1_camera_1a2703d4f36193fa328b0fae6be26260e2"/><section>
    <title>setName()</title>
<indexterm><primary>setName</primary><secondary>me::Camera</secondary></indexterm>
<indexterm><primary>me::Camera</primary><secondary>setName</secondary></indexterm>
<para><computeroutput>void me::Camera::setName (std::string name)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classme_1_1_camera_1a086be3808300bb5f7381fb75c5dfcc39"/><section>
    <title>setNearDistance()</title>
<indexterm><primary>setNearDistance</primary><secondary>me::Camera</secondary></indexterm>
<indexterm><primary>me::Camera</primary><secondary>setNearDistance</secondary></indexterm>
<para><computeroutput>void me::Camera::setNearDistance (int nearDistance)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classme_1_1_camera_1a252372e285f398b68f0dae0598e2b02c"/><section>
    <title>setStatic()</title>
<indexterm><primary>setStatic</primary><secondary>me::Camera</secondary></indexterm>
<indexterm><primary>me::Camera</primary><secondary>setStatic</secondary></indexterm>
<para><computeroutput>void me::Camera::setStatic (bool stat)</computeroutput></para>
<para>Set it is static entity or not </para>
</section>
<anchor xml:id="_classme_1_1_camera_1a406770d1481fcf5628e69701ccaf5b19"/><section>
    <title>setViewportDimension()</title>
<indexterm><primary>setViewportDimension</primary><secondary>me::Camera</secondary></indexterm>
<indexterm><primary>me::Camera</primary><secondary>setViewportDimension</secondary></indexterm>
<para><computeroutput>void me::Camera::setViewportDimension (float left, float top, float width, float height)</computeroutput></para>
<para>Set dimension to the viewport of the camera with this name 
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>name</entry><entry>
<para>name of camera </para>
</entry>
                            </row>
                            <row>
<entry>left</entry><entry>
<para>left point of viewport in range 0.0 to 1.0 </para>
</entry>
                            </row>
                            <row>
<entry>top</entry><entry>
<para>top point of viewport in range 0.0 to 1.0 </para>
</entry>
                            </row>
                            <row>
<entry>width</entry><entry>
<para>width of viewport in range 0.0 to 1.0 </para>
</entry>
                            </row>
                            <row>
<entry>height</entry><entry>
<para>height of viewport in range 0.0 to 1.0 </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>false: if it doesn&apos;t exist </para>

<para>true: if succeed </para>
</formalpara>
</para>
</section>
<anchor xml:id="_classme_1_1_camera_1abb44256375ca1417fa507be047be96b2"/><section>
    <title>setZOrder()</title>
<indexterm><primary>setZOrder</primary><secondary>me::Camera</secondary></indexterm>
<indexterm><primary>me::Camera</primary><secondary>setZOrder</secondary></indexterm>
<para><computeroutput>void me::Camera::setZOrder (int zOrder)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classme_1_1_camera_1a733c8cf61120248beaa21cca6e2af3f1"/><section>
    <title>start()</title>
<indexterm><primary>start</primary><secondary>me::Camera</secondary></indexterm>
<indexterm><primary>me::Camera</primary><secondary>start</secondary></indexterm>
<para><computeroutput>void me::Camera::start ( )<computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para>
<para>Get info for mTransform and create ogreCamera and set the start pos </para>
<para>
Reimplemented from <link linkend="_classme_1_1_component_1a349e2dfff958c956945a12fbcb6951ae">me::Component</link>.</para>
</section>
<anchor xml:id="_classme_1_1_camera_1ad64b448ab73a9d402a22b212d321ad53"/><section>
    <title>update()</title>
<indexterm><primary>update</primary><secondary>me::Camera</secondary></indexterm>
<indexterm><primary>me::Camera</primary><secondary>update</secondary></indexterm>
<para><computeroutput>void me::Camera::update ( )<computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para>
<para>Update transform info to camera node </para>
<para>
Reimplemented from <link linkend="_classme_1_1_component_1a421049b57bf72b90a48425f772b39aa1">me::Component</link>.</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classme_1_1_camera_1af9dc9156976b4d8c7c1e74c911491a7e"/><section>
    <title>mAutoRadio</title>
<indexterm><primary>mAutoRadio</primary><secondary>me::Camera</secondary></indexterm>
<indexterm><primary>me::Camera</primary><secondary>mAutoRadio</secondary></indexterm>
<para><computeroutput>bool me::Camera::mAutoRadio<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classme_1_1_camera_1a9e635f68597a0be0836fd4981353c476"/><section>
    <title>mFarDistance</title>
<indexterm><primary>mFarDistance</primary><secondary>me::Camera</secondary></indexterm>
<indexterm><primary>me::Camera</primary><secondary>mFarDistance</secondary></indexterm>
<para><computeroutput>int me::Camera::mFarDistance<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classme_1_1_camera_1ae449ffbacf0da4c1ff0019223ec479d3"/><section>
    <title>mLookAt</title>
<indexterm><primary>mLookAt</primary><secondary>me::Camera</secondary></indexterm>
<indexterm><primary>me::Camera</primary><secondary>mLookAt</secondary></indexterm>
<para><computeroutput><link linkend="_classme_1_1_vector3">Vector3</link> me::Camera::mLookAt<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classme_1_1_camera_1abdcff56f8591e11001a6e90d2813af9e"/><section>
    <title>mName</title>
<indexterm><primary>mName</primary><secondary>me::Camera</secondary></indexterm>
<indexterm><primary>me::Camera</primary><secondary>mName</secondary></indexterm>
<para><computeroutput>std::string me::Camera::mName<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classme_1_1_camera_1aeca43b11e5398b3c2fd879101234517c"/><section>
    <title>mNearDistance</title>
<indexterm><primary>mNearDistance</primary><secondary>me::Camera</secondary></indexterm>
<indexterm><primary>me::Camera</primary><secondary>mNearDistance</secondary></indexterm>
<para><computeroutput>int me::Camera::mNearDistance<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classme_1_1_camera_1a91a53aeb26201c9c8f3a9c8e1484d0ce"/><section>
    <title>mStaticObject</title>
<indexterm><primary>mStaticObject</primary><secondary>me::Camera</secondary></indexterm>
<indexterm><primary>me::Camera</primary><secondary>mStaticObject</secondary></indexterm>
<para><computeroutput>bool me::Camera::mStaticObject = true<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classme_1_1_camera_1a99b0b0754bdc90cf1794df0e4f017d87"/><section>
    <title>mTransform</title>
<indexterm><primary>mTransform</primary><secondary>me::Camera</secondary></indexterm>
<indexterm><primary>me::Camera</primary><secondary>mTransform</secondary></indexterm>
<para><computeroutput><link linkend="_classme_1_1_transform">Transform</link>* me::Camera::mTransform<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classme_1_1_camera_1a163337a30044c6020e3771029738bea4"/><section>
    <title>mZOrder</title>
<indexterm><primary>mZOrder</primary><secondary>me::Camera</secondary></indexterm>
<indexterm><primary>me::Camera</primary><secondary>mZOrder</secondary></indexterm>
<para><computeroutput>int me::Camera::mZOrder<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following files:</para>
Src/EntityComponent/Components/<link linkend="__camera_8h">Camera.h</link>Src/EntityComponent/Components/<link linkend="__camera_8cpp">Camera.cpp</link></section>
</section>
