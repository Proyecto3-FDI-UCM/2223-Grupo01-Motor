<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classme_1_1_physics_manager" xml:lang="en-US">
<title>me::PhysicsManager Class Reference</title>
<indexterm><primary>me::PhysicsManager</primary></indexterm>
<para>
<computeroutput>#include &lt;PhysicsManager.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for me::PhysicsManager:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classme_1_1_physics_manager.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classme_1_1_physics_manager_1ae258342ca61ad01676c12af162fa5de4">~PhysicsManager</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_classme_1_1_physics_manager_1a5193cc56360379350eecb952d607805d">start</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_classme_1_1_physics_manager_1aeb52685f076c27dd71a6812d20eb8f8e">addRigidBody</link> (btRigidBody *rigidBody)</para>
</listitem>
            <listitem><para>void <link linkend="_classme_1_1_physics_manager_1a2c0533df797d3a73ef701771efa01a94">addVehicle</link> (btActionInterface *vehicle)</para>
</listitem>
            <listitem><para>btCollisionShape * <link linkend="_classme_1_1_physics_manager_1a75737121808c5c7711729d9d8cd4f05e">createShape</link> (<link linkend="__physics_manager_8h_1a3c6c49dd4d974c67346f991bc443b14b">Shapes</link> shape, const btVector3 &amp;scale)</para>
</listitem>
            <listitem><para>btRigidBody * <link linkend="_classme_1_1_physics_manager_1ad020f481e47299f0758d1953c9974d2b">createRigidBody</link> (btTransform *transform, const btVector3 &amp;scale, <link linkend="__physics_manager_8h_1a3c6c49dd4d974c67346f991bc443b14b">Shapes</link> shape, <link linkend="__physics_manager_8h_1a8a93b61bc797a7d1907f42796a252493">MovementType</link> mvType, bool isTrigger, float friction, float &amp;mass, float restitution)</para>
</listitem>
            <listitem><para>void <link linkend="_classme_1_1_physics_manager_1a6c899ac34fc670d38f6d3c6809eed3d9">update</link> (const float &amp;dt)</para>
</listitem>
        </itemizedlist>
</simplesect>
Public Member Functions inherited from <link linkend="_classme_1_1_singleton">me::Singleton&lt; PhysicsManager &gt;</link>        <itemizedlist>
            <listitem><para><link linkend="_classme_1_1_singleton_1a70f85c079fd020a8655eed54e7189845">Singleton</link> (const <link linkend="_classme_1_1_singleton">Singleton</link>&lt; <link linkend="_classme_1_1_physics_manager">PhysicsManager</link> &gt; &amp;o)=delete</para>
</listitem>
            <listitem><para><link linkend="_classme_1_1_singleton">Singleton</link>&lt; <link linkend="_classme_1_1_physics_manager">PhysicsManager</link> &gt; &amp; <link linkend="_classme_1_1_singleton_1a6745ba60837f9347a75c0cfc27fadfb0">operator=</link> (const <link linkend="_classme_1_1_singleton">Singleton</link>&lt; <link linkend="_classme_1_1_physics_manager">PhysicsManager</link> &gt; &amp;o)=delete</para>
</listitem>
            <listitem><para>virtual <link linkend="_classme_1_1_singleton_1a576834dfbf95c3b929511d2a588866d1">~Singleton</link> ()</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Additional Inherited Members    </title>
Static Public Member Functions inherited from <link linkend="_classme_1_1_singleton">me::Singleton&lt; PhysicsManager &gt;</link>        <itemizedlist>
            <listitem><para>static <link linkend="_classme_1_1_physics_manager">PhysicsManager</link> * <link linkend="_classme_1_1_singleton_1a919633966a5db8336cffa09f28fc2623">init</link> (Targs &amp;&amp;...args)</para>
</listitem>
            <listitem><para>static <link linkend="_classme_1_1_physics_manager">PhysicsManager</link> * <link linkend="_classme_1_1_singleton_1a8810aab25f6fdc043bfac52761a9a260">instance</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
Protected Member Functions inherited from <link linkend="_classme_1_1_singleton">me::Singleton&lt; PhysicsManager &gt;</link>        <itemizedlist>
            <listitem><para><link linkend="_classme_1_1_singleton_1af5127d54d6c6904173541b404903b599">Singleton</link> ()</para>
</listitem>
        </itemizedlist>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classme_1_1_physics_manager_1ae258342ca61ad01676c12af162fa5de4"/><section>
    <title>~PhysicsManager()</title>
<indexterm><primary>~PhysicsManager</primary><secondary>me::PhysicsManager</secondary></indexterm>
<indexterm><primary>me::PhysicsManager</primary><secondary>~PhysicsManager</secondary></indexterm>
<para><computeroutput>me::PhysicsManager::~PhysicsManager ( )</computeroutput></para>
<para>Destructor for the <link linkend="_classme_1_1_physics_manager">PhysicsManager</link> class. TO DO. </para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classme_1_1_physics_manager_1aeb52685f076c27dd71a6812d20eb8f8e"/><section>
    <title>addRigidBody()</title>
<indexterm><primary>addRigidBody</primary><secondary>me::PhysicsManager</secondary></indexterm>
<indexterm><primary>me::PhysicsManager</primary><secondary>addRigidBody</secondary></indexterm>
<para><computeroutput>void me::PhysicsManager::addRigidBody (btRigidBody * rigidBody)</computeroutput></para>
<para>Adds a rigid body to the dynamics world. The rigid body will be subject to physical forces and will interact with other objects in the world.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>rigidBody</entry><entry>
<para>A pointer to the btRigidBody to add to the dynamics world. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_classme_1_1_physics_manager_1a2c0533df797d3a73ef701771efa01a94"/><section>
    <title>addVehicle()</title>
<indexterm><primary>addVehicle</primary><secondary>me::PhysicsManager</secondary></indexterm>
<indexterm><primary>me::PhysicsManager</primary><secondary>addVehicle</secondary></indexterm>
<para><computeroutput>void me::PhysicsManager::addVehicle (btActionInterface * vehicle)</computeroutput></para>
<para>Adds a vehicle to the dynamics world. The vehicle will be subject to physical forces and will interact with other objects in the world.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>vehicle</entry><entry>
<para>A pointer to the btActionInterface that represents the vehicle. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_classme_1_1_physics_manager_1ad020f481e47299f0758d1953c9974d2b"/><section>
    <title>createRigidBody()</title>
<indexterm><primary>createRigidBody</primary><secondary>me::PhysicsManager</secondary></indexterm>
<indexterm><primary>me::PhysicsManager</primary><secondary>createRigidBody</secondary></indexterm>
<para><computeroutput>btRigidBody * me::PhysicsManager::createRigidBody (btTransform * transform, const btVector3 &amp; scale, <link linkend="__physics_manager_8h_1a3c6c49dd4d974c67346f991bc443b14b">Shapes</link> shape, <link linkend="__physics_manager_8h_1a8a93b61bc797a7d1907f42796a252493">MovementType</link> mvType, bool isTrigger, float friction, float &amp; mass, float restitution)</computeroutput></para></section>
<anchor xml:id="_classme_1_1_physics_manager_1a75737121808c5c7711729d9d8cd4f05e"/><section>
    <title>createShape()</title>
<indexterm><primary>createShape</primary><secondary>me::PhysicsManager</secondary></indexterm>
<indexterm><primary>me::PhysicsManager</primary><secondary>createShape</secondary></indexterm>
<para><computeroutput>btCollisionShape * me::PhysicsManager::createShape (<link linkend="__physics_manager_8h_1a3c6c49dd4d974c67346f991bc443b14b">Shapes</link> shape, const btVector3 &amp; scale)</computeroutput></para></section>
<anchor xml:id="_classme_1_1_physics_manager_1a5193cc56360379350eecb952d607805d"/><section>
    <title>start()</title>
<indexterm><primary>start</primary><secondary>me::PhysicsManager</secondary></indexterm>
<indexterm><primary>me::PhysicsManager</primary><secondary>start</secondary></indexterm>
<para><computeroutput>void me::PhysicsManager::start ( )</computeroutput></para>
<para>Initializes a default collision configuration, a collision dispatcher, a broadphase interface, and a dynamics world. </para>
</section>
<anchor xml:id="_classme_1_1_physics_manager_1a6c899ac34fc670d38f6d3c6809eed3d9"/><section>
    <title>update()</title>
<indexterm><primary>update</primary><secondary>me::PhysicsManager</secondary></indexterm>
<indexterm><primary>me::PhysicsManager</primary><secondary>update</secondary></indexterm>
<para><computeroutput>void me::PhysicsManager::update (const float &amp; dt)</computeroutput></para></section>
<para>
The documentation for this class was generated from the following files:</para>
Src/Physics/<link linkend="__physics_manager_8h">PhysicsManager.h</link>Src/Physics/<link linkend="__physics_manager_8cpp">PhysicsManager.cpp</link></section>
</section>
