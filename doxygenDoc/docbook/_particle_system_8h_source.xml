<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__particle_system_8h_source" xml:lang="en-US">
<title>ParticleSystem.h</title>
<indexterm><primary>Src/EntityComponent/Components/ParticleSystem.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
2 
3 <emphasis role="preprocessor">#ifndef&#32;__ENTITYCOMPONENT_PARTICLESYSTEM</emphasis>
4 <emphasis role="preprocessor">#define&#32;__ENTITYCOMPONENT_PARTICLESYSTEM</emphasis>
5 
6 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__component_8h">Component.h</link>&quot;</emphasis>
7 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__vector3_8h">Utils/Vector3.h</link>&quot;</emphasis>
8 <emphasis role="preprocessor">#include&#32;&lt;string&gt;</emphasis>
9 <emphasis role="preprocessor">#include&#32;&lt;list&gt;</emphasis>
10 
11 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceme">me</link>&#32;{
12 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>Transform;
13 
17 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="__motor_engine_a_p_i_8h_1ae7d210fc6a9598f82960577024307219">__MOTORENGINE_API</link>&#32;<link linkend="_classme_1_1_particle_system">ParticleSystem</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_classme_1_1_component">Component</link>
18 &#32;&#32;&#32;&#32;{
19 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
20 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>:
21 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//name&#32;for&#32;om()&#32;map&#32;and&#32;for&#32;particle&#32;system&#32;that&#32;attached&#32;in&#32;node</emphasis>
22 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;<link linkend="_classme_1_1_particle_system_1ada09ae2be897ba4f732f47999c4ef276">mName</link>;
23 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//name&#32;of&#32;particle&#32;that&#32;is&#32;written&#32;int&#32;ParticleResource.particle</emphasis>
24 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;<link linkend="_classme_1_1_particle_system_1a21a259a3b70a9148483b7d6c23270854">mParticleName</link>;
25 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//componenet&#32;transform&#32;of&#32;this.Entity</emphasis>
26 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classme_1_1_transform">Transform</link>*&#32;<link linkend="_classme_1_1_particle_system_1a6a94325bf928e26192d758cd9adebf85">mTransform</link>;
27 
28 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classme_1_1_vector3">Vector3</link>&#32;<link linkend="_classme_1_1_particle_system_1aa403cd5a34a33e79091543878cacebb5">mOffsetPos</link>;
29 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classme_1_1_vector3">Vector3</link>&#32;<link linkend="_classme_1_1_particle_system_1a30c0a6ed66e7410efa94c255d7b2c4f0">mOffsetScale</link>;
30 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
31 
32 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
33 
39 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classme_1_1_particle_system">ParticleSystem</link>(std::string&#32;name,&#32;std::string&#32;particleName);
40 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Destroy&#32;om()&#32;map&#32;saved&#32;particle(ogreParticleSystem)</emphasis>
41 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classme_1_1_particle_system">~ParticleSystem</link>();
42 
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;start()&#32;<emphasis role="keyword">override</emphasis>;
47 
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;update()&#32;<emphasis role="keyword">override</emphasis>;
52 
56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;setEmitting(<emphasis role="keywordtype">bool</emphasis>&#32;emitted);
57 
58 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;setOffsetPos(<link linkend="_classme_1_1_vector3">Vector3</link>&#32;offset);
59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;setOffsetScale(<link linkend="_classme_1_1_vector3">Vector3</link>&#32;offset);
60 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
61 &#32;&#32;&#32;&#32;};
62 }
63 <emphasis role="preprocessor">#endif</emphasis>
64 
65 
</programlisting></section>
