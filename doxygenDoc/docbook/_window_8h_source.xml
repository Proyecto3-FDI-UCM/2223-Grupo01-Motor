<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__window_8h_source" xml:lang="en-US">
<title>Window.h</title>
<indexterm><primary>Src/Render/Window.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
2 <emphasis role="preprocessor">#ifndef&#32;__RENDER_WINDOW</emphasis>
3 <emphasis role="preprocessor">#define&#32;__RENDER_WINDOW</emphasis>
4 
5 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__motor_engine_a_p_i_8h">MotorEngine/MotorEngineAPI.h</link>&quot;</emphasis>
6 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__singleton_8h">Utils/Singleton.h</link>&quot;</emphasis>
7 
8 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="__render_window_8h_1a55a196c7d3b8497538632c79ae1e6392">SDL_Window</link>&#32;<link linkend="__render_window_8h_1a55a196c7d3b8497538632c79ae1e6392">SDL_Window</link>;
9 
10 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceme">me</link>&#32;{
24 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="__motor_engine_a_p_i_8h_1ae7d210fc6a9598f82960577024307219">__MOTORENGINE_API</link>&#32;<link linkend="_classme_1_1_window">Window</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_classme_1_1_singleton">Singleton</link>&lt;Window&gt;
25 &#32;&#32;&#32;&#32;{
26 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;<link linkend="_classme_1_1_singleton">Singleton&lt;Window&gt;</link>;
27 
32 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classme_1_1_window">Window</link>();
33 
43 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classme_1_1_window">Window</link>(uint32_t&#32;sdlFlags,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;name,&#32;<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;w,&#32;<emphasis role="keywordtype">int</emphasis>&#32;h,&#32;uint32_t&#32;windowFlags);
44 
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Reference&#32;to&#32;SDL&#32;Window&#32;class</emphasis>
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__render_window_8h_1a55a196c7d3b8497538632c79ae1e6392">SDL_Window</link>*&#32;<link linkend="_namespaceme_1a2632192578f3d0d64db4976e8a05dd13">window</link>;
47 
48 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
49 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classme_1_1_window">~Window</link>();
50 
54 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__render_window_8h_1a55a196c7d3b8497538632c79ae1e6392">SDL_Window</link>*&#32;get();
55 &#32;&#32;&#32;&#32;};
56 
61 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_classme_1_1_window">Window</link>&amp;&#32;<link linkend="_namespaceme_1a2632192578f3d0d64db4976e8a05dd13">window</link>()&#32;{
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<link linkend="_classme_1_1_singleton_1a8810aab25f6fdc043bfac52761a9a260">Window::instance</link>();
63 &#32;&#32;&#32;&#32;};
64 }
65 
66 <emphasis role="preprocessor">#endif</emphasis>
67 
</programlisting></section>
