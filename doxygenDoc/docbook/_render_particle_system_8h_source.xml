<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__render_particle_system_8h_source" xml:lang="en-US">
<title>RenderParticleSystem.h</title>
<indexterm><primary>Src/Render/RenderParticleSystem.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
2 <emphasis role="preprocessor">#ifndef&#32;__RENDER_RENDERPARTICLESYSTEM</emphasis>
3 <emphasis role="preprocessor">#define&#32;__RENDER_RENDERPARTICLESYSTEM</emphasis>
4 
5 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__motor_engine_a_p_i_8h">MotorEngine/MotorEngineAPI.h</link>&quot;</emphasis>
6 <emphasis role="preprocessor">#include&#32;&lt;string&gt;</emphasis>
7 <emphasis role="preprocessor">#include&#32;&lt;OgreVector3.h&gt;</emphasis>
8 
9 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_ogre">Ogre</link>&#32;{
10 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>SceneNode;
11 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>Quaternion;
12 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>ParticleSystem;
13 }
14 
15 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceme">me</link>&#32;{
16 
17 &#32;&#32;&#32;&#32;<emphasis role="comment">//Class&#32;to&#32;create&#32;renderizable&#32;particle&#32;system&#32;</emphasis>
18 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="__motor_engine_a_p_i_8h_1ae7d210fc6a9598f82960577024307219">__MOTORENGINE_API</link>&#32;<link linkend="_classme_1_1_render_particle_system">RenderParticleSystem</link>
19 &#32;&#32;&#32;&#32;{
20 
21 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
22 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>:
23 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Reference&#32;to&#32;Ogre::SceneNode&#32;for&#32;renderize</emphasis>
24 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ogre::SceneNode*&#32;<link linkend="_classme_1_1_render_particle_system_1ac7327f2a7285ac9f0b7b954ff8dffb7a">mNode</link>;
25 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Reference&#32;to&#32;Ogre::ParticleSystem&#32;for&#32;renderize</emphasis>
26 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ogre::&#32;ParticleSystem*&#32;<link linkend="_classme_1_1_render_particle_system_1abc88985e53ee47372ebb533257b5b6c1">mParticleSystem</link>;
27 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Name&#32;of&#32;particle&#32;that&#32;used</emphasis>
28 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;<link linkend="_classme_1_1_render_particle_system_1a4a5cf2e7cfc429e376d11409c472313d">mParticleName</link>;
29 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Name&#32;of&#32;particle&#32;system</emphasis>
30 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;<link linkend="_classme_1_1_render_particle_system_1a2511162d295cf2c89d0745b559663516">mName</link>;
31 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
32 
33 
34 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
42 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classme_1_1_render_particle_system">RenderParticleSystem</link>(std::string&#32;name,Ogre::SceneNode*&#32;node,std::string&#32;particleName);
43 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classme_1_1_render_particle_system">~RenderParticleSystem</link>();
44 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Set&#32;position,&#32;rotation&#32;and&#32;scale&#32;of&#32;mNode</emphasis>
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;setTransform(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_ogre_1_1_vector">Ogre::Vector3f</link>&#32;&amp;pos,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_ogre_1_1_vector">Ogre::Vector3f</link>&#32;&amp;scale,&#32;<emphasis role="keyword">const</emphasis>&#32;Ogre::Quaternion&#32;&amp;rot);
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;setPosition(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_ogre_1_1_vector">Ogre::Vector3f</link>&#32;&amp;pos);
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;setScale(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_ogre_1_1_vector">Ogre::Vector3f</link>&#32;&amp;scale);
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;setRotation(Ogre::Quaternion&#32;rot);
49 
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//set&#32;particle&#32;system&#32;emitting&#32;state</emphasis>
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;setEmitting(<emphasis role="keywordtype">bool</emphasis>&#32;emitted);
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
53 
54 &#32;&#32;&#32;&#32;};
55 
56 }
57 
58 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
