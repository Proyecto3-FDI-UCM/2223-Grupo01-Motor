.TH "me::Singleton< T >" 3 "Mon Apr 3 2023" "Version 0.2.1" "MotorEngine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
me::Singleton< T >
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Singleton\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSingleton\fP< T > & \fBoperator=\fP (const \fBSingleton\fP< T > &o)=delete"
.br
.ti -1c
.RI "\fBSingleton\fP (const \fBSingleton\fP< T > &o)=delete"
.br
.ti -1c
.RI "virtual \fB~Singleton\fP ()"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "template<typename \&.\&.\&. Targs> static T * \fBinit\fP (Targs &&\&.\&.\&.args)"
.br
.ti -1c
.RI "static T * \fBinstance\fP ()"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBSingleton\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class T>
.br
class me::Singleton< T >"Ensures there is only one instance of a class, and offers global access to it\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIT\fP is the class made a singleton 
.RE
.PP

.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<class T > \fBme::Singleton\fP< T >::Singleton ()\fC [inline]\fP, \fC [protected]\fP"

.SS "template<class T > \fBme::Singleton\fP< T >::Singleton (const \fBSingleton\fP< T > & o)\fC [delete]\fP"

.SS "template<class T > virtual \fBme::Singleton\fP< T >::~\fBSingleton\fP ()\fC [inline]\fP, \fC [virtual]\fP"

.SH "Member Function Documentation"
.PP 
.SS "template<class T > template<typename \&.\&.\&. Targs> static T * \fBme::Singleton\fP< T >::init (Targs &&\&.\&.\&. args)\fC [inline]\fP, \fC [static]\fP"
Constructs the instance of class T\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIArguments\fP to pass to class T constructor\&. 
.RE
.PP

.SS "template<class T > static T * \fBme::Singleton\fP< T >::instance ()\fC [inline]\fP, \fC [static]\fP"
Returns the class T instance\&. If it does not exits, creates it with the default constructor and returns it\&. 
.PP
\fBReturns\fP
.RS 4
Reference to the only instance of class T\&. 
.RE
.PP

.SS "template<class T > \fBSingleton\fP< T > & \fBme::Singleton\fP< T >::operator= (const \fBSingleton\fP< T > & o)\fC [delete]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for MotorEngine from the source code\&.
