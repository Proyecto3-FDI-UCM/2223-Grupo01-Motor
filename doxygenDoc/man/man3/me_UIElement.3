.TH "me::UIElement" 3 "Mon Apr 3 2023" "Version 0.2.1" "MotorEngine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
me::UIElement
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <UIElement\&.h>\fP
.PP
Inherits \fBme::Component\fP\&.
.PP
Inherited by \fBme::UIButton\fP, \fBme::UIContainer\fP, and \fBme::UIText\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBUIElement\fP ()"
.br
.ti -1c
.RI "\fB~UIElement\fP ()"
.br
.ti -1c
.RI "void \fBshow\fP ()"
.br
.ti -1c
.RI "void \fBhide\fP ()"
.br
.ti -1c
.RI "\fBVector2\fP \fBgetSize\fP ()"
.br
.ti -1c
.RI "\fBVector2\fP \fBgetPos\fP ()"
.br
.ti -1c
.RI "void \fBsetSize\fP (\fBVector2\fP size)"
.br
.ti -1c
.RI "bool \fBisVisible\fP ()"
.br
.ti -1c
.RI "void \fBsetTop\fP (float top)"
.br
.ti -1c
.RI "void \fBsetLeft\fP (float left)"
.br
.ti -1c
.RI "void \fBsetWidth\fP (float wifth)"
.br
.ti -1c
.RI "void \fBsetHeight\fP (float height)"
.br
.ti -1c
.RI "void \fBsetInteractive\fP (bool interactive)"
.br
.ti -1c
.RI "void \fBsetFocusNow\fP (bool focus)"
.br
.ti -1c
.RI "bool \fBgetIsInteractive\fP ()"
.br
.ti -1c
.RI "bool \fBgetIsFocusNow\fP ()"
.br
.in -1c

Public Member Functions inherited from \fBme::Component\fP
.in +1c
.ti -1c
.RI "\fBComponent\fP ()"
.br
.ti -1c
.RI "virtual \fB~Component\fP ()"
.br
.ti -1c
.RI "void \fBsetEntity\fP (\fBEntity\fP *e)"
.br
.ti -1c
.RI "\fBEntity\fP * \fBgetEntity\fP ()"
.br
.ti -1c
.RI "virtual void \fBstart\fP ()"
.br
.ti -1c
.RI "virtual void \fBupdate\fP ()"
.br
.ti -1c
.RI "virtual void \fBlateUpdate\fP ()"
.br
.ti -1c
.RI "virtual void \fBOnCollisionEnter\fP (\fBEntity\fP *other)"
.br
.ti -1c
.RI "virtual void \fBOnCollisionStay\fP (\fBEntity\fP *other)"
.br
.ti -1c
.RI "virtual void \fBOnCollisionExit\fP (\fBEntity\fP *other)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "Ogre::OverlayManager * \fBmOverlayManager\fP"
.br
.ti -1c
.RI "Ogre::Overlay * \fBmOverlay\fP"
.br
.ti -1c
.RI "Ogre::OverlayContainer * \fBmOverlayContainer\fP"
.br
.ti -1c
.RI "bool \fBmInteractive\fP"
.br
.ti -1c
.RI "bool \fBmFocus\fP"
.br
.ti -1c
.RI "int \fBmElems\fP =0"
.br
.in -1c

Protected Attributes inherited from \fBme::Component\fP
.in +1c
.ti -1c
.RI "\fBEntity\fP * \fBmEntity\fP"
.br
.in -1c
.SS "Additional Inherited Members"


Public Attributes inherited from \fBme::Component\fP
.in +1c
.ti -1c
.RI "bool \fBenabled\fP = true"
.br
.in -1c
.SH "Detailed Description"
.PP 
\fBUIElement\fP represents a graphical user interface (GUI) element that can be displayed on the screen It is a \fBComponent\fP that can be attached to an \fBEntity\fP to add user interface functionality to it 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "me::UIElement::UIElement ()"

.SS "me::UIElement::~UIElement ()"

.SH "Member Function Documentation"
.PP 
.SS "bool me::UIElement::getIsFocusNow ()"
Gets whether the \fBUIElement\fP currently has keyboard focus 
.PP
\fBReturns\fP
.RS 4
true if the \fBUIElement\fP currently has keyboard focus, false otherwise 
.RE
.PP

.SS "bool me::UIElement::getIsInteractive ()"
Gets whether the \fBUIElement\fP is interactive 
.PP
\fBReturns\fP
.RS 4
true if the \fBUIElement\fP is interactive, false otherwise 
.RE
.PP

.SS "\fBVector2\fP me::UIElement::getPos ()"
Gets the position of the \fBUIElement\fP 
.PP
\fBReturns\fP
.RS 4
A Vector2<float> representing the x and y position of the \fBUIElement\fP 
.RE
.PP

.SS "\fBVector2\fP me::UIElement::getSize ()"
Gets the size of the \fBUIElement\fP 
.PP
\fBReturns\fP
.RS 4
A Vector2<float> representing the width and height of the \fBUIElement\fP 
.RE
.PP

.SS "void me::UIElement::hide ()"
Hides the overlay 
.SS "bool me::UIElement::isVisible ()"
Checks if the \fBUIElement\fP is currently visible 
.PP
\fBReturns\fP
.RS 4
true if the \fBUIElement\fP is visible, false otherwise 
.RE
.PP

.SS "void me::UIElement::setFocusNow (bool focus)"
Sets whether the \fBUIElement\fP should immediately receive keyboard focus 
.PP
\fBParameters\fP
.RS 4
\fIfocus\fP true if the \fBUIElement\fP should immediately receive keyboard focus, false otherwise 
.RE
.PP

.SS "void me::UIElement::setHeight (float height)"
Sets the height of the \fBUIElement\fP 
.PP
\fBParameters\fP
.RS 4
\fIheight\fP The new height of the \fBUIElement\fP 
.RE
.PP

.SS "void me::UIElement::setInteractive (bool interactive)"
Sets whether the \fBUIElement\fP is interactive 
.PP
\fBParameters\fP
.RS 4
\fIinteractive\fP true if the \fBUIElement\fP is interactive, false otherwise 
.RE
.PP

.SS "void me::UIElement::setLeft (float left)"
Sets the left position of the \fBUIElement\fP 
.PP
\fBParameters\fP
.RS 4
\fIleft\fP The new left position of the \fBUIElement\fP 
.RE
.PP

.SS "void me::UIElement::setSize (\fBVector2\fP size)"
Sets the size of the \fBUIElement\fP 
.PP
\fBParameters\fP
.RS 4
\fIsize\fP A Vector2<float> representing the new width and height of the \fBUIElement\fP 
.RE
.PP

.SS "void me::UIElement::setTop (float top)"
Sets the top position of the \fBUIElement\fP 
.PP
\fBParameters\fP
.RS 4
\fItop\fP The new top position of the \fBUIElement\fP 
.RE
.PP

.SS "void me::UIElement::setWidth (float wifth)"
Sets the width of the \fBUIElement\fP 
.PP
\fBParameters\fP
.RS 4
\fIwidth\fP The new width of the \fBUIElement\fP 
.RE
.PP

.SS "void me::UIElement::show ()"
Shows the overlay 
.SH "Member Data Documentation"
.PP 
.SS "int me::UIElement::mElems =0\fC [protected]\fP"

.SS "bool me::UIElement::mFocus\fC [protected]\fP"

.SS "bool me::UIElement::mInteractive\fC [protected]\fP"

.SS "Ogre::Overlay* me::UIElement::mOverlay\fC [protected]\fP"

.SS "Ogre::OverlayContainer* me::UIElement::mOverlayContainer\fC [protected]\fP"

.SS "Ogre::OverlayManager* me::UIElement::mOverlayManager\fC [protected]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for MotorEngine from the source code\&.
