.TH "me::RenderMesh" 3 "Mon Apr 3 2023" "Version 0.2.1" "MotorEngine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
me::RenderMesh
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <RenderMesh\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBRenderMesh\fP (Ogre::SceneNode *node, std::string meshName)"
.br
.ti -1c
.RI "\fB~RenderMesh\fP ()"
.br
.ti -1c
.RI "void \fBsetTransform\fP (const \fBOgre::Vector3f\fP &pos, const \fBOgre::Vector3f\fP &scale, const Ogre::Quaternion &rot)"
.br
.ti -1c
.RI "void \fBsetPosition\fP (const \fBOgre::Vector3f\fP &pos)"
.br
.ti -1c
.RI "void \fBsetScale\fP (const \fBOgre::Vector3f\fP &scale)"
.br
.ti -1c
.RI "void \fBsetRotation\fP (Ogre::Quaternion rot)"
.br
.ti -1c
.RI "Ogre::Entity * \fBgetOgreEntity\fP ()"
.br
.ti -1c
.RI "void \fBsetMaterial\fP (std::string materialName)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "Ogre::SceneNode * \fBmNode\fP"
.br
.ti -1c
.RI "Ogre::Entity * \fBmEntity\fP"
.br
.ti -1c
.RI "std::string \fBmMeshName\fP"
.br
.ti -1c
.RI "std::string \fBmMaterialName\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "me::RenderMesh::RenderMesh (Ogre::SceneNode * node, std::string meshName)"
Assign information and create Ogre::Entity with the given mesh and attach to mNode 
.PP
\fBParameters\fP
.RS 4
\fInode\fP mNode for attach Ogre::Entity created 
.br
\fImeshName\fP name of resource (type mesh) that we used for create Ogre::Entity\&. Must be writted in resource\&.cfg (\&.mesh inside Zip or FileSystem) 
.RE
.PP

.SS "me::RenderMesh::~RenderMesh ()"

.SH "Member Function Documentation"
.PP 
.SS "Ogre::Entity * me::RenderMesh::getOgreEntity ()"
Return the Ogre::Entity asociated 
.SS "void me::RenderMesh::setMaterial (std::string materialName)"
Assign material name to entity 
.PP
\fBParameters\fP
.RS 4
\fImaterialName\fP name of material that we used Must be writted in MaterialResource\&.material 
.RE
.PP

.SS "void me::RenderMesh::setPosition (const \fBOgre::Vector3f\fP & pos)"

.SS "void me::RenderMesh::setRotation (Ogre::Quaternion rot)"

.SS "void me::RenderMesh::setScale (const \fBOgre::Vector3f\fP & scale)"

.SS "void me::RenderMesh::setTransform (const \fBOgre::Vector3f\fP & pos, const \fBOgre::Vector3f\fP & scale, const Ogre::Quaternion & rot)"

.SH "Member Data Documentation"
.PP 
.SS "Ogre::Entity* me::RenderMesh::mEntity\fC [protected]\fP"

.SS "std::string me::RenderMesh::mMaterialName\fC [protected]\fP"

.SS "std::string me::RenderMesh::mMeshName\fC [protected]\fP"

.SS "Ogre::SceneNode* me::RenderMesh::mNode\fC [protected]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for MotorEngine from the source code\&.
