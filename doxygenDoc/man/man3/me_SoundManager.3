.TH "me::SoundManager" 3 "Mon Apr 3 2023" "Version 0.2.1" "MotorEngine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
me::SoundManager
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <SoundManager\&.h>\fP
.PP
Inherits \fBme::Singleton< SoundManager >\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBsystemRefresh\fP ()"
.br
.ti -1c
.RI "bool \fBcreate3DSound\fP (const char *soundPath, std::string soundName, float minDistance, float maxDistance)"
.br
.ti -1c
.RI "bool \fBcreateNormalSound\fP (const char *soundPath, std::string soundName)"
.br
.ti -1c
.RI "bool \fBsetSpeed\fP (std::string soundName, float newSpeed)"
.br
.ti -1c
.RI "bool \fBsetMode\fP (std::string soundName, \fBFMOD_MODE\fP newMode)"
.br
.ti -1c
.RI "bool \fBcreateChannelGroup\fP (std::string groupName)"
.br
.ti -1c
.RI "bool \fBsetChannelVolume\fP (std::string groupName, float newVolume)"
.br
.ti -1c
.RI "bool \fBsetVolume\fP (std::string soundName, float newVolume)"
.br
.ti -1c
.RI "float \fBgetVolume\fP (std::string soundName)"
.br
.ti -1c
.RI "bool \fBpauseSound\fP (std::string soundName, bool pause)"
.br
.ti -1c
.RI "bool \fBplaySound\fP (std::string soundName, bool isLoop, const char *channelGroup, FMOD_VECTOR *channelPos, FMOD_VECTOR *channelVel, int timesLooped)"
.br
.ti -1c
.RI "bool \fBdeleteSound\fP (std::string soundName)"
.br
.ti -1c
.RI "void \fBupdateListenersPosition\fP (int index, \fBVector3\fP listenerPos, \fBVector3\fP listenerFW, \fBVector3\fP listenerUP, \fBVector3\fP listenerVel={ 0, 0, 0 })"
.br
.ti -1c
.RI "void \fBremoveListener\fP (int index)"
.br
.ti -1c
.RI "bool \fBsetSoundPosition\fP (std::string soundName, \fBVector3\fP position)"
.br
.ti -1c
.RI "int \fBgetNextUsefulListenerIndex\fP ()"
.br
.in -1c

Public Member Functions inherited from \fBme::Singleton< SoundManager >\fP
.in +1c
.ti -1c
.RI "\fBSingleton\fP (const \fBSingleton\fP< \fBSoundManager\fP > &o)=delete"
.br
.ti -1c
.RI "\fBSingleton\fP< \fBSoundManager\fP > & \fBoperator=\fP (const \fBSingleton\fP< \fBSoundManager\fP > &o)=delete"
.br
.ti -1c
.RI "virtual \fB~Singleton\fP ()"
.br
.in -1c
.SS "Additional Inherited Members"


Static Public Member Functions inherited from \fBme::Singleton< SoundManager >\fP
.in +1c
.ti -1c
.RI "static \fBSoundManager\fP * \fBinit\fP (Targs &&\&.\&.\&.args)"
.br
.ti -1c
.RI "static \fBSoundManager\fP * \fBinstance\fP ()"
.br
.in -1c

Protected Member Functions inherited from \fBme::Singleton< SoundManager >\fP
.in +1c
.ti -1c
.RI "\fBSingleton\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
\fBSoundManager\fP provides \fBFMOD\fP wrappers to manage audio creation and modulation, audio channel and audio channel groups\&. You can access the \fBInputManager\fP calling sm()\&. 
.SH "Member Function Documentation"
.PP 
.SS "bool me::SoundManager::create3DSound (const char * soundPath, std::string soundName, float minDistance, float maxDistance)"
Creates a 3D sound\&. 
.PP
\fBParameters\fP
.RS 4
\fIsoundPath\fP : relative path to the sound that will be loaded in the sound handle\&. 
.br
\fIsoundName\fP : the especific name of the sound which mode will be changed\&. 
.br
\fIminDistance\fP : minimum audible distance for a 3D sound\&. 
.br
\fImaxDistance\fP : maximum audible distance for a 3D sound\&. 
.RE
.PP
\fBReturns\fP
.RS 4
A boolean representing whether or not a the sound was created\&. 
.RE
.PP

.SS "bool me::SoundManager::createChannelGroup (std::string groupName)"
Create a channel group if a channel with the same name doesn't already exists\&. 
.PP
\fBParameters\fP
.RS 4
\fInewChannelGroup\fP : the name for the new channel group\&. 
.RE
.PP
\fBReturns\fP
.RS 4
A boolean representing whether or not a new channel was indeed created\&. 
.RE
.PP

.SS "bool me::SoundManager::createNormalSound (const char * soundPath, std::string soundName)"
Creates a normal sound\&. 
.PP
\fBParameters\fP
.RS 4
\fIsoundPath\fP : relative path to the sound that will be loaded in the sound handle\&. 
.br
\fIsoundName\fP : the especific name of the sound which mode will be changed\&. 
.RE
.PP
\fBReturns\fP
.RS 4
A boolean representing whether or not a the sound was created\&. 
.RE
.PP

.SS "bool me::SoundManager::deleteSound (std::string soundName)"
Releases the dynamic memory created on runtime when creating new sounds\&. 
.PP
\fBParameters\fP
.RS 4
\fIsoundName\fP : the especific name of the sound which speed will be changed\&. 
.RE
.PP
\fBReturns\fP
.RS 4
A boolean showing wether or not the sound was eliminated\&. 
.RE
.PP

.SS "int me::SoundManager::getNextUsefulListenerIndex ()\fC [inline]\fP"
Gets the useful listener which will be able to listen to a new sound\&. 
.PP
\fBReturns\fP
.RS 4
A integer showing whether or not a useful listener was found\&. 
.RE
.PP

.SS "float me::SoundManager::getVolume (std::string soundName)"
Checks the volume of a certain channel if it exists\&. 
.PP
\fBParameters\fP
.RS 4
\fIsoundName\fP : the especific name of the sound which speed will be changed\&. 
.RE
.PP
\fBReturns\fP
.RS 4
The specific float of the volume\&. 
.RE
.PP

.SS "bool me::SoundManager::pauseSound (std::string soundName, bool pause)"
Looks for a sound channel and in case that it exists, sets the pause state of that channel to 'pause'\&. 
.PP
\fBParameters\fP
.RS 4
\fIsoundName\fP : the especific name of the sound which speed will be paused\&. 
.br
\fIpause\fP : the new pause value the channel will get\&. 
.RE
.PP
\fBReturns\fP
.RS 4
True if the sound is pauded, false if the sound didn't exist\&. 
.RE
.PP

.SS "bool me::SoundManager::playSound (std::string soundName, bool isLoop, const char * channelGroup, FMOD_VECTOR * channelPos, FMOD_VECTOR * channelVel, int timesLooped)"
Sets the loopability of a certain sound dependind on 'isLoop'\&. It checks for available channels to play the sound and assigns a group channel depending on the user input\&. 
.PP
\fBParameters\fP
.RS 4
\fIsoundName\fP : the especific name of the sound which will be played\&. 
.br
\fIisLoop\fP : the value of loopability that will be used to play the sound\&. 
.br
\fIchannelGroup\fP : the channel group where the sound will played on\&. 
.br
\fIchannelPos\fP : the channel's position used for panning and attenuation\&. 
.br
\fIchannelVel\fP : the channel' group where the sound will played on's velocity in 3D space used for doppler\&. 
.br
\fItimesLooped\fP : the number of times the sound will be looped\&. By default it is set to constant loop\&. 
.RE
.PP
\fBReturns\fP
.RS 4
A boolean showing whether or not a channel group was found to play the sound\&. 
.RE
.PP

.SS "void me::SoundManager::removeListener (int index)"
Removes the listener from its vector and resets its values\&. 
.PP
\fBParameters\fP
.RS 4
\fIindex\fP : the index that refers to a certain listener\&. 
.RE
.PP

.SS "bool me::SoundManager::setChannelVolume (std::string groupName, float newVolume)"
Changes the volume of a certain group channel if it exists\&. 
.PP
\fBParameters\fP
.RS 4
\fIgroupName\fP : the name of the channel group\&. 
.br
\fInewVolume\fP : the volume value the group channel will be changed to\&. 
.RE
.PP
\fBReturns\fP
.RS 4
A boolean representing whether or not a the volume was changed\&. 
.RE
.PP

.SS "bool me::SoundManager::setMode (std::string soundName, \fBFMOD_MODE\fP newMode)"
Sets the mode of a certain sound\&. 
.PP
\fBParameters\fP
.RS 4
\fIsoundName\fP : the especific name of the sound which mode will be changed\&. 
.br
\fInewMode\fP the new flag the sound will be changed to\&. 
.RE
.PP
\fBReturns\fP
.RS 4
A boolean showing wether or not the mode was set\&. 
.RE
.PP

.SS "bool me::SoundManager::setSoundPosition (std::string soundName, \fBVector3\fP position)"
Sets the global position of a sound i\&. 
.PP
\fBParameters\fP
.RS 4
\fIsoundName\fP : the especific name of the sound which position will be set\&. 
.br
\fIposition\fP : the value of the position of the sound\&. 
.RE
.PP
\fBReturns\fP
.RS 4
A boolean showing wether or not the position was set\&. 
.RE
.PP

.SS "bool me::SoundManager::setSpeed (std::string soundName, float newSpeed)"
Sets the speed a certain sound wil be played at\&. 
.PP
\fBParameters\fP
.RS 4
\fIsoundName\fP : the especific name of the sound which speed will be changed\&. 
.br
\fInewSpeed\fP : the new value the sound will be played at\&. 
.RE
.PP
\fBReturns\fP
.RS 4
A boolean showing wether or not the speed was changed\&. 
.RE
.PP

.SS "bool me::SoundManager::setVolume (std::string soundName, float newVolume)"
Changes the volume of a certain channel if it exists\&. 
.PP
\fBParameters\fP
.RS 4
\fIsoundName\fP : the especific name of the sound which volume will be changed\&. 
.br
\fInewVolume\fP : the volume value the channel will be changed to\&. 
.RE
.PP
\fBReturns\fP
.RS 4
A boolean representing wether or not the volume was changed\&. 
.RE
.PP

.SS "void me::SoundManager::systemRefresh ()"
Updates the sound system every step of the game loop\&. 
.SS "void me::SoundManager::updateListenersPosition (int index, \fBVector3\fP listenerPos, \fBVector3\fP listenerFW, \fBVector3\fP listenerUP, \fBVector3\fP listenerVel = \fC{ 0,0,0 }\fP)"
Updates the position of a sound listener relative to a certain sound\&. 
.PP
\fBParameters\fP
.RS 4
\fIindex\fP : the index that refers to a certain listener\&. 
.br
\fIlistenerPos\fP : the position of the listener\&. 
.br
\fIlistenerFW\fP : 
.br
\fIlistenerUP\fP : 
.br
\fIlistenerVel\fP : the velocity of the listener\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for MotorEngine from the source code\&.
