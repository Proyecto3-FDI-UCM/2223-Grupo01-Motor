<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="_animator_8cpp" kind="file" language="C++">
    <compoundname>Animator.cpp</compoundname>
    <includes refid="_animator_8h" local="yes">Animator.h</includes>
    <includes refid="_entity_8h" local="yes">EntityComponent/Entity.h</includes>
    <includes refid="_mesh_renderer_8h" local="yes">MeshRenderer.h</includes>
    <includes refid="_render_manager_8h" local="yes">Render/RenderManager.h</includes>
    <includes local="no">OgreAnimation.h</includes>
    <includes local="no">OgreEntity.h</includes>
    <incdepgraph>
      <node id="1">
        <label>Src/EntityComponent/Components/Animator.cpp</label>
        <link refid="_animator_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Animator.h</label>
        <link refid="_animator_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Component.h</label>
        <link refid="_component_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>MeshRenderer.h</label>
        <link refid="_mesh_renderer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>EntityComponent/Entity.h</label>
        <link refid="_entity_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>InfoScene.h</label>
        <link refid="_info_scene_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>MotorEngine/MotorEngineAPI.h</label>
        <link refid="_motor_engine_a_p_i_8h"/>
      </node>
      <node id="12">
        <label>Render/RenderManager.h</label>
        <link refid="_render_manager_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>Utils/Singleton.h</label>
        <link refid="_singleton_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>OgreAnimation.h</label>
      </node>
      <node id="15">
        <label>OgreColourValue.h</label>
      </node>
      <node id="17">
        <label>OgreEntity.h</label>
      </node>
      <node id="10">
        <label>map</label>
      </node>
      <node id="14">
        <label>memory</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="8">
        <label>unordered_map</label>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_animator_8h" kindref="compound">Animator.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_entity_8h" kindref="compound">EntityComponent/Entity.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_mesh_renderer_8h" kindref="compound">MeshRenderer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_render_manager_8h" kindref="compound">Render/RenderManager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;OgreAnimation.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;OgreEntity.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceme" kindref="compound">me</ref>;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><ref refid="classme_1_1_animator_1a701eeb9283612be2027425efb06bbff7" kindref="member">Animator::Animator</ref>()</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>mMesh<sp/>=<sp/><ref refid="classme_1_1_component_1a89862182926907ae608d3244d1d4e6d1" kindref="member">mEntity</ref>-&gt;<ref refid="classme_1_1_entity_1aeaef76f73c6151b49e42d50a8413b58d" kindref="member">getComponent</ref>&lt;<ref refid="classme_1_1_mesh_renderer" kindref="compound">MeshRenderer</ref>&gt;(</highlight><highlight class="stringliteral">&quot;meshRenderer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>mCurrentState<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>mAnimStatesMap<sp/>=<sp/><ref refid="namespaceme_1af8da8de4d9ebcdaa653b23af353b5edc" kindref="member">me::renderManager</ref>().<ref refid="classme_1_1_render_manager_1aca01cdecef083ab1865ad8c452edff75" kindref="member">getOgreEntity</ref>(mMesh-&gt;<ref refid="classme_1_1_mesh_renderer_1afd5521dfdc1df9b4475613e8d514c815" kindref="member">getName</ref>())-&gt;getAllAnimationStates();</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>mStop<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><ref refid="classme_1_1_animator_1a5af4797549f9f466a88657899e17c6ab" kindref="member">Animator::~Animator</ref>()</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_animator_1a59b9903253d8ce084048f7600e956735" kindref="member">Animator::update</ref>()</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCurrentState<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>!mStop)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Increment<sp/>the<sp/>animation<sp/>time<sp/>by<sp/>the<sp/>time<sp/>between<sp/>frames</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurrentState-&gt;addTime(Ogre::Real());<sp/></highlight><highlight class="comment">//Falta<sp/>el<sp/>tiempo<sp/>entre<sp/>frames;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_animator_1a85aaf640ac6224644f15ccfffb9c5748" kindref="member">Animator::setActive</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>active)</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>enabled<sp/>state<sp/>for<sp/>the<sp/>current<sp/>animation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>mCurrentState-&gt;setEnabled(active);</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_animator_1aeba3c634f367f9d24021c3d62e8b852c" kindref="member">Animator::setLoop</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>loop)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>loop<sp/>state<sp/>for<sp/>the<sp/>current<sp/>animation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>mCurrentState-&gt;setLoop(loop);</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">std::string<sp/><ref refid="classme_1_1_animator_1a9da14b69ed5e949d3511e533c470279b" kindref="member">Animator::getCurrAnimName</ref>()</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>name<sp/>of<sp/>the<sp/>current<sp/>animation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mCurrentState-&gt;getAnimationName();</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_animator_1afa86b70a468766c7d5e7e309a5bf7445" kindref="member">Animator::isActive</ref>()</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>whether<sp/>the<sp/>current<sp/>animation<sp/>is<sp/>enabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mCurrentState-&gt;getEnabled();</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_animator_1a89886f13f2eb12cd3184de012fffb98a" kindref="member">Animator::isLoop</ref>()</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>whether<sp/>the<sp/>current<sp/>animation<sp/>is<sp/>set<sp/>to<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mCurrentState-&gt;getLoop();</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_animator_1a93618b388a74a2344368be260b236395" kindref="member">Animator::animHasEnded</ref>()</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>whether<sp/>the<sp/>current<sp/>animation<sp/>has<sp/>ended</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mCurrentState-&gt;hasEnded();</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_animator_1a79b32b578adc9d452977cadc4c77c7f4" kindref="member">Animator::playAnim</ref>(std::string<sp/>anim,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>loop)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCurrentState<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurrentState-&gt;setEnabled(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>current<sp/>state<sp/>to<sp/>the<sp/>specified<sp/>animation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>mCurrentState<sp/>=<sp/>mAnimStatesMap-&gt;getAnimationState(anim);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>the<sp/>new<sp/>animation<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>mCurrentState-&gt;setEnabled(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>loop<sp/>state<sp/>for<sp/>the<sp/>new<sp/>animation<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>mCurrentState-&gt;setLoop(loop);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>time<sp/>position<sp/>for<sp/>the<sp/>new<sp/>animation<sp/>state<sp/>to<sp/>the<sp/>beginning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>mCurrentState-&gt;setTimePosition(0);</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_animator_1a1872695c1e9f83ab70d02bda72200a52" kindref="member">Animator::stopAnim</ref>()</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>mStop<sp/>flag<sp/>to<sp/>true<sp/>to<sp/>pause<sp/>the<sp/>current<sp/>animation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>mStop<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_animator_1a7946f90f69f5497b75ccd7e10f69b8f6" kindref="member">Animator::resumeAnim</ref>()</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>mStop<sp/>flag<sp/>to<sp/>false<sp/>to<sp/>resume<sp/>the<sp/>current<sp/>animation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>mStop<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Src/EntityComponent/Components/Animator.cpp"/>
  </compounddef>
</doxygen>
