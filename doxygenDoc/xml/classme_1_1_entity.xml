<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classme_1_1_entity" kind="class" language="C++" prot="public">
    <compoundname>me::Entity</compoundname>
    <includes refid="_entity_8h" local="no">Entity.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classme_1_1_entity_1aac1234d90d7620c49a21a4a95971cd2b" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend me::Entity::Scene</definition>
        <argsstring></argsstring>
        <name>Scene</name>
        <qualifiedname>me::Entity::Scene</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Entity.h" line="21" column="8" bodyfile="Src/EntityComponent/Entity.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classme_1_1_entity_1a9fcae1e4ef1d1ac2caab174f2cf222bd" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool me::Entity::mActive</definition>
        <argsstring></argsstring>
        <name>mActive</name>
        <qualifiedname>me::Entity::mActive</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Entity.h" line="170" column="6" bodyfile="Src/EntityComponent/Entity.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classme_1_1_entity_1a60f2ade0a3ecd63407be07cb8c1559b5" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string me::Entity::mName</definition>
        <argsstring></argsstring>
        <name>mName</name>
        <qualifiedname>me::Entity::mName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Entity.h" line="171" column="13" bodyfile="Src/EntityComponent/Entity.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classme_1_1_entity_1aaf4db4b3625a24f29c02f91e5044e553" prot="private" static="no" mutable="no">
        <type><ref refid="classme_1_1_scene" kindref="compound">Scene</ref> *</type>
        <definition>Scene* me::Entity::mScn</definition>
        <argsstring></argsstring>
        <name>mScn</name>
        <qualifiedname>me::Entity::mScn</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Entity.h" line="172" column="7" bodyfile="Src/EntityComponent/Entity.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classme_1_1_entity_1ac40a461dc07a93cc5400a6819352c856" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="namespaceme_1a5bb8ed18150e0bc29a11923a7093a347" kindref="member">ComponentName</ref>, <ref refid="classme_1_1_component" kindref="compound">Component</ref> * &gt;</type>
        <definition>std::map&lt;ComponentName, Component*&gt; me::Entity::mComponents</definition>
        <argsstring></argsstring>
        <name>mComponents</name>
        <qualifiedname>me::Entity::mComponents</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Entity.h" line="173" column="10" bodyfile="Src/EntityComponent/Entity.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classme_1_1_entity_1a3872e571420ba75d34d686c3a34c2ed3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>me::Entity::Entity</definition>
        <argsstring>(Scene *scn, const SceneName name)</argsstring>
        <name>Entity</name>
        <qualifiedname>me::Entity::Entity</qualifiedname>
        <param>
          <type><ref refid="classme_1_1_scene" kindref="compound">Scene</ref> *</type>
          <declname>scn</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceme_1a7af63ced847cd4a7e0ca4ba5a1688da3" kindref="member">SceneName</ref></type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build the foundation of the <ref refid="classme_1_1_entity" kindref="compound">Entity</ref>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername><ref refid="classme_1_1_scene" kindref="compound">Scene</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>to which it belongs. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>String</parametername>
</parameternamelist>
<parameterdescription>
<para>name to identify it. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Entity.h" line="29" column="1" bodyfile="Src/EntityComponent/Entity.cpp" bodystart="12" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_entity_1acdb7b868378c42efa0665209ba972988" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>me::Entity::Entity</definition>
        <argsstring>(const SceneName name)</argsstring>
        <name>Entity</name>
        <qualifiedname>me::Entity::Entity</qualifiedname>
        <param>
          <type>const <ref refid="namespaceme_1a7af63ced847cd4a7e0ca4ba5a1688da3" kindref="member">SceneName</ref></type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build the foundation of the <ref refid="classme_1_1_entity" kindref="compound">Entity</ref>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>String</parametername>
</parameternamelist>
<parameterdescription>
<para>name to identify it. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Entity.h" line="35" column="1" bodyfile="Src/EntityComponent/Entity.cpp" bodystart="22" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_entity_1a68039babe5f4ee8e22626c0af1ea85a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>me::Entity::~Entity</definition>
        <argsstring>()</argsstring>
        <name>~Entity</name>
        <qualifiedname>me::Entity::~Entity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete all the components added to the entity. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Entity.h" line="40" column="9" bodyfile="Src/EntityComponent/Entity.cpp" bodystart="32" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_entity_1a0978a842685ed86f12463cb748ff3450" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classme_1_1_component" kindref="compound">Component</ref> *</type>
        <definition>Component * me::Entity::addComponent</definition>
        <argsstring>(const ComponentName &amp;componentName, Parameters &amp;params)</argsstring>
        <name>addComponent</name>
        <qualifiedname>me::Entity::addComponent</qualifiedname>
        <param>
          <type>const <ref refid="namespaceme_1a5bb8ed18150e0bc29a11923a7093a347" kindref="member">ComponentName</ref> &amp;</type>
          <declname>componentName</declname>
        </param>
        <param>
          <type><ref refid="namespaceme_1aa32db0f4d84698471d693fe90639d8e6" kindref="member">Parameters</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a new component. If the component already exists, write a cout in debug mode <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>component</parametername>
</parameternamelist>
<parameterdescription>
<para>the key of the component in the map </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Variable</parametername>
</parameternamelist>
<parameterdescription>
<para>number of arguments of any type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to the new component. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Entity.h" line="50" column="11" bodyfile="Src/EntityComponent/Entity.cpp" bodystart="62" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_entity_1a3d1f664bff54302a41c42406b3ff332e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T * me::Entity::addComponent</definition>
        <argsstring>(const ComponentName &amp;componentName)</argsstring>
        <name>addComponent</name>
        <qualifiedname>me::Entity::addComponent</qualifiedname>
        <param>
          <type>const <ref refid="namespaceme_1a5bb8ed18150e0bc29a11923a7093a347" kindref="member">ComponentName</ref> &amp;</type>
          <declname>componentName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Entity.h" line="53" column="3" bodyfile="Src/EntityComponent/Entity.cpp" bodystart="44" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_entity_1adaeec09d928ca00a2f5a2329bca24050" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool me::Entity::removeComponent</definition>
        <argsstring>(ComponentName &amp;component)</argsstring>
        <name>removeComponent</name>
        <qualifiedname>me::Entity::removeComponent</qualifiedname>
        <param>
          <type><ref refid="namespaceme_1a5bb8ed18150e0bc29a11923a7093a347" kindref="member">ComponentName</ref> &amp;</type>
          <declname>component</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove completely a typed component. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Entity.h" line="59" column="6" bodyfile="Src/EntityComponent/Entity.h" bodystart="59" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_entity_1aeaef76f73c6151b49e42d50a8413b58d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T * me::Entity::getComponent</definition>
        <argsstring>(const ComponentName &amp;component)</argsstring>
        <name>getComponent</name>
        <qualifiedname>me::Entity::getComponent</qualifiedname>
        <param>
          <type>const <ref refid="namespaceme_1a5bb8ed18150e0bc29a11923a7093a347" kindref="member">ComponentName</ref> &amp;</type>
          <declname>component</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the reference a suggested component. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>name in the map </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to the component. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Entity.h" line="75" column="10" bodyfile="Src/EntityComponent/Entity.h" bodystart="75" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_entity_1a7ebe4d3e6714b7137bd0f1ba10b6c534" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool me::Entity::hasComponent</definition>
        <argsstring>(const ComponentName &amp;component)</argsstring>
        <name>hasComponent</name>
        <qualifiedname>me::Entity::hasComponent</qualifiedname>
        <param>
          <type>const <ref refid="namespaceme_1a5bb8ed18150e0bc29a11923a7093a347" kindref="member">ComponentName</ref> &amp;</type>
          <declname>component</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the component has already been added. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>name in the map </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Boolean confirmation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Entity.h" line="87" column="13" bodyfile="Src/EntityComponent/Entity.h" bodystart="87" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_entity_1af281b0f49e07ed9a5f929eca83c7dec1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool me::Entity::isActive</definition>
        <argsstring>() const</argsstring>
        <name>isActive</name>
        <qualifiedname>me::Entity::isActive</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the entity is active. <simplesect kind="return"><para>Boolean confirmation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Entity.h" line="95" column="13" bodyfile="Src/EntityComponent/Entity.h" bodystart="95" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_entity_1ae184b463755cd3e4ba197e13b4aeb6ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void me::Entity::destroy</definition>
        <argsstring>()</argsstring>
        <name>destroy</name>
        <qualifiedname>me::Entity::destroy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the entity activity to false. This will cause to be safely delete by the scene. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Entity.h" line="103" column="13" bodyfile="Src/EntityComponent/Entity.h" bodystart="103" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_entity_1abc0320faa7eaf15f59313ba7e8af3ed7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceme_1a4549e57e933271d021f2d5b4cd46c84e" kindref="member">EntityName</ref></type>
        <definition>EntityName me::Entity::getName</definition>
        <argsstring>() const</argsstring>
        <name>getName</name>
        <qualifiedname>me::Entity::getName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the entity name. <simplesect kind="return"><para>String name. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Entity.h" line="111" column="19" bodyfile="Src/EntityComponent/Entity.h" bodystart="111" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_entity_1a3b6879a58a088f983340a36bd7fddc87" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void me::Entity::setName</definition>
        <argsstring>(const EntityName name)</argsstring>
        <name>setName</name>
        <qualifiedname>me::Entity::setName</qualifiedname>
        <param>
          <type>const <ref refid="namespaceme_1a4549e57e933271d021f2d5b4cd46c84e" kindref="member">EntityName</ref></type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the entity name to the new one. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>String</parametername>
</parameternamelist>
<parameterdescription>
<para>name. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Entity.h" line="119" column="13" bodyfile="Src/EntityComponent/Entity.h" bodystart="119" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_entity_1a885d6740184376cf9846bd913b07e323" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classme_1_1_scene" kindref="compound">Scene</ref> *</type>
        <definition>Scene * me::Entity::getScene</definition>
        <argsstring>() const</argsstring>
        <name>getScene</name>
        <qualifiedname>me::Entity::getScene</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the associated scene of the entity. <simplesect kind="return"><para><ref refid="classme_1_1_scene" kindref="compound">Scene</ref> to which it belongs. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Entity.h" line="127" column="14" bodyfile="Src/EntityComponent/Entity.h" bodystart="127" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_entity_1aedfffd74e7631f78a2dc04740f569397" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void me::Entity::setScene</definition>
        <argsstring>(Scene *scn)</argsstring>
        <name>setScene</name>
        <qualifiedname>me::Entity::setScene</qualifiedname>
        <param>
          <type><ref refid="classme_1_1_scene" kindref="compound">Scene</ref> *</type>
          <declname>scn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the associated scene for the entity. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername><ref refid="classme_1_1_scene" kindref="compound">Scene</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>to which it belongs. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Entity.h" line="135" column="13" bodyfile="Src/EntityComponent/Entity.h" bodystart="135" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_entity_1a29967c230baf1977377dcd2ea0385b64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void me::Entity::start</definition>
        <argsstring>()</argsstring>
        <name>start</name>
        <qualifiedname>me::Entity::start</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Entity.h" line="139" column="6" bodyfile="Src/EntityComponent/Entity.cpp" bodystart="80" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_entity_1ae76a31d7eee409a6c19d6040474cf04f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void me::Entity::update</definition>
        <argsstring>()</argsstring>
        <name>update</name>
        <qualifiedname>me::Entity::update</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Run all the added components update method. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Entity.h" line="144" column="6" bodyfile="Src/EntityComponent/Entity.cpp" bodystart="88" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_entity_1a9e2497930618c8d33ca5a9de849d3000" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void me::Entity::lateUpdate</definition>
        <argsstring>()</argsstring>
        <name>lateUpdate</name>
        <qualifiedname>me::Entity::lateUpdate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Run all the added components lateUpdate method. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Entity.h" line="149" column="6" bodyfile="Src/EntityComponent/Entity.cpp" bodystart="96" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_entity_1abd151bfab563e823ed2d7ea58f93c0cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void me::Entity::OnCollisionEnter</definition>
        <argsstring>(Entity *other)</argsstring>
        <name>OnCollisionEnter</name>
        <qualifiedname>me::Entity::OnCollisionEnter</qualifiedname>
        <param>
          <type><ref refid="classme_1_1_entity" kindref="compound">Entity</ref> *</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is called when the object collides with another object </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Entity.h" line="155" column="6" bodyfile="Src/EntityComponent/Entity.cpp" bodystart="104" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_entity_1aa20d48364dc6c9d06f3265499392e303" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void me::Entity::OnCollisionStay</definition>
        <argsstring>(Entity *other)</argsstring>
        <name>OnCollisionStay</name>
        <qualifiedname>me::Entity::OnCollisionStay</qualifiedname>
        <param>
          <type><ref refid="classme_1_1_entity" kindref="compound">Entity</ref> *</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is called every frame while the object is colliding with another object </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Entity.h" line="161" column="6" bodyfile="Src/EntityComponent/Entity.cpp" bodystart="111" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_entity_1aecbaadc28dac88c0534d620d40035c70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void me::Entity::OnCollisionExit</definition>
        <argsstring>(Entity *other)</argsstring>
        <name>OnCollisionExit</name>
        <qualifiedname>me::Entity::OnCollisionExit</qualifiedname>
        <param>
          <type><ref refid="classme_1_1_entity" kindref="compound">Entity</ref> *</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is called when the object stops colliding with another object </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Entity.h" line="166" column="6" bodyfile="Src/EntityComponent/Entity.cpp" bodystart="118" bodyend="124"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Src/EntityComponent/Entity.h" line="20" column="1" bodyfile="Src/EntityComponent/Entity.h" bodystart="20" bodyend="174"/>
    <listofallmembers>
      <member refid="classme_1_1_entity_1a0978a842685ed86f12463cb748ff3450" prot="public" virt="non-virtual"><scope>me::Entity</scope><name>addComponent</name></member>
      <member refid="classme_1_1_entity_1a3d1f664bff54302a41c42406b3ff332e" prot="public" virt="non-virtual"><scope>me::Entity</scope><name>addComponent</name></member>
      <member refid="classme_1_1_entity_1ae184b463755cd3e4ba197e13b4aeb6ed" prot="public" virt="non-virtual"><scope>me::Entity</scope><name>destroy</name></member>
      <member refid="classme_1_1_entity_1a3872e571420ba75d34d686c3a34c2ed3" prot="public" virt="non-virtual"><scope>me::Entity</scope><name>Entity</name></member>
      <member refid="classme_1_1_entity_1acdb7b868378c42efa0665209ba972988" prot="public" virt="non-virtual"><scope>me::Entity</scope><name>Entity</name></member>
      <member refid="classme_1_1_entity_1aeaef76f73c6151b49e42d50a8413b58d" prot="public" virt="non-virtual"><scope>me::Entity</scope><name>getComponent</name></member>
      <member refid="classme_1_1_entity_1abc0320faa7eaf15f59313ba7e8af3ed7" prot="public" virt="non-virtual"><scope>me::Entity</scope><name>getName</name></member>
      <member refid="classme_1_1_entity_1a885d6740184376cf9846bd913b07e323" prot="public" virt="non-virtual"><scope>me::Entity</scope><name>getScene</name></member>
      <member refid="classme_1_1_entity_1a7ebe4d3e6714b7137bd0f1ba10b6c534" prot="public" virt="non-virtual"><scope>me::Entity</scope><name>hasComponent</name></member>
      <member refid="classme_1_1_entity_1af281b0f49e07ed9a5f929eca83c7dec1" prot="public" virt="non-virtual"><scope>me::Entity</scope><name>isActive</name></member>
      <member refid="classme_1_1_entity_1a9e2497930618c8d33ca5a9de849d3000" prot="public" virt="non-virtual"><scope>me::Entity</scope><name>lateUpdate</name></member>
      <member refid="classme_1_1_entity_1a9fcae1e4ef1d1ac2caab174f2cf222bd" prot="private" virt="non-virtual"><scope>me::Entity</scope><name>mActive</name></member>
      <member refid="classme_1_1_entity_1ac40a461dc07a93cc5400a6819352c856" prot="private" virt="non-virtual"><scope>me::Entity</scope><name>mComponents</name></member>
      <member refid="classme_1_1_entity_1a60f2ade0a3ecd63407be07cb8c1559b5" prot="private" virt="non-virtual"><scope>me::Entity</scope><name>mName</name></member>
      <member refid="classme_1_1_entity_1aaf4db4b3625a24f29c02f91e5044e553" prot="private" virt="non-virtual"><scope>me::Entity</scope><name>mScn</name></member>
      <member refid="classme_1_1_entity_1abd151bfab563e823ed2d7ea58f93c0cc" prot="public" virt="non-virtual"><scope>me::Entity</scope><name>OnCollisionEnter</name></member>
      <member refid="classme_1_1_entity_1aecbaadc28dac88c0534d620d40035c70" prot="public" virt="non-virtual"><scope>me::Entity</scope><name>OnCollisionExit</name></member>
      <member refid="classme_1_1_entity_1aa20d48364dc6c9d06f3265499392e303" prot="public" virt="non-virtual"><scope>me::Entity</scope><name>OnCollisionStay</name></member>
      <member refid="classme_1_1_entity_1adaeec09d928ca00a2f5a2329bca24050" prot="public" virt="non-virtual"><scope>me::Entity</scope><name>removeComponent</name></member>
      <member refid="classme_1_1_entity_1aac1234d90d7620c49a21a4a95971cd2b" prot="private" virt="non-virtual"><scope>me::Entity</scope><name>Scene</name></member>
      <member refid="classme_1_1_entity_1a3b6879a58a088f983340a36bd7fddc87" prot="public" virt="non-virtual"><scope>me::Entity</scope><name>setName</name></member>
      <member refid="classme_1_1_entity_1aedfffd74e7631f78a2dc04740f569397" prot="public" virt="non-virtual"><scope>me::Entity</scope><name>setScene</name></member>
      <member refid="classme_1_1_entity_1a29967c230baf1977377dcd2ea0385b64" prot="public" virt="non-virtual"><scope>me::Entity</scope><name>start</name></member>
      <member refid="classme_1_1_entity_1ae76a31d7eee409a6c19d6040474cf04f" prot="public" virt="non-virtual"><scope>me::Entity</scope><name>update</name></member>
      <member refid="classme_1_1_entity_1a68039babe5f4ee8e22626c0af1ea85a7" prot="public" virt="virtual"><scope>me::Entity</scope><name>~Entity</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
