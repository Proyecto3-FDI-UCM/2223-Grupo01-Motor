<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="_rigid_body_8cpp" kind="file" language="C++">
    <compoundname>RigidBody.cpp</compoundname>
    <includes refid="_rigid_body_8h" local="yes">RigidBody.h</includes>
    <includes local="yes">LinearMath/btTransform.h</includes>
    <includes local="yes">LinearMath/btQuaternion.h</includes>
    <includes local="yes">LinearMath/btVector3.h</includes>
    <includes local="yes">BulletDynamics/Dynamics/btRigidBody.h</includes>
    <includes refid="_physics_manager_8h" local="yes">Physics/PhysicsManager.h</includes>
    <includes refid="_entity_8h" local="yes">EntityComponent/Entity.h</includes>
    <incdepgraph>
      <node id="14">
        <label>BulletDynamics/Dynamics/btRigidBody.h</label>
      </node>
      <node id="3">
        <label>Component.h</label>
        <link refid="_component_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Src/EntityComponent/Components/RigidBody.cpp</label>
        <link refid="_rigid_body_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>RigidBody.h</label>
        <link refid="_rigid_body_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Transform.h</label>
        <link refid="_transform_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>EntityComponent/Entity.h</label>
        <link refid="_entity_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>InfoScene.h</label>
        <link refid="_info_scene_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>MotorEngine/MotorEngineAPI.h</label>
        <link refid="_motor_engine_a_p_i_8h"/>
      </node>
      <node id="18">
        <label>DebugDrawer.h</label>
        <link refid="_debug_drawer_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>Physics/PhysicsManager.h</label>
        <link refid="_physics_manager_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>Utils/Singleton.h</label>
        <link refid="_singleton_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>Utils/Vector3.h</label>
        <link refid="_vector3_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>Utils/Vector4.h</label>
        <link refid="_vector4_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>LinearMath/btIDebugDraw.h</label>
      </node>
      <node id="12">
        <label>LinearMath/btQuaternion.h</label>
      </node>
      <node id="11">
        <label>LinearMath/btTransform.h</label>
      </node>
      <node id="13">
        <label>LinearMath/btVector3.h</label>
      </node>
      <node id="20">
        <label>Ogre.h</label>
      </node>
      <node id="8">
        <label>cmath</label>
      </node>
      <node id="10">
        <label>list</label>
      </node>
      <node id="26">
        <label>map</label>
      </node>
      <node id="7">
        <label>math.h</label>
      </node>
      <node id="17">
        <label>memory</label>
      </node>
      <node id="23">
        <label>string</label>
      </node>
      <node id="24">
        <label>unordered_map</label>
      </node>
      <node id="25">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_rigid_body_8h" kindref="compound">RigidBody.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;LinearMath/btTransform.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;LinearMath/btQuaternion.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;LinearMath/btVector3.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;BulletDynamics/Dynamics/btRigidBody.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_physics_manager_8h" kindref="compound">Physics/PhysicsManager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_entity_8h" kindref="compound">EntityComponent/Entity.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><ref refid="classme_1_1_rigid_body_1a0be8e6e50a7a381ebe25ecbe60643c85" kindref="member">me::RigidBody::RigidBody</ref>()</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><ref refid="classme_1_1_rigid_body_1a667d92b721c6c1072c3ae29583f4de0a" kindref="member">me::RigidBody::~RigidBody</ref>()</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_rigid_body_1afc256e6a0acfc8403a63c6f88e7251e7" kindref="member">me::RigidBody::start</ref>()</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>mTransform<sp/>=<sp/>mEntity-&gt;getComponent&lt;Transform&gt;(</highlight><highlight class="stringliteral">&quot;transform&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(mTransform<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;An<sp/>Entity<sp/>doesn&apos;t<sp/>have<sp/>the<sp/>transform<sp/>component&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>mBtTransform<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>btTransform(btQuaternion(mTransform-&gt;getRotation().getRotationInBullet()),<sp/>btVector3(mTransform-&gt;getPosition().v3ToBulletV3()));</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>btVector3<sp/>scale<sp/>=<sp/>mTransform-&gt;getScale().v3ToBulletV3();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>mBtRigidBody<sp/>=<sp/><ref refid="namespaceme_1a4c5f82cdd874c703ca40fb8fc4336d8d" kindref="member">me::physicsManager</ref>().<ref refid="classme_1_1_physics_manager_1ad020f481e47299f0758d1953c9974d2b" kindref="member">createRigidBody</ref>(mBtTransform,<sp/>scale,<sp/><ref refid="_physics_manager_8h_1a3c6c49dd4d974c67346f991bc443b14b" kindref="member">Shapes</ref>(mColShape),</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_physics_manager_8h_1a8a93b61bc797a7d1907f42796a252493" kindref="member">MovementType</ref>(mMvType),<sp/>mIsTrigger,<sp/>mFricion,<sp/>mMass,<sp/>mRestitution);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>mBtRigidBody-&gt;setUserPointer(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//To<sp/>implement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_rigid_body_1ace166d0417a107651406a821071a827a" kindref="member">me::RigidBody::update</ref>()</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_physics_manager_8h_1a8a93b61bc797a7d1907f42796a252493" kindref="member">MovementType</ref>(mMvType)<sp/>!=<sp/><ref refid="_physics_manager_8h_1a8a93b61bc797a7d1907f42796a252493aaff433b41af5badf4d9de6b351e1cf17" kindref="member">MOVEMENT_TYPE_STATIC</ref>)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>btVector3<sp/>pos<sp/>=<sp/>mBtRigidBody-&gt;getWorldTransform().getOrigin();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>+=<sp/>mBtRigidBody-&gt;getLinearVelocity();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mTransform-&gt;setPosition(Vector3(pos.x(),<sp/>pos.y(),<sp/>pos.z()));</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//To<sp/>implement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_rigid_body_1a1a617e3d268a641f57710f5067375b15" kindref="member">me::RigidBody::lateUpdate</ref>()</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_rigid_body_1a54d755df6695c7bda14440b8b49be7f9" kindref="member">me::RigidBody::setTrigger</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isTrigger)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>mIsTrigger<sp/>=<sp/>isTrigger;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_rigid_body_1a391d125434fe50a9fa3cdf51dc624759" kindref="member">me::RigidBody::setMass</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mass)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>mMass<sp/>=<sp/>mass;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_rigid_body_1a55964a98631556a45ab72a39ba994a4a" kindref="member">me::RigidBody::setFriction</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>friction)</highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>mFricion<sp/>=<sp/>friction;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_rigid_body_1a6180a6f9718f828df3158a8bab23236a" kindref="member">me::RigidBody::setRestitution</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>restitution)</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>mRestitution<sp/>=<sp/>restitution;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_rigid_body_1a2601a159924ddb9f57c781f0dad979e4" kindref="member">me::RigidBody::setColShape</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colShape)</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>mColShape<sp/>=<sp/>colShape;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_rigid_body_1a4152f4fd03ae45fc146178cd1cd2396e" kindref="member">me::RigidBody::setMomeventType</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mvType)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>mMvType<sp/>=<sp/>mvType;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_rigid_body_1a575476ece10aeedf01be1a381d9d3346" kindref="member">me::RigidBody::addForce</ref>(Vector3<sp/>force,<sp/>Vector3<sp/>relativePos)</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>mBtRigidBody-&gt;applyForce(force.v3ToBulletV3(),<sp/>relativePos.v3ToBulletV3());</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_rigid_body_1ad474ec4df0965ae6caa6fe17d86c2aab" kindref="member">me::RigidBody::addImpulse</ref>(Vector3<sp/>impulse,<sp/>Vector3<sp/>relativePos)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>mBtRigidBody-&gt;applyCentralImpulse(impulse.v3ToBulletV3());</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_rigid_body_1a8b86f53b288a7531f11265ad27f18b4f" kindref="member">me::RigidBody::getTrigger</ref>()</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mIsTrigger;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_rigid_body_1a0d73e2dc9b02c05feb27db3cb88bf507" kindref="member">me::RigidBody::getMass</ref>()<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mMass;</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_rigid_body_1a1e6c2e0d3d335b37498924061340ffc8" kindref="member">me::RigidBody::getFriction</ref>()</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mFricion;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_rigid_body_1a3091cf9d99387fb6080fa472afa14005" kindref="member">me::RigidBody::getRestitution</ref>()</highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRestitution;</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_rigid_body_1abca33af6fd34f5b5722c78542a46f87a" kindref="member">me::RigidBody::getColShape</ref>()</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mColShape;</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_rigid_body_1ae514e7e9bd24531a63668439c36d396a" kindref="member">me::RigidBody::getMovementType</ref>()</highlight></codeline>
<codeline lineno="120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mMvType;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Src/EntityComponent/Components/RigidBody.cpp"/>
  </compounddef>
</doxygen>
