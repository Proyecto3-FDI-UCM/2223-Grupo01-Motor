<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classme_1_1_transform" kind="class" language="C++" prot="public">
    <compoundname>me::Transform</compoundname>
    <basecompoundref refid="classme_1_1_component" prot="public" virt="non-virtual">me::Component</basecompoundref>
    <includes refid="_transform_8h" local="no">Transform.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classme_1_1_transform_1a24a5f0ecffdf688713e7758e9078c26f" prot="private" static="no" mutable="no">
        <type><ref refid="classme_1_1_vector3" kindref="compound">Vector3</ref></type>
        <definition>Vector3 me::Transform::mPosition</definition>
        <argsstring></argsstring>
        <name>mPosition</name>
        <qualifiedname>me::Transform::mPosition</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Components/Transform.h" line="143" column="9" bodyfile="Src/EntityComponent/Components/Transform.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classme_1_1_transform_1a05ae239b57e75bb75e8683edbd57bd7e" prot="private" static="no" mutable="no">
        <type><ref refid="classme_1_1_vector4" kindref="compound">Vector4</ref></type>
        <definition>Vector4 me::Transform::mRotation</definition>
        <argsstring></argsstring>
        <name>mRotation</name>
        <qualifiedname>me::Transform::mRotation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Components/Transform.h" line="144" column="9" bodyfile="Src/EntityComponent/Components/Transform.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classme_1_1_transform_1a7393b92a93d2fa9b7a734effbbc10ce1" prot="private" static="no" mutable="no">
        <type><ref refid="classme_1_1_vector3" kindref="compound">Vector3</ref></type>
        <definition>Vector3 me::Transform::mScale</definition>
        <argsstring></argsstring>
        <name>mScale</name>
        <qualifiedname>me::Transform::mScale</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Components/Transform.h" line="145" column="10" bodyfile="Src/EntityComponent/Components/Transform.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classme_1_1_transform_1affbd10ad391806f29801fffea8004120" prot="private" static="no" mutable="no">
        <type><ref refid="classme_1_1_vector3" kindref="compound">Vector3</ref></type>
        <definition>Vector3 me::Transform::mLocalPosition</definition>
        <argsstring></argsstring>
        <name>mLocalPosition</name>
        <qualifiedname>me::Transform::mLocalPosition</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Components/Transform.h" line="147" column="9" bodyfile="Src/EntityComponent/Components/Transform.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classme_1_1_transform_1a35e8d59b2d0246b5e0944d5bf679e1ec" prot="private" static="no" mutable="no">
        <type><ref refid="classme_1_1_vector4" kindref="compound">Vector4</ref></type>
        <definition>Vector4 me::Transform::mLocalRotation</definition>
        <argsstring></argsstring>
        <name>mLocalRotation</name>
        <qualifiedname>me::Transform::mLocalRotation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Components/Transform.h" line="148" column="9" bodyfile="Src/EntityComponent/Components/Transform.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classme_1_1_transform_1ace95fa3d4cd0330bb901c724159fd7fd" prot="private" static="no" mutable="no">
        <type><ref refid="classme_1_1_vector3" kindref="compound">Vector3</ref></type>
        <definition>Vector3 me::Transform::mLocalScale</definition>
        <argsstring></argsstring>
        <name>mLocalScale</name>
        <qualifiedname>me::Transform::mLocalScale</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Components/Transform.h" line="149" column="10" bodyfile="Src/EntityComponent/Components/Transform.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classme_1_1_transform_1a3eeab61c6bd2e5d0921e7da19126c064" prot="private" static="no" mutable="no">
        <type><ref refid="classme_1_1_transform" kindref="compound">Transform</ref> *</type>
        <definition>Transform* me::Transform::mParent</definition>
        <argsstring></argsstring>
        <name>mParent</name>
        <qualifiedname>me::Transform::mParent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Components/Transform.h" line="151" column="11" bodyfile="Src/EntityComponent/Components/Transform.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classme_1_1_transform_1a4d1b85cbdc72b4e03f0659d27e0f3c19" prot="private" static="no" mutable="no">
        <type>std::list&lt; <ref refid="classme_1_1_transform" kindref="compound">Transform</ref> * &gt;</type>
        <definition>std::list&lt;Transform*&gt; me::Transform::mChildren</definition>
        <argsstring></argsstring>
        <name>mChildren</name>
        <qualifiedname>me::Transform::mChildren</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Components/Transform.h" line="153" column="11" bodyfile="Src/EntityComponent/Components/Transform.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classme_1_1_transform_1af99074e8e38a48840d24ae616ecf5eff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>me::Transform::Transform</definition>
        <argsstring>()</argsstring>
        <name>Transform</name>
        <qualifiedname>me::Transform::Transform</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a new <ref refid="classme_1_1_transform" kindref="compound">Transform</ref> object with default position (0, 0, 0), rotation (0, 0, 0) and scale (1, 1, 1). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Components/Transform.h" line="24" column="1" bodyfile="Src/EntityComponent/Components/Transform.cpp" bodystart="5" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_transform_1a68108709319b2cd078034d9f73156503" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>me::Transform::~Transform</definition>
        <argsstring>() override</argsstring>
        <name>~Transform</name>
        <qualifiedname>me::Transform::~Transform</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy the <ref refid="classme_1_1_transform" kindref="compound">Transform</ref> object and its components. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Components/Transform.h" line="29" column="1" bodyfile="Src/EntityComponent/Components/Transform.cpp" bodystart="20" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_transform_1a242704f2581d1654cc9562932f93aa2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void me::Transform::start</definition>
        <argsstring>() override</argsstring>
        <name>start</name>
        <qualifiedname>me::Transform::start</qualifiedname>
        <reimplements refid="classme_1_1_component_1a349e2dfff958c956945a12fbcb6951ae">start</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is only ever called once. This must be called at the instantiation of the script. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Components/Transform.h" line="31" column="6" bodyfile="Src/EntityComponent/Components/Transform.cpp" bodystart="28" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_transform_1ac2193262cc8056821b757d7d9c39bb2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void me::Transform::update</definition>
        <argsstring>() override</argsstring>
        <name>update</name>
        <qualifiedname>me::Transform::update</qualifiedname>
        <reimplements refid="classme_1_1_component_1a421049b57bf72b90a48425f772b39aa1">update</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is meant to be the definition of those updates that has to be processed at the begining of the game cycle.</para>
<para>Almost all the logic updates. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Components/Transform.h" line="32" column="6" bodyfile="Src/EntityComponent/Components/Transform.cpp" bodystart="32" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_transform_1a9fd9779d2848c6f1ac0bf3c3aac08b52" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void me::Transform::lateUpdate</definition>
        <argsstring>() override</argsstring>
        <name>lateUpdate</name>
        <qualifiedname>me::Transform::lateUpdate</qualifiedname>
        <reimplements refid="classme_1_1_component_1af9625b0308ccd7b22c7871922de0b0a0">lateUpdate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is meant to be the definition of those updates that has to be processed at the end of the game cycle.</para>
<para>For example: render and collisions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Components/Transform.h" line="33" column="6" bodyfile="Src/EntityComponent/Components/Transform.cpp" bodystart="37" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_transform_1a2a3394417d7be1af5cf997b586b3802d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classme_1_1_vector3" kindref="compound">Vector3</ref></type>
        <definition>me::Vector3 me::Transform::getPosition</definition>
        <argsstring>()</argsstring>
        <name>getPosition</name>
        <qualifiedname>me::Transform::getPosition</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the position vector of the <ref refid="classme_1_1_transform" kindref="compound">Transform</ref> object.</para>
<para><simplesect kind="return"><para>A <ref refid="classme_1_1_vector3" kindref="compound">Vector3</ref> object representing the position. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Components/Transform.h" line="40" column="9" bodyfile="Src/EntityComponent/Components/Transform.cpp" bodystart="41" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_transform_1abcec96f0e6a9eb3b86f1568068639175" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classme_1_1_vector4" kindref="compound">Vector4</ref></type>
        <definition>me::Vector4 me::Transform::getRotation</definition>
        <argsstring>()</argsstring>
        <name>getRotation</name>
        <qualifiedname>me::Transform::getRotation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the current Rotation </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Components/Transform.h" line="45" column="9" bodyfile="Src/EntityComponent/Components/Transform.cpp" bodystart="46" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_transform_1ad86a67fcbc0cb1eea9ca3dd427a3ad1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classme_1_1_vector3" kindref="compound">Vector3</ref></type>
        <definition>me::Vector3 me::Transform::getScale</definition>
        <argsstring>()</argsstring>
        <name>getScale</name>
        <qualifiedname>me::Transform::getScale</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the scale vector of the <ref refid="classme_1_1_transform" kindref="compound">Transform</ref> object.</para>
<para><simplesect kind="return"><para>A <ref refid="classme_1_1_vector3" kindref="compound">Vector3</ref> object representing the scale. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Components/Transform.h" line="52" column="9" bodyfile="Src/EntityComponent/Components/Transform.cpp" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_transform_1a535f79706339ccffb31ac911fc13a406" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void me::Transform::setPosition</definition>
        <argsstring>(Vector3 newPosition)</argsstring>
        <name>setPosition</name>
        <qualifiedname>me::Transform::setPosition</qualifiedname>
        <param>
          <type><ref refid="classme_1_1_vector3" kindref="compound">Vector3</ref></type>
          <declname>newPosition</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the position vector of the <ref refid="classme_1_1_transform" kindref="compound">Transform</ref> object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newPosition</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classme_1_1_vector3" kindref="compound">Vector3</ref> object representing the new position. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Components/Transform.h" line="59" column="6" bodyfile="Src/EntityComponent/Components/Transform.cpp" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_transform_1aa80922610841e1db8bfb8317297b6f83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void me::Transform::setRotation</definition>
        <argsstring>(Vector3 newRotation)</argsstring>
        <name>setRotation</name>
        <qualifiedname>me::Transform::setRotation</qualifiedname>
        <param>
          <type><ref refid="classme_1_1_vector3" kindref="compound">Vector3</ref></type>
          <declname>newRotation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the rotation vector of the <ref refid="classme_1_1_transform" kindref="compound">Transform</ref> object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newRotation</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classme_1_1_vector3" kindref="compound">Vector3</ref> object representing the new rotation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Components/Transform.h" line="66" column="6" bodyfile="Src/EntityComponent/Components/Transform.cpp" bodystart="60" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_transform_1a5d0b8159e8618392da9a1ff890c4e551" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void me::Transform::setRotation</definition>
        <argsstring>(Vector4 newRotation)</argsstring>
        <name>setRotation</name>
        <qualifiedname>me::Transform::setRotation</qualifiedname>
        <param>
          <type><ref refid="classme_1_1_vector4" kindref="compound">Vector4</ref></type>
          <declname>newRotation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the rotation vector of the <ref refid="classme_1_1_transform" kindref="compound">Transform</ref> object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newRotation</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classme_1_1_vector4" kindref="compound">Vector4</ref> object representing the new rotation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Components/Transform.h" line="73" column="6" bodyfile="Src/EntityComponent/Components/Transform.cpp" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_transform_1a6517411dc8c1457d1472259d3660401b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void me::Transform::setScale</definition>
        <argsstring>(Vector3 newScale)</argsstring>
        <name>setScale</name>
        <qualifiedname>me::Transform::setScale</qualifiedname>
        <param>
          <type><ref refid="classme_1_1_vector3" kindref="compound">Vector3</ref></type>
          <declname>newScale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the scale vector of the <ref refid="classme_1_1_transform" kindref="compound">Transform</ref> object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newScale</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classme_1_1_vector3" kindref="compound">Vector3</ref> object representing the new scale. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Components/Transform.h" line="80" column="6" bodyfile="Src/EntityComponent/Components/Transform.cpp" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_transform_1a961468fbfb4263d596d963dcee7ae015" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void me::Transform::translate</definition>
        <argsstring>(Vector3 translation)</argsstring>
        <name>translate</name>
        <qualifiedname>me::Transform::translate</qualifiedname>
        <param>
          <type><ref refid="classme_1_1_vector3" kindref="compound">Vector3</ref></type>
          <declname>translation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Translate the <ref refid="classme_1_1_transform" kindref="compound">Transform</ref> object by a given vector.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>translation</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classme_1_1_vector3" kindref="compound">Vector3</ref> object representing the translation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Components/Transform.h" line="88" column="6" bodyfile="Src/EntityComponent/Components/Transform.cpp" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_transform_1a62018e63fcb34e0270597f9b9aa044d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void me::Transform::rotate</definition>
        <argsstring>(float degrees, Vector3 axis)</argsstring>
        <name>rotate</name>
        <qualifiedname>me::Transform::rotate</qualifiedname>
        <param>
          <type>float</type>
          <declname>degrees</declname>
        </param>
        <param>
          <type><ref refid="classme_1_1_vector3" kindref="compound">Vector3</ref></type>
          <declname>axis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rotate the <ref refid="classme_1_1_transform" kindref="compound">Transform</ref> object by a given vector.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>degrees</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of degrees to turn </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>degrees</parametername>
</parameternamelist>
<parameterdescription>
<para>the axis where to apply the rotation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Components/Transform.h" line="96" column="6" bodyfile="Src/EntityComponent/Components/Transform.cpp" bodystart="80" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_transform_1a367d97c5ae3f1e1e706c838df2f9da6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void me::Transform::scaleF</definition>
        <argsstring>(float scale)</argsstring>
        <name>scaleF</name>
        <qualifiedname>me::Transform::scaleF</qualifiedname>
        <param>
          <type>float</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scale the <ref refid="classme_1_1_transform" kindref="compound">Transform</ref> object by a given factor.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scaleF</parametername>
</parameternamelist>
<parameterdescription>
<para>A float representing the scale factor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Components/Transform.h" line="104" column="6" bodyfile="Src/EntityComponent/Components/Transform.cpp" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_transform_1a625185efb6c77de21701b806d6c5d17c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int me::Transform::childCount</definition>
        <argsstring>()</argsstring>
        <name>childCount</name>
        <qualifiedname>me::Transform::childCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of child <ref refid="classme_1_1_transform" kindref="compound">Transform</ref> objects. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Components/Transform.h" line="109" column="5" bodyfile="Src/EntityComponent/Components/Transform.cpp" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_transform_1abfacb4f6c5590196a628a1610b238ec8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void me::Transform::addChild</definition>
        <argsstring>(Transform *child)</argsstring>
        <name>addChild</name>
        <qualifiedname>me::Transform::addChild</qualifiedname>
        <param>
          <type><ref refid="classme_1_1_transform" kindref="compound">Transform</ref> *</type>
          <declname>child</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a child <ref refid="classme_1_1_transform" kindref="compound">Transform</ref> object to the <ref refid="classme_1_1_transform" kindref="compound">Transform</ref> object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>child</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the child <ref refid="classme_1_1_transform" kindref="compound">Transform</ref> object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Components/Transform.h" line="116" column="6" bodyfile="Src/EntityComponent/Components/Transform.cpp" bodystart="95" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_transform_1ac55dd46dbbde9825db3cf6a0f11674ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void me::Transform::removeChild</definition>
        <argsstring>(Transform *child)</argsstring>
        <name>removeChild</name>
        <qualifiedname>me::Transform::removeChild</qualifiedname>
        <param>
          <type><ref refid="classme_1_1_transform" kindref="compound">Transform</ref> *</type>
          <declname>child</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove a child <ref refid="classme_1_1_transform" kindref="compound">Transform</ref> object from the <ref refid="classme_1_1_transform" kindref="compound">Transform</ref> object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>child</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the child <ref refid="classme_1_1_transform" kindref="compound">Transform</ref> object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Components/Transform.h" line="123" column="6" bodyfile="Src/EntityComponent/Components/Transform.cpp" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_transform_1a68e69c62c3b1fb3f0d32c2d6b2cc02d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classme_1_1_transform" kindref="compound">Transform</ref> *</type>
        <definition>me::Transform * me::Transform::getChild</definition>
        <argsstring>(int index)</argsstring>
        <name>getChild</name>
        <qualifiedname>me::Transform::getChild</qualifiedname>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the child transform at the specified index. Returns nullptr if the index is out of range or if there are no children.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the child transform to retrieve. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Components/Transform.h" line="131" column="11" bodyfile="Src/EntityComponent/Components/Transform.cpp" bodystart="105" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_transform_1adcade11222bca7885bc9b45d509e4f93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classme_1_1_transform" kindref="compound">Transform</ref> *</type>
        <definition>me::Transform * me::Transform::getParent</definition>
        <argsstring>()</argsstring>
        <name>getParent</name>
        <qualifiedname>me::Transform::getParent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the parent transform of this transform.</para>
<para><simplesect kind="return"><para>A pointer to the parent transform of this transform. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/EntityComponent/Components/Transform.h" line="139" column="11" bodyfile="Src/EntityComponent/Components/Transform.cpp" bodystart="117" bodyend="120"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>me::Component</label>
        <link refid="classme_1_1_component"/>
      </node>
      <node id="1">
        <label>me::Transform</label>
        <link refid="classme_1_1_transform"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>me::Component</label>
        <link refid="classme_1_1_component"/>
        <childnode refid="3" relation="usage">
          <edgelabel>mEntity</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>me::Entity</label>
        <link refid="classme_1_1_entity"/>
      </node>
      <node id="1">
        <label>me::Transform</label>
        <link refid="classme_1_1_transform"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Src/EntityComponent/Components/Transform.h" line="16" column="1" bodyfile="Src/EntityComponent/Components/Transform.h" bodystart="17" bodyend="154"/>
    <listofallmembers>
      <member refid="classme_1_1_transform_1abfacb4f6c5590196a628a1610b238ec8" prot="public" virt="non-virtual"><scope>me::Transform</scope><name>addChild</name></member>
      <member refid="classme_1_1_transform_1a625185efb6c77de21701b806d6c5d17c" prot="public" virt="non-virtual"><scope>me::Transform</scope><name>childCount</name></member>
      <member refid="classme_1_1_component_1a4dae1070d5cb2b14b49466e64b3095d6" prot="public" virt="non-virtual"><scope>me::Transform</scope><name>Component</name></member>
      <member refid="classme_1_1_component_1ab29a0b2c3a9ad3e4e0cf81d8fdbff4f3" prot="public" virt="non-virtual"><scope>me::Transform</scope><name>enabled</name></member>
      <member refid="classme_1_1_transform_1a68e69c62c3b1fb3f0d32c2d6b2cc02d8" prot="public" virt="non-virtual"><scope>me::Transform</scope><name>getChild</name></member>
      <member refid="classme_1_1_component_1a1c8917fcfda2d8ad66ab487ab726a0cd" prot="public" virt="non-virtual"><scope>me::Transform</scope><name>getEntity</name></member>
      <member refid="classme_1_1_transform_1adcade11222bca7885bc9b45d509e4f93" prot="public" virt="non-virtual"><scope>me::Transform</scope><name>getParent</name></member>
      <member refid="classme_1_1_transform_1a2a3394417d7be1af5cf997b586b3802d" prot="public" virt="non-virtual"><scope>me::Transform</scope><name>getPosition</name></member>
      <member refid="classme_1_1_transform_1abcec96f0e6a9eb3b86f1568068639175" prot="public" virt="non-virtual"><scope>me::Transform</scope><name>getRotation</name></member>
      <member refid="classme_1_1_transform_1ad86a67fcbc0cb1eea9ca3dd427a3ad1b" prot="public" virt="non-virtual"><scope>me::Transform</scope><name>getScale</name></member>
      <member refid="classme_1_1_transform_1a9fd9779d2848c6f1ac0bf3c3aac08b52" prot="public" virt="virtual"><scope>me::Transform</scope><name>lateUpdate</name></member>
      <member refid="classme_1_1_transform_1a4d1b85cbdc72b4e03f0659d27e0f3c19" prot="private" virt="non-virtual"><scope>me::Transform</scope><name>mChildren</name></member>
      <member refid="classme_1_1_component_1a89862182926907ae608d3244d1d4e6d1" prot="protected" virt="non-virtual"><scope>me::Transform</scope><name>mEntity</name></member>
      <member refid="classme_1_1_transform_1affbd10ad391806f29801fffea8004120" prot="private" virt="non-virtual"><scope>me::Transform</scope><name>mLocalPosition</name></member>
      <member refid="classme_1_1_transform_1a35e8d59b2d0246b5e0944d5bf679e1ec" prot="private" virt="non-virtual"><scope>me::Transform</scope><name>mLocalRotation</name></member>
      <member refid="classme_1_1_transform_1ace95fa3d4cd0330bb901c724159fd7fd" prot="private" virt="non-virtual"><scope>me::Transform</scope><name>mLocalScale</name></member>
      <member refid="classme_1_1_transform_1a3eeab61c6bd2e5d0921e7da19126c064" prot="private" virt="non-virtual"><scope>me::Transform</scope><name>mParent</name></member>
      <member refid="classme_1_1_transform_1a24a5f0ecffdf688713e7758e9078c26f" prot="private" virt="non-virtual"><scope>me::Transform</scope><name>mPosition</name></member>
      <member refid="classme_1_1_transform_1a05ae239b57e75bb75e8683edbd57bd7e" prot="private" virt="non-virtual"><scope>me::Transform</scope><name>mRotation</name></member>
      <member refid="classme_1_1_transform_1a7393b92a93d2fa9b7a734effbbc10ce1" prot="private" virt="non-virtual"><scope>me::Transform</scope><name>mScale</name></member>
      <member refid="classme_1_1_component_1a4d98175f03ee8266f71d9237b3d23748" prot="public" virt="virtual"><scope>me::Transform</scope><name>OnCollisionEnter</name></member>
      <member refid="classme_1_1_component_1a643aad67bcb41b2c936e49e25b78342e" prot="public" virt="virtual"><scope>me::Transform</scope><name>OnCollisionExit</name></member>
      <member refid="classme_1_1_component_1a9e024171b2bbed0cedf1476e2879081f" prot="public" virt="virtual"><scope>me::Transform</scope><name>OnCollisionStay</name></member>
      <member refid="classme_1_1_transform_1ac55dd46dbbde9825db3cf6a0f11674ed" prot="public" virt="non-virtual"><scope>me::Transform</scope><name>removeChild</name></member>
      <member refid="classme_1_1_transform_1a62018e63fcb34e0270597f9b9aa044d5" prot="public" virt="non-virtual"><scope>me::Transform</scope><name>rotate</name></member>
      <member refid="classme_1_1_transform_1a367d97c5ae3f1e1e706c838df2f9da6a" prot="public" virt="non-virtual"><scope>me::Transform</scope><name>scaleF</name></member>
      <member refid="classme_1_1_component_1a7c5786c94bfaf7b6e110f9fa30feafb3" prot="public" virt="non-virtual"><scope>me::Transform</scope><name>setEntity</name></member>
      <member refid="classme_1_1_transform_1a535f79706339ccffb31ac911fc13a406" prot="public" virt="non-virtual"><scope>me::Transform</scope><name>setPosition</name></member>
      <member refid="classme_1_1_transform_1aa80922610841e1db8bfb8317297b6f83" prot="public" virt="non-virtual"><scope>me::Transform</scope><name>setRotation</name></member>
      <member refid="classme_1_1_transform_1a5d0b8159e8618392da9a1ff890c4e551" prot="public" virt="non-virtual"><scope>me::Transform</scope><name>setRotation</name></member>
      <member refid="classme_1_1_transform_1a6517411dc8c1457d1472259d3660401b" prot="public" virt="non-virtual"><scope>me::Transform</scope><name>setScale</name></member>
      <member refid="classme_1_1_transform_1a242704f2581d1654cc9562932f93aa2d" prot="public" virt="virtual"><scope>me::Transform</scope><name>start</name></member>
      <member refid="classme_1_1_transform_1af99074e8e38a48840d24ae616ecf5eff" prot="public" virt="non-virtual"><scope>me::Transform</scope><name>Transform</name></member>
      <member refid="classme_1_1_transform_1a961468fbfb4263d596d963dcee7ae015" prot="public" virt="non-virtual"><scope>me::Transform</scope><name>translate</name></member>
      <member refid="classme_1_1_transform_1ac2193262cc8056821b757d7d9c39bb2c" prot="public" virt="virtual"><scope>me::Transform</scope><name>update</name></member>
      <member refid="classme_1_1_component_1ab2a3844334f7d532196025c32e100799" prot="public" virt="virtual"><scope>me::Transform</scope><name>~Component</name></member>
      <member refid="classme_1_1_transform_1a68108709319b2cd078034d9f73156503" prot="public" virt="non-virtual"><scope>me::Transform</scope><name>~Transform</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
