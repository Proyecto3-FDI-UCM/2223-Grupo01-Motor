<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="_singleton_8h" kind="file" language="C++">
    <compoundname>Singleton.h</compoundname>
    <includes local="no">memory</includes>
    <includedby refid="_sound_manager_8h" local="yes">Src/Audio/SoundManager.h</includedby>
    <includedby refid="_components_factory_8h" local="yes">Src/EntityComponent/Components/ComponentsFactory.h</includedby>
    <includedby refid="_scene_manager_8h" local="yes">Src/EntityComponent/SceneManager.h</includedby>
    <includedby refid="_input_manager_8h" local="yes">Src/Input/InputManager.h</includedby>
    <includedby refid="_physics_manager_8h" local="yes">Src/Physics/PhysicsManager.h</includedby>
    <includedby refid="_render_manager_8h" local="yes">Src/Render/RenderManager.h</includedby>
    <includedby refid="_window_8h" local="yes">Src/Render/Window.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>Src/Utils/Singleton.h</label>
        <link refid="_singleton_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>Src/Audio/SoundManager.cpp</label>
        <link refid="_sound_manager_8cpp"/>
      </node>
      <node id="2">
        <label>Src/Audio/SoundManager.h</label>
        <link refid="_sound_manager_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Src/Audio/main.cpp</label>
        <link refid="_audio_2main_8cpp"/>
      </node>
      <node id="21">
        <label>Src/EntityComponent/Components/Animator.cpp</label>
        <link refid="_animator_8cpp"/>
      </node>
      <node id="5">
        <label>Src/EntityComponent/Components/AudioListener.cpp</label>
        <link refid="_audio_listener_8cpp"/>
      </node>
      <node id="6">
        <label>Src/EntityComponent/Components/AudioSource.cpp</label>
        <link refid="_audio_source_8cpp"/>
      </node>
      <node id="22">
        <label>Src/EntityComponent/Components/Camera.cpp</label>
        <link refid="_camera_8cpp"/>
      </node>
      <node id="9">
        <label>Src/EntityComponent/Components/ComponentsFactory.cpp</label>
        <link refid="_components_factory_8cpp"/>
      </node>
      <node id="8">
        <label>Src/EntityComponent/Components/ComponentsFactory.h</label>
        <link refid="_components_factory_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>Src/EntityComponent/Components/MeshRenderer.cpp</label>
        <link refid="_mesh_renderer_8cpp"/>
      </node>
      <node id="24">
        <label>Src/EntityComponent/Components/ParticleSystem.cpp</label>
        <link refid="_particle_system_8cpp"/>
      </node>
      <node id="18">
        <label>Src/EntityComponent/Components/RigidBody.cpp</label>
        <link refid="_rigid_body_8cpp"/>
      </node>
      <node id="15">
        <label>Src/EntityComponent/Components/UIButton.cpp</label>
        <link refid="_u_i_button_8cpp"/>
      </node>
      <node id="25">
        <label>Src/EntityComponent/Components/UIText.cpp</label>
        <link refid="_u_i_text_8cpp"/>
      </node>
      <node id="10">
        <label>Src/EntityComponent/Entity.cpp</label>
        <link refid="_entity_8cpp"/>
      </node>
      <node id="11">
        <label>Src/EntityComponent/Scene.cpp</label>
        <link refid="_scene_8cpp"/>
      </node>
      <node id="12">
        <label>Src/EntityComponent/SceneManager.h</label>
        <link refid="_scene_manager_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>Src/EntityComponent/Scenemanager.cpp</label>
        <link refid="_scenemanager_8cpp"/>
      </node>
      <node id="16">
        <label>Src/Input/InputManager.cpp</label>
        <link refid="_input_manager_8cpp"/>
      </node>
      <node id="14">
        <label>Src/Input/InputManager.h</label>
        <link refid="_input_manager_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>Src/MotorEngine/MotorEngine.cpp</label>
        <link refid="_motor_engine_8cpp"/>
      </node>
      <node id="26">
        <label>Src/Physics/DebugDrawer.cpp</label>
        <link refid="_debug_drawer_8cpp"/>
      </node>
      <node id="19">
        <label>Src/Physics/PhysicsManager.cpp</label>
        <link refid="_physics_manager_8cpp"/>
      </node>
      <node id="17">
        <label>Src/Physics/PhysicsManager.h</label>
        <link refid="_physics_manager_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>Src/Render/RenderManager.cpp</label>
        <link refid="_render_manager_8cpp"/>
      </node>
      <node id="20">
        <label>Src/Render/RenderManager.h</label>
        <link refid="_render_manager_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>Src/Render/RenderWindow.cpp</label>
        <link refid="_render_window_8cpp"/>
      </node>
      <node id="30">
        <label>Src/Render/Window.cpp</label>
        <link refid="_window_8cpp"/>
      </node>
      <node id="28">
        <label>Src/Render/Window.h</label>
        <link refid="_window_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Src/Utils/Singleton.h</label>
        <link refid="_singleton_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classme_1_1_singleton" prot="public">me::Singleton</innerclass>
    <innernamespace refid="namespaceme">me</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="_singleton_8h_1a808013e93b655996fe1936d3226fd153" prot="public" static="no">
        <name>__UTILS_SINGLETON</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Utils/Singleton.h" line="8" column="9" bodyfile="Src/Utils/Singleton.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*Clase<sp/>implementada<sp/>en<sp/>el<sp/>h<sp/>porque<sp/>al<sp/>ser<sp/>template<sp/>y<sp/>estar<sp/>en<sp/>el<sp/>primer</highlight></codeline>
<codeline lineno="2"><highlight class="comment">proyecto<sp/>que<sp/>se<sp/>compila,<sp/>al<sp/>compilarse<sp/>nadie<sp/>la<sp/>llama<sp/>y<sp/>no<sp/>genera<sp/>ninguna</highlight></codeline>
<codeline lineno="3"><highlight class="comment">instancia.<sp/>Deben<sp/>ser<sp/>los<sp/>otros<sp/>proyectos<sp/>los<sp/>que<sp/>generen<sp/>las<sp/>distintas</highlight></codeline>
<codeline lineno="4"><highlight class="comment">instancias<sp/>de<sp/>singleton.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__UTILS_SINGLETON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="_singleton_8h_1a808013e93b655996fe1936d3226fd153" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__UTILS_SINGLETON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;typeinfo&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceme" kindref="compound">me</ref><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="23" refid="classme_1_1_singleton" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classme_1_1_singleton" kindref="compound">Singleton</ref><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>only<sp/>instance<sp/>of<sp/>class<sp/>T</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;T&gt;<sp/>mInstance;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="29" refid="classme_1_1_singleton_1af5127d54d6c6904173541b404903b599" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classme_1_1_singleton_1af5127d54d6c6904173541b404903b599" kindref="member">Singleton</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32" refid="classme_1_1_singleton_1a6745ba60837f9347a75c0cfc27fadfb0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classme_1_1_singleton" kindref="compound">Singleton&lt;T&gt;</ref>&amp;<sp/><ref refid="classme_1_1_singleton_1a6745ba60837f9347a75c0cfc27fadfb0" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_singleton" kindref="compound">Singleton&lt;T&gt;</ref>&amp;<sp/>o)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33" refid="classme_1_1_singleton_1a70f85c079fd020a8655eed54e7189845" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classme_1_1_singleton_1a70f85c079fd020a8655eed54e7189845" kindref="member">Singleton</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_singleton" kindref="compound">Singleton&lt;T&gt;</ref>&amp;<sp/>o)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34" refid="classme_1_1_singleton_1a576834dfbf95c3b929511d2a588866d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_singleton_1a576834dfbf95c3b929511d2a588866d1" kindref="member">~Singleton</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...Targs&gt;</highlight></codeline>
<codeline lineno="41" refid="classme_1_1_singleton_1a919633966a5db8336cffa09f28fc2623" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="classme_1_1_singleton_1a919633966a5db8336cffa09f28fc2623" kindref="member">init</ref>(Targs<sp/>&amp;&amp;...args)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mInstance.get()<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInstance.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T(std::forward&lt;Targs&gt;(args)...));</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Singleton:<sp/>Instance<sp/>of<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(T).name()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>created.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Singleton<sp/>error:<sp/>There<sp/>already<sp/>is<sp/>an<sp/>instance<sp/>of<sp/>class<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(T).name()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mInstance.get();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="classme_1_1_singleton_1a8810aab25f6fdc043bfac52761a9a260" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="classme_1_1_singleton_1a8810aab25f6fdc043bfac52761a9a260" kindref="member">instance</ref>()<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mInstance.get()<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_singleton_1a919633966a5db8336cffa09f28fc2623" kindref="member">init</ref>();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mInstance.get();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;T&gt;<sp/>Singleton&lt;T&gt;::mInstance;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="Src/Utils/Singleton.h"/>
  </compounddef>
</doxygen>
