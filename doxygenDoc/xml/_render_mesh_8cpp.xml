<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="_render_mesh_8cpp" kind="file" language="C++">
    <compoundname>RenderMesh.cpp</compoundname>
    <includes refid="_render_mesh_8h" local="yes">RenderMesh.h</includes>
    <includes local="no">OgreSceneManager.h</includes>
    <includes local="no">OgreEntity.h</includes>
    <includes local="no">OgreSceneNode.h</includes>
    <includes local="no">OgreQuaternion.h</includes>
    <incdepgraph>
      <node id="3">
        <label>MotorEngine/MotorEngineAPI.h</label>
        <link refid="_motor_engine_a_p_i_8h"/>
      </node>
      <node id="1">
        <label>Src/Render/RenderMesh.cpp</label>
        <link refid="_render_mesh_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>RenderMesh.h</label>
        <link refid="_render_mesh_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>OgreEntity.h</label>
      </node>
      <node id="9">
        <label>OgreQuaternion.h</label>
      </node>
      <node id="6">
        <label>OgreSceneManager.h</label>
      </node>
      <node id="8">
        <label>OgreSceneNode.h</label>
      </node>
      <node id="5">
        <label>OgreVector3.h</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_render_mesh_8h" kindref="compound">RenderMesh.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;OgreSceneManager.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;OgreEntity.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;OgreSceneNode.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;OgreQuaternion.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><ref refid="classme_1_1_render_mesh_1a54a4bf99c2243033a24bd16c5f909ee0" kindref="member">me::RenderMesh::RenderMesh</ref>(Ogre::SceneNode*<sp/>node,<sp/>std::string<sp/>meshName)</highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classme_1_1_render_mesh_1a7b0503d0a84d1e528ea9c450ab48a0c1" kindref="member">mNode</ref><sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classme_1_1_render_mesh_1a8ddfbdf2193533e71721139fd2332332" kindref="member">mMeshName</ref><sp/>=<sp/>meshName;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>Ogre::SceneManager*<sp/>mSM<sp/>=<sp/><ref refid="classme_1_1_render_mesh_1a7b0503d0a84d1e528ea9c450ab48a0c1" kindref="member">mNode</ref>-&gt;getCreator();</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classme_1_1_render_mesh_1a10ec5689b8d395b7a3313731a67530e5" kindref="member">mEntity</ref><sp/>=<sp/>mSM-&gt;createEntity(<ref refid="classme_1_1_render_mesh_1a8ddfbdf2193533e71721139fd2332332" kindref="member">mMeshName</ref>);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classme_1_1_render_mesh_1a7b0503d0a84d1e528ea9c450ab48a0c1" kindref="member">mNode</ref>-&gt;attachObject(<ref refid="classme_1_1_render_mesh_1a10ec5689b8d395b7a3313731a67530e5" kindref="member">mEntity</ref>);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classme_1_1_render_mesh_1a7b0503d0a84d1e528ea9c450ab48a0c1" kindref="member">mNode</ref>-&gt;setVisible(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><ref refid="classme_1_1_render_mesh_1ae93ce9766eed4cd88f841c19ffe10595" kindref="member">me::RenderMesh::~RenderMesh</ref>()</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>Ogre::SceneManager*<sp/>mSM<sp/>=<sp/>mNode-&gt;getCreator();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>mNode-&gt;detachAllObjects();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>mSM-&gt;destroyEntity(mEntity);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>mSM-&gt;destroySceneNode(mNode);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_render_mesh_1ac51564e410f50c8a79d0e03a9ccf3796" kindref="member">me::RenderMesh::setTransform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ogre_1_1_vector" kindref="compound">Ogre::Vector3f</ref><sp/>&amp;pos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ogre_1_1_vector" kindref="compound">Ogre::Vector3f</ref><sp/>&amp;scale,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Ogre::Quaternion<sp/>&amp;rot)</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>mNode-&gt;setPosition(pos);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>mNode-&gt;setScale(scale);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>mNode-&gt;setOrientation(rot);</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_render_mesh_1a575c2ce1c6d49d58daf78a2dd6fec0e0" kindref="member">me::RenderMesh::setPosition</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ogre_1_1_vector" kindref="compound">Ogre::Vector3f</ref><sp/>&amp;pos)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>mNode-&gt;setPosition(pos);</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_render_mesh_1ab94e87bc5223c4ea558dedaa8c5992f8" kindref="member">me::RenderMesh::setScale</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ogre_1_1_vector" kindref="compound">Ogre::Vector3f</ref><sp/>&amp;scale)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>mNode-&gt;setScale(scale);</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_render_mesh_1a1abef28d58cd023be4c8e986d14e8740" kindref="member">me::RenderMesh::setRotation</ref>(Ogre::Quaternion<sp/>rot)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>mNode-&gt;setOrientation(rot);</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">Ogre::Entity*<sp/><ref refid="classme_1_1_render_mesh_1a10d529e7ca70d19e125ef595a88f68de" kindref="member">me::RenderMesh::getOgreEntity</ref>()</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mEntity;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_render_mesh_1aa3b9991173b75a29da5d71b4f7b20a79" kindref="member">me::RenderMesh::setMaterial</ref>(std::string<sp/>materialName)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>mMaterialName<sp/>=<sp/>materialName;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>mEntity-&gt;setMaterialName(materialName);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Src/Render/RenderMesh.cpp"/>
  </compounddef>
</doxygen>
