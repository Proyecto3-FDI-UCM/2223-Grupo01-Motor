<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classme_1_1_render_particle_system" kind="class" language="C++" prot="public">
    <compoundname>me::RenderParticleSystem</compoundname>
    <includes refid="_render_particle_system_8h" local="no">RenderParticleSystem.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classme_1_1_render_particle_system_1ac7327f2a7285ac9f0b7b954ff8dffb7a" prot="protected" static="no" mutable="no">
        <type>Ogre::SceneNode *</type>
        <definition>Ogre::SceneNode* me::RenderParticleSystem::mNode</definition>
        <argsstring></argsstring>
        <name>mNode</name>
        <qualifiedname>me::RenderParticleSystem::mNode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Render/RenderParticleSystem.h" line="24" column="17" bodyfile="Src/Render/RenderParticleSystem.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classme_1_1_render_particle_system_1abc88985e53ee47372ebb533257b5b6c1" prot="protected" static="no" mutable="no">
        <type>Ogre::ParticleSystem *</type>
        <definition>Ogre::ParticleSystem* me::RenderParticleSystem::mParticleSystem</definition>
        <argsstring></argsstring>
        <name>mParticleSystem</name>
        <qualifiedname>me::RenderParticleSystem::mParticleSystem</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Render/RenderParticleSystem.h" line="26" column="23" bodyfile="Src/Render/RenderParticleSystem.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classme_1_1_render_particle_system_1a4a5cf2e7cfc429e376d11409c472313d" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string me::RenderParticleSystem::mParticleName</definition>
        <argsstring></argsstring>
        <name>mParticleName</name>
        <qualifiedname>me::RenderParticleSystem::mParticleName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Render/RenderParticleSystem.h" line="28" column="13" bodyfile="Src/Render/RenderParticleSystem.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classme_1_1_render_particle_system_1a2511162d295cf2c89d0745b559663516" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string me::RenderParticleSystem::mName</definition>
        <argsstring></argsstring>
        <name>mName</name>
        <qualifiedname>me::RenderParticleSystem::mName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Render/RenderParticleSystem.h" line="30" column="13" bodyfile="Src/Render/RenderParticleSystem.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classme_1_1_render_particle_system_1a7476ff81dce12d8e290b318fe3c93ade" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>me::RenderParticleSystem::RenderParticleSystem</definition>
        <argsstring>(std::string name, Ogre::SceneNode *node, std::string particleName)</argsstring>
        <name>RenderParticleSystem</name>
        <qualifiedname>me::RenderParticleSystem::RenderParticleSystem</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>Ogre::SceneNode *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>particleName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assign information and create Ogre::ParticleSystem with the given mesh and attach to mNode <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name for particle system </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>mNode for attach Ogre::ParticleSystem created </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>meshName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of resource (type mesh) that we used for create Ogre::Entity. Must be writted in resource.cfg (.mesh inside Zip or FileSystem) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Render/RenderParticleSystem.h" line="42" column="1" bodyfile="Src/Render/RenderParticleSystem.cpp" bodystart="7" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_render_particle_system_1a52367e48754ed4851a549a86c2e736fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>me::RenderParticleSystem::~RenderParticleSystem</definition>
        <argsstring>()</argsstring>
        <name>~RenderParticleSystem</name>
        <qualifiedname>me::RenderParticleSystem::~RenderParticleSystem</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Render/RenderParticleSystem.h" line="43" column="1" bodyfile="Src/Render/RenderParticleSystem.cpp" bodystart="19" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_render_particle_system_1a2fd2e75217b300276d26dda3eb363055" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void me::RenderParticleSystem::setTransform</definition>
        <argsstring>(const Ogre::Vector3f &amp;pos, const Ogre::Vector3f &amp;scale, const Ogre::Quaternion &amp;rot)</argsstring>
        <name>setTransform</name>
        <qualifiedname>me::RenderParticleSystem::setTransform</qualifiedname>
        <param>
          <type>const <ref refid="namespace_ogre_1a8b4adeb18d1b0fcedea1b58bcbc67879" kindref="member">Ogre::Vector3f</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_ogre_1a8b4adeb18d1b0fcedea1b58bcbc67879" kindref="member">Ogre::Vector3f</ref> &amp;</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>const Ogre::Quaternion &amp;</type>
          <declname>rot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Render/RenderParticleSystem.h" line="45" column="6" bodyfile="Src/Render/RenderParticleSystem.cpp" bodystart="29" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_render_particle_system_1a2ed5c951a5539924b6b35af71cdf49df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void me::RenderParticleSystem::setPosition</definition>
        <argsstring>(const Ogre::Vector3f &amp;pos)</argsstring>
        <name>setPosition</name>
        <qualifiedname>me::RenderParticleSystem::setPosition</qualifiedname>
        <param>
          <type>const <ref refid="namespace_ogre_1a8b4adeb18d1b0fcedea1b58bcbc67879" kindref="member">Ogre::Vector3f</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Render/RenderParticleSystem.h" line="46" column="6" bodyfile="Src/Render/RenderParticleSystem.cpp" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_render_particle_system_1ad079289c01d88d9cf3dc0d33f1a16b08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void me::RenderParticleSystem::setScale</definition>
        <argsstring>(const Ogre::Vector3f &amp;scale)</argsstring>
        <name>setScale</name>
        <qualifiedname>me::RenderParticleSystem::setScale</qualifiedname>
        <param>
          <type>const <ref refid="namespace_ogre_1a8b4adeb18d1b0fcedea1b58bcbc67879" kindref="member">Ogre::Vector3f</ref> &amp;</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Render/RenderParticleSystem.h" line="47" column="6" bodyfile="Src/Render/RenderParticleSystem.cpp" bodystart="41" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_render_particle_system_1aab701145965a7af4d6575dcc6ab8909f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void me::RenderParticleSystem::setRotation</definition>
        <argsstring>(Ogre::Quaternion rot)</argsstring>
        <name>setRotation</name>
        <qualifiedname>me::RenderParticleSystem::setRotation</qualifiedname>
        <param>
          <type>Ogre::Quaternion</type>
          <declname>rot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Render/RenderParticleSystem.h" line="48" column="6" bodyfile="Src/Render/RenderParticleSystem.cpp" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_render_particle_system_1ab7829db65bb81cb788d1c29165af6f95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void me::RenderParticleSystem::setEmitting</definition>
        <argsstring>(bool emitted)</argsstring>
        <name>setEmitting</name>
        <qualifiedname>me::RenderParticleSystem::setEmitting</qualifiedname>
        <param>
          <type>bool</type>
          <declname>emitted</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Render/RenderParticleSystem.h" line="51" column="6" bodyfile="Src/Render/RenderParticleSystem.cpp" bodystart="51" bodyend="54"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Src/Render/RenderParticleSystem.h" line="18" column="1" bodyfile="Src/Render/RenderParticleSystem.h" bodystart="19" bodyend="54"/>
    <listofallmembers>
      <member refid="classme_1_1_render_particle_system_1a2511162d295cf2c89d0745b559663516" prot="protected" virt="non-virtual"><scope>me::RenderParticleSystem</scope><name>mName</name></member>
      <member refid="classme_1_1_render_particle_system_1ac7327f2a7285ac9f0b7b954ff8dffb7a" prot="protected" virt="non-virtual"><scope>me::RenderParticleSystem</scope><name>mNode</name></member>
      <member refid="classme_1_1_render_particle_system_1a4a5cf2e7cfc429e376d11409c472313d" prot="protected" virt="non-virtual"><scope>me::RenderParticleSystem</scope><name>mParticleName</name></member>
      <member refid="classme_1_1_render_particle_system_1abc88985e53ee47372ebb533257b5b6c1" prot="protected" virt="non-virtual"><scope>me::RenderParticleSystem</scope><name>mParticleSystem</name></member>
      <member refid="classme_1_1_render_particle_system_1a7476ff81dce12d8e290b318fe3c93ade" prot="public" virt="non-virtual"><scope>me::RenderParticleSystem</scope><name>RenderParticleSystem</name></member>
      <member refid="classme_1_1_render_particle_system_1ab7829db65bb81cb788d1c29165af6f95" prot="public" virt="non-virtual"><scope>me::RenderParticleSystem</scope><name>setEmitting</name></member>
      <member refid="classme_1_1_render_particle_system_1a2ed5c951a5539924b6b35af71cdf49df" prot="public" virt="non-virtual"><scope>me::RenderParticleSystem</scope><name>setPosition</name></member>
      <member refid="classme_1_1_render_particle_system_1aab701145965a7af4d6575dcc6ab8909f" prot="public" virt="non-virtual"><scope>me::RenderParticleSystem</scope><name>setRotation</name></member>
      <member refid="classme_1_1_render_particle_system_1ad079289c01d88d9cf3dc0d33f1a16b08" prot="public" virt="non-virtual"><scope>me::RenderParticleSystem</scope><name>setScale</name></member>
      <member refid="classme_1_1_render_particle_system_1a2fd2e75217b300276d26dda3eb363055" prot="public" virt="non-virtual"><scope>me::RenderParticleSystem</scope><name>setTransform</name></member>
      <member refid="classme_1_1_render_particle_system_1a52367e48754ed4851a549a86c2e736fe" prot="public" virt="non-virtual"><scope>me::RenderParticleSystem</scope><name>~RenderParticleSystem</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
