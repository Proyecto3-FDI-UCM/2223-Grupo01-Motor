<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="class_vector2" kind="class" language="C++" prot="public">
    <compoundname>Vector2</compoundname>
    <includes refid="_vector2_8h" local="no">Vector2.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_vector2_1a046bb8d17a876acc49415128dc0502f2" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Vector2::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <qualifiedname>Vector2::x</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Utils/Vector2.h" line="25" column="7" bodyfile="Src/Utils/Vector2.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_vector2_1a0e07bad05f01ed811b909a2eef97f9e2" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Vector2::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <qualifiedname>Vector2::y</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Utils/Vector2.h" line="25" column="10" bodyfile="Src/Utils/Vector2.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_vector2_1a1a2ea149b16c075583c6bc2c4b23cd10" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Vector2::lerp</definition>
        <argsstring>(float a, float b, float f)</argsstring>
        <name>lerp</name>
        <qualifiedname>Vector2::lerp</qualifiedname>
        <param>
          <type>float</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Utils/Vector2.h" line="18" column="7" bodyfile="Src/Utils/Vector2.h" bodystart="18" bodyend="21"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_vector2_1a22104d1809be26a419ef1f959e3761bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Vector2::Vector2</definition>
        <argsstring>()</argsstring>
        <name>Vector2</name>
        <qualifiedname>Vector2::Vector2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct default <ref refid="class_vector2" kindref="compound">Vector2</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Utils/Vector2.h" line="30" column="1" bodyfile="Src/Utils/Vector2.h" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_vector2_1afdb8d87b3eae80e7330d6fc0bfdb2d00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Vector2::Vector2</definition>
        <argsstring>(float a, float b)</argsstring>
        <name>Vector2</name>
        <qualifiedname>Vector2::Vector2</qualifiedname>
        <param>
          <type>float</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a new <ref refid="class_vector2" kindref="compound">Vector2</ref> with given x, y components <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_vector2" kindref="compound">Vector2</ref> first element </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_vector2" kindref="compound">Vector2</ref> second element </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Utils/Vector2.h" line="40" column="1" bodyfile="Src/Utils/Vector2.h" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_vector2_1a299d9e1cd67d3fb587f57170afab9741" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Vector2::Vector2</definition>
        <argsstring>(const Vector2 &amp;v)</argsstring>
        <name>Vector2</name>
        <qualifiedname>Vector2::Vector2</qualifiedname>
        <param>
          <type>const <ref refid="class_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a new <ref refid="class_vector2" kindref="compound">Vector2</ref> with given another <ref refid="class_vector2" kindref="compound">Vector2</ref> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>new <ref refid="class_vector2" kindref="compound">Vector2</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Utils/Vector2.h" line="49" column="1" bodyfile="Src/Utils/Vector2.h" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="class_vector2_1ad101052877f3e46af4fcf01a767e8927" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 Vector2::operator+</definition>
        <argsstring>(const Vector2 &amp;v)</argsstring>
        <name>operator+</name>
        <qualifiedname>Vector2::operator+</qualifiedname>
        <param>
          <type>const <ref refid="class_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the sum of two <ref refid="class_vector2" kindref="compound">Vector2</ref> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_vector2" kindref="compound">Vector2</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Utils/Vector2.h" line="58" column="9" bodyfile="Src/Utils/Vector2.cpp" bodystart="3" bodyend="5"/>
      </memberdef>
      <memberdef kind="function" id="class_vector2_1a76d0521c29136a9594b528132d0868a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 Vector2::operator-</definition>
        <argsstring>(const Vector2 &amp;v)</argsstring>
        <name>operator-</name>
        <qualifiedname>Vector2::operator-</qualifiedname>
        <param>
          <type>const <ref refid="class_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the difference of two <ref refid="class_vector2" kindref="compound">Vector2</ref> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_vector2" kindref="compound">Vector2</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Utils/Vector2.h" line="64" column="9" bodyfile="Src/Utils/Vector2.cpp" bodystart="7" bodyend="9"/>
      </memberdef>
      <memberdef kind="function" id="class_vector2_1a70bf7ec6ade85eb30bcba012e8ea0752" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 Vector2::operator*</definition>
        <argsstring>(const float s)</argsstring>
        <name>operator*</name>
        <qualifiedname>Vector2::operator*</qualifiedname>
        <param>
          <type>const float</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a <ref refid="class_vector2" kindref="compound">Vector2</ref> scale <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>scale factor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Utils/Vector2.h" line="70" column="9" bodyfile="Src/Utils/Vector2.cpp" bodystart="11" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="class_vector2_1a8d571a2b35954247c869e30f753a59dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 Vector2::lerp</definition>
        <argsstring>(const Vector2 a, const Vector2 b, float f)</argsstring>
        <name>lerp</name>
        <qualifiedname>Vector2::lerp</qualifiedname>
        <param>
          <type>const <ref refid="class_vector2" kindref="compound">Vector2</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_vector2" kindref="compound">Vector2</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type>float</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a new <ref refid="class_vector2" kindref="compound">Vector2</ref> interpolating between the two given <ref refid="class_vector2" kindref="compound">Vector2</ref> based on the scalar value &quot;f&quot;. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>first <ref refid="class_vector2" kindref="compound">Vector2</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>second <ref refid="class_vector2" kindref="compound">Vector2</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>interpolation factor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Utils/Vector2.h" line="78" column="16" bodyfile="Src/Utils/Vector2.h" bodystart="78" bodyend="80"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Class <ref refid="class_vector2" kindref="compound">Vector2</ref> for represent the UI </para>
    </detaileddescription>
    <location file="Src/Utils/Vector2.h" line="13" column="1" bodyfile="Src/Utils/Vector2.h" bodystart="14" bodyend="82"/>
    <listofallmembers>
      <member refid="class_vector2_1a1a2ea149b16c075583c6bc2c4b23cd10" prot="private" virt="non-virtual"><scope>Vector2</scope><name>lerp</name></member>
      <member refid="class_vector2_1a8d571a2b35954247c869e30f753a59dd" prot="public" virt="non-virtual"><scope>Vector2</scope><name>lerp</name></member>
      <member refid="class_vector2_1a70bf7ec6ade85eb30bcba012e8ea0752" prot="public" virt="non-virtual"><scope>Vector2</scope><name>operator*</name></member>
      <member refid="class_vector2_1ad101052877f3e46af4fcf01a767e8927" prot="public" virt="non-virtual"><scope>Vector2</scope><name>operator+</name></member>
      <member refid="class_vector2_1a76d0521c29136a9594b528132d0868a3" prot="public" virt="non-virtual"><scope>Vector2</scope><name>operator-</name></member>
      <member refid="class_vector2_1a22104d1809be26a419ef1f959e3761bf" prot="public" virt="non-virtual"><scope>Vector2</scope><name>Vector2</name></member>
      <member refid="class_vector2_1afdb8d87b3eae80e7330d6fc0bfdb2d00" prot="public" virt="non-virtual"><scope>Vector2</scope><name>Vector2</name></member>
      <member refid="class_vector2_1a299d9e1cd67d3fb587f57170afab9741" prot="public" virt="non-virtual"><scope>Vector2</scope><name>Vector2</name></member>
      <member refid="class_vector2_1a046bb8d17a876acc49415128dc0502f2" prot="public" virt="non-virtual"><scope>Vector2</scope><name>x</name></member>
      <member refid="class_vector2_1a0e07bad05f01ed811b909a2eef97f9e2" prot="public" virt="non-virtual"><scope>Vector2</scope><name>y</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
