<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classme_1_1_physics_manager" kind="class" language="C++" prot="public">
    <compoundname>me::PhysicsManager</compoundname>
    <basecompoundref refid="classme_1_1_singleton" prot="public" virt="non-virtual">me::Singleton&lt; PhysicsManager &gt;</basecompoundref>
    <includes refid="_physics_manager_8h" local="no">PhysicsManager.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classme_1_1_physics_manager_1ac0e7d12ac977d27fe7d42ff62012f660" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend me::PhysicsManager::Singleton&lt; PhysicsManager &gt;</definition>
        <argsstring></argsstring>
        <name>Singleton&lt; PhysicsManager &gt;</name>
        <qualifiedname>me::PhysicsManager::Singleton&lt; PhysicsManager &gt;</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Physics/PhysicsManager.h" line="43" column="1" bodyfile="Src/Physics/PhysicsManager.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classme_1_1_physics_manager_1a26f9f3c606e863f88dfbe41478e4ac6e" prot="private" static="no" mutable="no">
        <type>btDiscreteDynamicsWorld *</type>
        <definition>btDiscreteDynamicsWorld* me::PhysicsManager::mDynamicsWorld</definition>
        <argsstring></argsstring>
        <name>mDynamicsWorld</name>
        <qualifiedname>me::PhysicsManager::mDynamicsWorld</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Physics/PhysicsManager.h" line="48" column="25" bodyfile="Src/Physics/PhysicsManager.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classme_1_1_physics_manager_1aa8cccfda5719c096a6b92b515f6b3213" prot="private" static="no" mutable="no">
        <type>btDispatcher *</type>
        <definition>btDispatcher* me::PhysicsManager::mDispatcher</definition>
        <argsstring></argsstring>
        <name>mDispatcher</name>
        <qualifiedname>me::PhysicsManager::mDispatcher</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Physics/PhysicsManager.h" line="51" column="14" bodyfile="Src/Physics/PhysicsManager.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classme_1_1_physics_manager_1a28f35a45ad63ab40dd447b68c5f9ffc3" prot="private" static="no" mutable="no">
        <type>btBroadphaseInterface *</type>
        <definition>btBroadphaseInterface* me::PhysicsManager::mBroadphaseInterface</definition>
        <argsstring></argsstring>
        <name>mBroadphaseInterface</name>
        <qualifiedname>me::PhysicsManager::mBroadphaseInterface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Physics/PhysicsManager.h" line="52" column="23" bodyfile="Src/Physics/PhysicsManager.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classme_1_1_physics_manager_1a5653f1f16a14d92aa5b72bd3a176fed0" prot="private" static="no" mutable="no">
        <type>btCollisionConfiguration *</type>
        <definition>btCollisionConfiguration* me::PhysicsManager::mCollisionConfiguration</definition>
        <argsstring></argsstring>
        <name>mCollisionConfiguration</name>
        <qualifiedname>me::PhysicsManager::mCollisionConfiguration</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Physics/PhysicsManager.h" line="53" column="26" bodyfile="Src/Physics/PhysicsManager.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classme_1_1_physics_manager_1ac0629231364e099370c4bca0430607ea" prot="private" static="no" mutable="no">
        <type>btSequentialImpulseConstraintSolver *</type>
        <definition>btSequentialImpulseConstraintSolver* me::PhysicsManager::mConstraintSolver</definition>
        <argsstring></argsstring>
        <name>mConstraintSolver</name>
        <qualifiedname>me::PhysicsManager::mConstraintSolver</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Physics/PhysicsManager.h" line="54" column="37" bodyfile="Src/Physics/PhysicsManager.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classme_1_1_physics_manager_1a62ff1d5ffc87ea9ea4039f114e90696d" prot="private" static="no" mutable="no">
        <type><ref refid="classme_1_1_debug_drawer" kindref="compound">DebugDrawer</ref> *</type>
        <definition>DebugDrawer* me::PhysicsManager::mDebug</definition>
        <argsstring></argsstring>
        <name>mDebug</name>
        <qualifiedname>me::PhysicsManager::mDebug</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Physics/PhysicsManager.h" line="56" column="13" bodyfile="Src/Physics/PhysicsManager.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classme_1_1_physics_manager_1a9373ebdcfb82d9fd8936bf0adf830ac6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>me::PhysicsManager::PhysicsManager</definition>
        <argsstring>()</argsstring>
        <name>PhysicsManager</name>
        <qualifiedname>me::PhysicsManager::PhysicsManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Physics/PhysicsManager.h" line="45" column="1" bodyfile="Src/Physics/PhysicsManager.cpp" bodystart="22" bodyend="24"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classme_1_1_physics_manager_1ae258342ca61ad01676c12af162fa5de4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>me::PhysicsManager::~PhysicsManager</definition>
        <argsstring>()</argsstring>
        <name>~PhysicsManager</name>
        <qualifiedname>me::PhysicsManager::~PhysicsManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor for the <ref refid="classme_1_1_physics_manager" kindref="compound">PhysicsManager</ref> class. TO DO. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Physics/PhysicsManager.h" line="63" column="1" bodyfile="Src/Physics/PhysicsManager.cpp" bodystart="26" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_physics_manager_1a5193cc56360379350eecb952d607805d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void me::PhysicsManager::start</definition>
        <argsstring>()</argsstring>
        <name>start</name>
        <qualifiedname>me::PhysicsManager::start</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initializes a default collision configuration, a collision dispatcher, a broadphase interface, and a dynamics world. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Physics/PhysicsManager.h" line="69" column="6" bodyfile="Src/Physics/PhysicsManager.cpp" bodystart="98" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_physics_manager_1aeb52685f076c27dd71a6812d20eb8f8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void me::PhysicsManager::addRigidBody</definition>
        <argsstring>(btRigidBody *rigidBody)</argsstring>
        <name>addRigidBody</name>
        <qualifiedname>me::PhysicsManager::addRigidBody</qualifiedname>
        <param>
          <type>btRigidBody *</type>
          <declname>rigidBody</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a rigid body to the dynamics world. The rigid body will be subject to physical forces and will interact with other objects in the world.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rigidBody</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the btRigidBody to add to the dynamics world. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Physics/PhysicsManager.h" line="77" column="6" bodyfile="Src/Physics/PhysicsManager.cpp" bodystart="120" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_physics_manager_1a2c0533df797d3a73ef701771efa01a94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void me::PhysicsManager::addVehicle</definition>
        <argsstring>(btActionInterface *vehicle)</argsstring>
        <name>addVehicle</name>
        <qualifiedname>me::PhysicsManager::addVehicle</qualifiedname>
        <param>
          <type>btActionInterface *</type>
          <declname>vehicle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a vehicle to the dynamics world. The vehicle will be subject to physical forces and will interact with other objects in the world.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vehicle</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the btActionInterface that represents the vehicle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Physics/PhysicsManager.h" line="85" column="6" bodyfile="Src/Physics/PhysicsManager.cpp" bodystart="125" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_physics_manager_1a75737121808c5c7711729d9d8cd4f05e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>btCollisionShape *</type>
        <definition>btCollisionShape * me::PhysicsManager::createShape</definition>
        <argsstring>(Shapes shape, const btVector3 &amp;scale)</argsstring>
        <name>createShape</name>
        <qualifiedname>me::PhysicsManager::createShape</qualifiedname>
        <param>
          <type><ref refid="_physics_manager_8h_1a3c6c49dd4d974c67346f991bc443b14b" kindref="member">Shapes</ref></type>
          <declname>shape</declname>
        </param>
        <param>
          <type>const btVector3 &amp;</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Physics/PhysicsManager.h" line="94" column="18" bodyfile="Src/Physics/PhysicsManager.cpp" bodystart="130" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_physics_manager_1ad020f481e47299f0758d1953c9974d2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>btRigidBody *</type>
        <definition>btRigidBody * me::PhysicsManager::createRigidBody</definition>
        <argsstring>(btTransform *transform, const btVector3 &amp;scale, Shapes shape, MovementType mvType, bool isTrigger, float friction, float &amp;mass, float restitution)</argsstring>
        <name>createRigidBody</name>
        <qualifiedname>me::PhysicsManager::createRigidBody</qualifiedname>
        <param>
          <type>btTransform *</type>
          <declname>transform</declname>
        </param>
        <param>
          <type>const btVector3 &amp;</type>
          <declname>scale</declname>
        </param>
        <param>
          <type><ref refid="_physics_manager_8h_1a3c6c49dd4d974c67346f991bc443b14b" kindref="member">Shapes</ref></type>
          <declname>shape</declname>
        </param>
        <param>
          <type><ref refid="_physics_manager_8h_1a8a93b61bc797a7d1907f42796a252493" kindref="member">MovementType</ref></type>
          <declname>mvType</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isTrigger</declname>
        </param>
        <param>
          <type>float</type>
          <declname>friction</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>mass</declname>
        </param>
        <param>
          <type>float</type>
          <declname>restitution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Physics/PhysicsManager.h" line="109" column="12" bodyfile="Src/Physics/PhysicsManager.cpp" bodystart="158" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_physics_manager_1a6c899ac34fc670d38f6d3c6809eed3d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void me::PhysicsManager::update</definition>
        <argsstring>(const float &amp;dt)</argsstring>
        <name>update</name>
        <qualifiedname>me::PhysicsManager::update</qualifiedname>
        <param>
          <type>const float &amp;</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Physics/PhysicsManager.h" line="111" column="6" bodyfile="Src/Physics/PhysicsManager.cpp" bodystart="197" bodyend="205"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>me::Singleton&lt; PhysicsManager &gt;</label>
        <link refid="classme_1_1_singleton"/>
      </node>
      <node id="1">
        <label>me::PhysicsManager</label>
        <link refid="classme_1_1_physics_manager"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>me::Singleton&lt; PhysicsManager &gt;</label>
        <link refid="classme_1_1_singleton"/>
      </node>
      <node id="1">
        <label>me::PhysicsManager</label>
        <link refid="classme_1_1_physics_manager"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Src/Physics/PhysicsManager.h" line="38" column="1" bodyfile="Src/Physics/PhysicsManager.h" bodystart="39" bodyend="112"/>
    <listofallmembers>
      <member refid="classme_1_1_physics_manager_1aeb52685f076c27dd71a6812d20eb8f8e" prot="public" virt="non-virtual"><scope>me::PhysicsManager</scope><name>addRigidBody</name></member>
      <member refid="classme_1_1_physics_manager_1a2c0533df797d3a73ef701771efa01a94" prot="public" virt="non-virtual"><scope>me::PhysicsManager</scope><name>addVehicle</name></member>
      <member refid="classme_1_1_physics_manager_1ad020f481e47299f0758d1953c9974d2b" prot="public" virt="non-virtual"><scope>me::PhysicsManager</scope><name>createRigidBody</name></member>
      <member refid="classme_1_1_physics_manager_1a75737121808c5c7711729d9d8cd4f05e" prot="public" virt="non-virtual"><scope>me::PhysicsManager</scope><name>createShape</name></member>
      <member refid="classme_1_1_singleton_1a919633966a5db8336cffa09f28fc2623" prot="public" virt="non-virtual"><scope>me::PhysicsManager</scope><name>init</name></member>
      <member refid="classme_1_1_singleton_1a8810aab25f6fdc043bfac52761a9a260" prot="public" virt="non-virtual"><scope>me::PhysicsManager</scope><name>instance</name></member>
      <member refid="classme_1_1_physics_manager_1a28f35a45ad63ab40dd447b68c5f9ffc3" prot="private" virt="non-virtual"><scope>me::PhysicsManager</scope><name>mBroadphaseInterface</name></member>
      <member refid="classme_1_1_physics_manager_1a5653f1f16a14d92aa5b72bd3a176fed0" prot="private" virt="non-virtual"><scope>me::PhysicsManager</scope><name>mCollisionConfiguration</name></member>
      <member refid="classme_1_1_physics_manager_1ac0629231364e099370c4bca0430607ea" prot="private" virt="non-virtual"><scope>me::PhysicsManager</scope><name>mConstraintSolver</name></member>
      <member refid="classme_1_1_physics_manager_1a62ff1d5ffc87ea9ea4039f114e90696d" prot="private" virt="non-virtual"><scope>me::PhysicsManager</scope><name>mDebug</name></member>
      <member refid="classme_1_1_physics_manager_1aa8cccfda5719c096a6b92b515f6b3213" prot="private" virt="non-virtual"><scope>me::PhysicsManager</scope><name>mDispatcher</name></member>
      <member refid="classme_1_1_physics_manager_1a26f9f3c606e863f88dfbe41478e4ac6e" prot="private" virt="non-virtual"><scope>me::PhysicsManager</scope><name>mDynamicsWorld</name></member>
      <member refid="classme_1_1_singleton_1a6745ba60837f9347a75c0cfc27fadfb0" prot="public" virt="non-virtual"><scope>me::PhysicsManager</scope><name>operator=</name></member>
      <member refid="classme_1_1_physics_manager_1a9373ebdcfb82d9fd8936bf0adf830ac6" prot="private" virt="non-virtual"><scope>me::PhysicsManager</scope><name>PhysicsManager</name></member>
      <member refid="classme_1_1_singleton_1af5127d54d6c6904173541b404903b599" prot="protected" virt="non-virtual"><scope>me::PhysicsManager</scope><name>Singleton</name></member>
      <member refid="classme_1_1_singleton_1a70f85c079fd020a8655eed54e7189845" prot="public" virt="non-virtual"><scope>me::PhysicsManager</scope><name>Singleton</name></member>
      <member refid="classme_1_1_physics_manager_1ac0e7d12ac977d27fe7d42ff62012f660" prot="private" virt="non-virtual"><scope>me::PhysicsManager</scope><name>Singleton&lt; PhysicsManager &gt;</name></member>
      <member refid="classme_1_1_physics_manager_1a5193cc56360379350eecb952d607805d" prot="public" virt="non-virtual"><scope>me::PhysicsManager</scope><name>start</name></member>
      <member refid="classme_1_1_physics_manager_1a6c899ac34fc670d38f6d3c6809eed3d9" prot="public" virt="non-virtual"><scope>me::PhysicsManager</scope><name>update</name></member>
      <member refid="classme_1_1_physics_manager_1ae258342ca61ad01676c12af162fa5de4" prot="public" virt="non-virtual"><scope>me::PhysicsManager</scope><name>~PhysicsManager</name></member>
      <member refid="classme_1_1_singleton_1a576834dfbf95c3b929511d2a588866d1" prot="public" virt="virtual"><scope>me::PhysicsManager</scope><name>~Singleton</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
