<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="_render_manager_8h" kind="file" language="C++">
    <compoundname>RenderManager.h</compoundname>
    <includes refid="_motor_engine_a_p_i_8h" local="yes">MotorEngine/MotorEngineAPI.h</includes>
    <includes refid="_singleton_8h" local="yes">Utils/Singleton.h</includes>
    <includes local="no">unordered_map</includes>
    <includes local="no">string</includes>
    <includes local="no">OgreColourValue.h</includes>
    <includedby refid="_animator_8cpp" local="yes">Src/EntityComponent/Components/Animator.cpp</includedby>
    <includedby refid="_camera_8cpp" local="yes">Src/EntityComponent/Components/Camera.cpp</includedby>
    <includedby refid="_mesh_renderer_8cpp" local="yes">Src/EntityComponent/Components/MeshRenderer.cpp</includedby>
    <includedby refid="_particle_system_8cpp" local="yes">Src/EntityComponent/Components/ParticleSystem.cpp</includedby>
    <includedby refid="_u_i_text_8cpp" local="yes">Src/EntityComponent/Components/UIText.cpp</includedby>
    <includedby refid="_motor_engine_8cpp" local="yes">Src/MotorEngine/MotorEngine.cpp</includedby>
    <includedby refid="_debug_drawer_8cpp" local="yes">Src/Physics/DebugDrawer.cpp</includedby>
    <includedby refid="_physics_manager_8cpp" local="yes">Src/Physics/PhysicsManager.cpp</includedby>
    <includedby refid="_render_manager_8cpp" local="yes">Src/Render/RenderManager.cpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>MotorEngine/MotorEngineAPI.h</label>
        <link refid="_motor_engine_a_p_i_8h"/>
      </node>
      <node id="1">
        <label>Src/Render/RenderManager.h</label>
        <link refid="_render_manager_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Utils/Singleton.h</label>
        <link refid="_singleton_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>OgreColourValue.h</label>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="5">
        <label>unordered_map</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>Src/EntityComponent/Components/Animator.cpp</label>
        <link refid="_animator_8cpp"/>
      </node>
      <node id="3">
        <label>Src/EntityComponent/Components/Camera.cpp</label>
        <link refid="_camera_8cpp"/>
      </node>
      <node id="4">
        <label>Src/EntityComponent/Components/MeshRenderer.cpp</label>
        <link refid="_mesh_renderer_8cpp"/>
      </node>
      <node id="5">
        <label>Src/EntityComponent/Components/ParticleSystem.cpp</label>
        <link refid="_particle_system_8cpp"/>
      </node>
      <node id="6">
        <label>Src/EntityComponent/Components/UIText.cpp</label>
        <link refid="_u_i_text_8cpp"/>
      </node>
      <node id="7">
        <label>Src/MotorEngine/MotorEngine.cpp</label>
        <link refid="_motor_engine_8cpp"/>
      </node>
      <node id="8">
        <label>Src/Physics/DebugDrawer.cpp</label>
        <link refid="_debug_drawer_8cpp"/>
      </node>
      <node id="9">
        <label>Src/Physics/PhysicsManager.cpp</label>
        <link refid="_physics_manager_8cpp"/>
      </node>
      <node id="10">
        <label>Src/Render/RenderManager.cpp</label>
        <link refid="_render_manager_8cpp"/>
      </node>
      <node id="1">
        <label>Src/Render/RenderManager.h</label>
        <link refid="_render_manager_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classme_1_1_render_manager" prot="public">me::RenderManager</innerclass>
    <innernamespace refid="namespace_ogre">Ogre</innernamespace>
    <innernamespace refid="namespace_ogre_1_1_r_t_shader">Ogre::RTShader</innernamespace>
    <innernamespace refid="namespaceme">me</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="_render_manager_8h_1ae2fdd8f4b732bcc6815ad5353a75eb31" prot="public" static="no">
        <name>__RENDER_MANAGER</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Render/RenderManager.h" line="3" column="9" bodyfile="Src/Render/RenderManager.h" bodystart="3" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__RENDER_MANAGER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3" refid="_render_manager_8h_1ae2fdd8f4b732bcc6815ad5353a75eb31" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__RENDER_MANAGER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_motor_engine_a_p_i_8h" kindref="compound">MotorEngine/MotorEngineAPI.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_singleton_8h" kindref="compound">Utils/Singleton.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;OgreColourValue.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_ogre" kindref="compound">Ogre</ref><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Root;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">RenderWindow;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FileSystemLayer;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SceneManager;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SceneNode;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Quaternion;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ColourValue;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">AnimationState;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Entity;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dism,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Vector;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Vector&lt;3,<sp/>float&gt;<sp/><ref refid="namespace_ogre_1a8b4adeb18d1b0fcedea1b58bcbc67879" kindref="member">Vector3f</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="namespace_ogre_1_1_r_t_shader" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">RTShader<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ShaderGenerator;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TextAreaOverlayElement;</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceme" kindref="compound">me</ref><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">RenderWindow;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">RenderCamera;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">RenderMesh;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">RenderParticleSystem;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SGTechniqueResolverListener;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">OverlayManager;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Vector3;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Vector4;</highlight></codeline>
<codeline lineno="47" refid="classme_1_1_render_manager" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="_motor_engine_a_p_i_8h_1ae7d210fc6a9598f82960577024307219" kindref="member">__MOTORENGINE_API</ref><sp/><ref refid="classme_1_1_render_manager" kindref="compound">RenderManager</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_singleton" kindref="compound">Singleton</ref>&lt;RenderManager&gt;<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_singleton" kindref="compound">Singleton&lt;RenderManager&gt;</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classme_1_1_render_manager" kindref="compound">RenderManager</ref>();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Root<sp/>de<sp/>Ogre</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classme_1_1_render_manager_1a576a756c04044763622b72c4b7e6e408" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ogre::Root*<sp/><ref refid="classme_1_1_render_manager_1a576a756c04044763622b72c4b7e6e408" kindref="member">mRoot</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//SceneManager<sp/>de<sp/>Ogre</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="classme_1_1_render_manager_1a3117d5e10383c6b0404554b3e47667d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ogre::SceneManager*<sp/>mSM<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TEMPORAL<sp/>VALUE<sp/>FOR<sp/>ANIMATION<sp/>HITO1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classme_1_1_render_manager_1a29da0fdf6dcdbb47720d300688a43ecf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ogre::AnimationState*<sp/><ref refid="classme_1_1_render_manager_1a29da0fdf6dcdbb47720d300688a43ecf" kindref="member">ogreAnimState</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="classme_1_1_render_manager_1a317bc83673486fbea07f73c5c1204ddc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classme_1_1_render_manager_1a317bc83673486fbea07f73c5c1204ddc" kindref="member">mResourceCfgPath</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="classme_1_1_render_manager_1a7d869efc48f5f6c524ff99abb74a460b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classme_1_1_render_manager_1a7d869efc48f5f6c524ff99abb74a460b" kindref="member">mPluginCfgPath</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="classme_1_1_render_manager_1ab2a905f7d6c2aad56c8069f983df346c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OverlayManager*<sp/><ref refid="classme_1_1_render_manager_1ab2a905f7d6c2aad56c8069f983df346c" kindref="member">mOverlayManager</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="classme_1_1_render_manager_1ada59f65deb076e29c41816b7e28a1ebb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classme_1_1_render_manager_1ada59f65deb076e29c41816b7e28a1ebb" kindref="member">mOgreCfgPath</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ogre<sp/>fileSystem</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="classme_1_1_render_manager_1ad8430f766674f86c92404dfc32fc19da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ogre::FileSystemLayer*<sp/><ref refid="classme_1_1_render_manager_1ad8430f766674f86c92404dfc32fc19da" kindref="member">mFSLayer</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ogre<sp/>ShaderGenerator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="classme_1_1_render_manager_1a860b0a5af9a7f30d2c38fb5e09c7011a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ogre::RTShader::ShaderGenerator*<sp/><ref refid="classme_1_1_render_manager_1a860b0a5af9a7f30d2c38fb5e09c7011a" kindref="member">mShaderGenerator</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ogre<sp/>Material<sp/>Manager<sp/>Listener</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="classme_1_1_render_manager_1a23ad00e18700c36aac44b597525af289" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classme_1_1_s_g_technique_resolver_listener" kindref="compound">SGTechniqueResolverListener</ref>*<sp/><ref refid="classme_1_1_render_manager_1a23ad00e18700c36aac44b597525af289" kindref="member">mMaterialMgrListener</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Path<sp/>pointing<sp/>to<sp/>&quot;/Main/x64/debug&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="classme_1_1_render_manager_1aac24973efc5fb20e2a3f4b6d484dea82" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classme_1_1_render_manager_1aac24973efc5fb20e2a3f4b6d484dea82" kindref="member">mSolutionPath</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Reference<sp/>to<sp/>RenderWindow<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="classme_1_1_render_manager_1a87ae76e5b7a96184679e7973bba7ef75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classme_1_1_render_window" kindref="compound">RenderWindow</ref>*<sp/><ref refid="classme_1_1_render_manager_1a87ae76e5b7a96184679e7973bba7ef75" kindref="member">mOgreWindow</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Store<sp/>camera<sp/>name<sp/>to<sp/>ogreCamera</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="classme_1_1_render_manager_1ab9321ec98f6b4b3d3e8bff1c0a44e6e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unordered_map&lt;std::string,<sp/>RenderCamera*&gt;<sp/><ref refid="classme_1_1_render_manager_1ab9321ec98f6b4b3d3e8bff1c0a44e6e3" kindref="member">mCameras</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Pairs<sp/>each<sp/>cameras<sp/>with<sp/>its<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Store<sp/>mesh<sp/>name<sp/>to<sp/>ogreMesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="classme_1_1_render_manager_1a67cc796cabfa82831eb2e85fd92a1f94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unordered_map&lt;std::string,<sp/>RenderMesh*&gt;<sp/><ref refid="classme_1_1_render_manager_1a67cc796cabfa82831eb2e85fd92a1f94" kindref="member">mMeshes</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Pairs<sp/>each<sp/>mesh<sp/>with<sp/>its<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Store<sp/>mesh<sp/>name<sp/>to<sp/>ogreParticleSystem</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="classme_1_1_render_manager_1a6dbe72bad91d0c42c98c3ad3e0098369" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unordered_map&lt;std::string,<sp/>RenderParticleSystem*&gt;<sp/><ref refid="classme_1_1_render_manager_1a6dbe72bad91d0c42c98c3ad3e0098369" kindref="member">mParticles</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Pairs<sp/>each<sp/>mesh<sp/>with<sp/>its<sp/>name</highlight></codeline>
<codeline lineno="118"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initRoot();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initWindow();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Find<sp/>mResourcePath<sp/>and<sp/>add<sp/>all<sp/>written<sp/>resources<sp/>to<sp/>Ogre::ResourceGroupManager</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>locateResources();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>loadResources();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>initialiseRTShaderSystem();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classme_1_1_render_camera" kindref="compound">RenderCamera</ref>*<sp/>getCamera(std::string<sp/>name);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classme_1_1_render_mesh" kindref="compound">RenderMesh</ref>*<sp/>getMesh(std::string<sp/>name);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classme_1_1_render_particle_system" kindref="compound">RenderParticleSystem</ref>*<sp/>getParticle(std::string<sp/>name);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="159" refid="classme_1_1_render_manager_1a9d9d473840134f9d316ed90af0b503d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classme_1_1_render_manager" kindref="compound">RenderManager</ref>&amp;<ref refid="classme_1_1_render_manager_1a9d9d473840134f9d316ed90af0b503d9" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_render_manager" kindref="compound">RenderManager</ref>&amp;o)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160" refid="classme_1_1_render_manager_1a7fc7bb82c0ea308eaf15bac7420abf1d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classme_1_1_render_manager_1a7fc7bb82c0ea308eaf15bac7420abf1d" kindref="member">RenderManager</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_render_manager" kindref="compound">RenderManager</ref>&amp;o)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classme_1_1_render_manager" kindref="compound">~RenderManager</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>createCamera(std::string<sp/>name,<sp/>std::string<sp/>parentName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nearDist,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>farDist,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>autoRadio,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>zOrder,<sp/>Ogre::ColourValue<sp/>color<sp/>=<sp/>Ogre::ColourValue(0,<sp/>0,<sp/>0,<sp/>1));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//bool<sp/>createCamera(std::string<sp/>name,<sp/>int<sp/>nearDist,<sp/>int<sp/>farDist,<sp/>bool<sp/>autoRadio,<sp/>int<sp/>zOrder,<sp/>Ogre::ColourValue<sp/>color);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>createCamera(std::string<sp/>name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nearDist,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>farDist,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>autoRadio,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>zOrder,<sp/>Ogre::ColourValue<sp/>color<sp/>=<sp/>Ogre::ColourValue(0,<sp/>0,<sp/>0,<sp/>1));</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setCameraInfo(std::string<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ogre_1_1_vector" kindref="compound">Ogre::Vector3f</ref><sp/>&amp;pos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ogre_1_1_vector" kindref="compound">Ogre::Vector3f</ref><sp/>&amp;look);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setViewportDimension(std::string<sp/>name,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>left,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>top,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>height);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//destroy<sp/>OgreCamera<sp/>created<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>destroyCamera(std::string<sp/>name);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>createNewLight(std::string<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ogre_1_1_vector" kindref="compound">Ogre::Vector3f</ref><sp/>&amp;pos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ogre_1_1_vector" kindref="compound">Ogre::Vector3f</ref><sp/>&amp;dir);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>createMesh(std::string<sp/>name,<sp/>std::string<sp/>nameMesh);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setMeshTransform(std::string<sp/>name,<sp/><ref refid="classme_1_1_vector3" kindref="compound">Vector3</ref><sp/>pos,<sp/><ref refid="classme_1_1_vector3" kindref="compound">Vector3</ref><sp/>scale);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setMeshTransform(std::string<sp/>name,<sp/><ref refid="classme_1_1_vector3" kindref="compound">Vector3</ref><sp/>pos,<sp/><ref refid="classme_1_1_vector3" kindref="compound">Vector3</ref><sp/>scale,<sp/><ref refid="classme_1_1_vector4" kindref="compound">Vector4</ref><sp/>rot);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>position<sp/>info<sp/>to<sp/>the<sp/>mesh<sp/>with<sp/>this<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setMeshPosition(std::string<sp/>name,<sp/><ref refid="classme_1_1_vector3" kindref="compound">Vector3</ref><sp/>pos);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>scale<sp/>info<sp/>to<sp/>the<sp/>mesh<sp/>with<sp/>this<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setMeshScale(std::string<sp/>name,<sp/><ref refid="classme_1_1_vector3" kindref="compound">Vector3</ref><sp/>scale);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>rotation<sp/>info<sp/>to<sp/>the<sp/>mesh<sp/>with<sp/>this<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setMeshRotation(std::string<sp/>name,<sp/><ref refid="classme_1_1_vector4" kindref="compound">Vector4</ref><sp/>rot);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>material<sp/>to<sp/>the<sp/>mesh<sp/>with<sp/>this<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setMeshMaterial(std::string<sp/>name,<sp/>std::string<sp/>nameMaterial);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//destroy<sp/>OgreMesh<sp/>created<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>destroyMesh(std::string<sp/>name);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>createParticle(std::string<sp/>name,<sp/>std::string<sp/>nameMesh);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setParticleTransform(std::string<sp/>name,<sp/><ref refid="classme_1_1_vector3" kindref="compound">Vector3</ref><sp/>pos,<sp/><ref refid="classme_1_1_vector3" kindref="compound">Vector3</ref><sp/>scale);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setParticleTransform(std::string<sp/>name,<sp/><ref refid="classme_1_1_vector3" kindref="compound">Vector3</ref><sp/>pos,<sp/><ref refid="classme_1_1_vector3" kindref="compound">Vector3</ref><sp/>scale,<sp/><ref refid="classme_1_1_vector4" kindref="compound">Vector4</ref><sp/>rot);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>position<sp/>info<sp/>to<sp/>the<sp/>particle<sp/>with<sp/>this<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setParticlePosition(std::string<sp/>name,<sp/><ref refid="classme_1_1_vector3" kindref="compound">Vector3</ref><sp/>pos);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>scale<sp/>info<sp/>to<sp/>the<sp/>particle<sp/>with<sp/>this<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setParticleScale(std::string<sp/>name,<sp/><ref refid="classme_1_1_vector3" kindref="compound">Vector3</ref><sp/>scale);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>rotation<sp/>info<sp/>to<sp/>the<sp/>particle<sp/>with<sp/>this<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setParticleRotation(std::string<sp/>name,<sp/><ref refid="classme_1_1_vector4" kindref="compound">Vector4</ref><sp/>rot);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>emitting<sp/>state<sp/>to<sp/>the<sp/>particle<sp/>with<sp/>this<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setParticleEmitting(std::string<sp/>name,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>emitted);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ogre::SceneNode*<sp/>createNode(std::string<sp/>name);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ogre::SceneNode*<sp/>createChildNode(std::string<sp/>name,<sp/>std::string<sp/>parent);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classme_1_1_render_window" kindref="compound">RenderWindow</ref>*<sp/>getOgreWindow();</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ogre::SceneNode*<sp/>getRootSceneNode();</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>scene1();</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>render();</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ogre::Entity*<sp/>getOgreEntity(std::string<sp/>name);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Text<sp/>UI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ogre::TextAreaOverlayElement*<sp/>createOverlayElement();</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Getter<sp/>for<sp/>scene<sp/>manager</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ogre::SceneManager*<sp/>getSceneManager();</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="337" refid="namespaceme_1af8da8de4d9ebcdaa653b23af353b5edc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_render_manager" kindref="compound">RenderManager</ref>&amp;<sp/><ref refid="namespaceme_1af8da8de4d9ebcdaa653b23af353b5edc" kindref="member">renderManager</ref>()<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="classme_1_1_singleton_1a8810aab25f6fdc043bfac52761a9a260" kindref="member">RenderManager::instance</ref>();</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="Src/Render/RenderManager.h"/>
  </compounddef>
</doxygen>
