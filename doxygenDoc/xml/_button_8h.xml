<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="_button_8h" kind="file" language="C++">
    <compoundname>Button.h</compoundname>
    <includes refid="_motor_engine_a_p_i_8h" local="yes">MotorEngine/MotorEngineAPI.h</includes>
    <includes local="no">string</includes>
    <includes local="no">unordered_map</includes>
    <includedby refid="_input_manager_8h" local="yes">Src/Input/InputManager.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>Src/Input/Button.h</label>
        <link refid="_button_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>MotorEngine/MotorEngineAPI.h</label>
        <link refid="_motor_engine_a_p_i_8h"/>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="4">
        <label>unordered_map</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>Src/Audio/main.cpp</label>
        <link refid="_audio_2main_8cpp"/>
      </node>
      <node id="4">
        <label>Src/EntityComponent/Components/UIButton.cpp</label>
        <link refid="_u_i_button_8cpp"/>
      </node>
      <node id="1">
        <label>Src/Input/Button.h</label>
        <link refid="_button_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Src/Input/InputManager.cpp</label>
        <link refid="_input_manager_8cpp"/>
      </node>
      <node id="2">
        <label>Src/Input/InputManager.h</label>
        <link refid="_input_manager_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>Src/MotorEngine/MotorEngine.cpp</label>
        <link refid="_motor_engine_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structme_1_1_button" prot="public">me::Button</innerclass>
    <innerclass refid="structme_1_1_input" prot="public">me::Input</innerclass>
    <innerclass refid="structme_1_1_input_hasher" prot="public">me::InputHasher</innerclass>
    <innerclass refid="structme_1_1_on_button_pressed_info" prot="public">me::OnButtonPressedInfo</innerclass>
    <innernamespace refid="namespaceme">me</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="_button_8h_1aab3aa0b2d6b5a5f872c3fe983f208d5a" prot="public" static="no">
        <name>__INPUT_BUTTON</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Input/Button.h" line="3" column="9" bodyfile="Src/Input/Button.h" bodystart="3" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_button_8h_1a33fcc6aa445cb781bfca881e39e5333e" prot="public" static="no">
        <type>union <ref refid="_button_8h_1a33fcc6aa445cb781bfca881e39e5333e" kindref="member">SDL_Event</ref></type>
        <definition>typedef union SDL_Event SDL_Event</definition>
        <argsstring></argsstring>
        <name>SDL_Event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Input/Button.h" line="9" column="24" bodyfile="Src/Input/Button.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_button_8h_1aeb0e500783d5ab2d59cb0509da33af0c" prot="public" static="no">
        <type>int(__cdecl *</type>
        <definition>typedef int(__cdecl * SDL_EventFilter) (void *userdata, SDL_Event *event)</definition>
        <argsstring>)(void *userdata, SDL_Event *event)</argsstring>
        <name>SDL_EventFilter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Input/Button.h" line="10" column="9" bodyfile="Src/Input/Button.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__INPUT_BUTTON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3" refid="_button_8h_1aab3aa0b2d6b5a5f872c3fe983f208d5a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__INPUT_BUTTON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_motor_engine_a_p_i_8h" kindref="compound">MotorEngine/MotorEngineAPI.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="_button_8h_1a33fcc6aa445cb781bfca881e39e5333e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="_button_8h_1a33fcc6aa445cb781bfca881e39e5333e" kindref="member">SDL_Event</ref><sp/><ref refid="_button_8h_1a33fcc6aa445cb781bfca881e39e5333e" kindref="member">SDL_Event</ref>;</highlight></codeline>
<codeline lineno="10" refid="_button_8h_1aeb0e500783d5ab2d59cb0509da33af0c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(__cdecl*<sp/><ref refid="_button_8h_1aeb0e500783d5ab2d59cb0509da33af0c" kindref="member">SDL_EventFilter</ref>)<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>userdata,<sp/><ref refid="_button_8h_1a33fcc6aa445cb781bfca881e39e5333e" kindref="member">SDL_Event</ref>*<sp/>event);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceme" kindref="compound">me</ref><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>InputType<sp/>:<sp/>int;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="structme_1_1_button" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="_motor_engine_a_p_i_8h_1ae7d210fc6a9598f82960577024307219" kindref="member">__MOTORENGINE_API</ref><sp/><ref refid="structme_1_1_button" kindref="compound">Button</ref><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="structme_1_1_button_1ad58d17e945a82434bb904ee99b64143c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structme_1_1_button_1ad58d17e945a82434bb904ee99b64143c" kindref="member">pressed</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Whose<sp/>player<sp/>this<sp/>button<sp/>is,<sp/>used<sp/>in<sp/>case<sp/>its<sp/>a<sp/>gamepad<sp/>button<sp/>press</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1<sp/>will<sp/>be<sp/>considered<sp/>as<sp/>a<sp/>playerless<sp/>input.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="structme_1_1_button_1aae750ddc36e499fbbcc091ee7272d14d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structme_1_1_button_1aae750ddc36e499fbbcc091ee7272d14d" kindref="member">player</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Represents<sp/>a<sp/>physical<sp/>button<sp/>or<sp/>key<sp/>that<sp/>can<sp/>trigger<sp/>a<sp/>virtual<sp/>button.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="structme_1_1_input" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="_motor_engine_a_p_i_8h_1ae7d210fc6a9598f82960577024307219" kindref="member">__MOTORENGINE_API</ref><sp/><ref refid="structme_1_1_input" kindref="compound">Input</ref><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INPUTTYPE_KEYBOARD<sp/>for<sp/>keyboard<sp/>key<sp/>presses</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INPUTTYPE_MOUSE<sp/>for<sp/>mouse<sp/>clicks</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INPUTTYPE_GAMEPAD<sp/>for<sp/>controller<sp/>presses</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INPUTTYPE_NULL<sp/>for<sp/>invalid<sp/>input</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="structme_1_1_input_1ad80a18dd05ad864a6da82e70dea1af1a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InputType<sp/><ref refid="structme_1_1_input_1ad80a18dd05ad864a6da82e70dea1af1a" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Which<sp/>key,<sp/>mouse<sp/>button,<sp/>or<sp/>controller<sp/>button<sp/>has<sp/>been<sp/>pressed.</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Represents<sp/>a<sp/>value<sp/>of<sp/>KeyboardCode,<sp/>MouseClickCode,<sp/>MouseWheelCode,</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GamepadButtonCode<sp/>or<sp/>GamepadAxisCode<sp/>depending<sp/>on<sp/>the<sp/>type<sp/>of<sp/>the<sp/>event*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="structme_1_1_input_1abb8d8dd9c37d1bea216affb4c9b8aa5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structme_1_1_input_1abb8d8dd9c37d1bea216affb4c9b8aa5a" kindref="member">which</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*In<sp/>case<sp/>it<sp/>is<sp/>a<sp/>gamepad<sp/>axis<sp/>motion,<sp/>or<sp/>a<sp/>mouse<sp/>motion,<sp/>the<sp/>value<sp/>will<sp/>be<sp/>stored<sp/>here*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="structme_1_1_input_1acd194ff45efeb5ed38a7f6cc23f31df3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structme_1_1_input_1acd194ff45efeb5ed38a7f6cc23f31df3" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="structme_1_1_input_1a1d02605a516a0dfa3cd680aa24733d31" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structme_1_1_input_1a1d02605a516a0dfa3cd680aa24733d31" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structme_1_1_input" kindref="compound">Input</ref>&amp;<sp/>i)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="48"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type<sp/>==<sp/>i.<ref refid="structme_1_1_input_1ad80a18dd05ad864a6da82e70dea1af1a" kindref="member">type</ref><sp/>&amp;&amp;<sp/>which<sp/>==<sp/>i.<ref refid="structme_1_1_input_1abb8d8dd9c37d1bea216affb4c9b8aa5a" kindref="member">which</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Provides<sp/>hash<sp/>suppport<sp/>for<sp/>using<sp/>struct<sp/>Input<sp/>as<sp/>a<sp/>key<sp/>in<sp/>std::unordered_map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="structme_1_1_input_hasher" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="_motor_engine_a_p_i_8h_1ae7d210fc6a9598f82960577024307219" kindref="member">__MOTORENGINE_API</ref><sp/><ref refid="structme_1_1_input_hasher" kindref="compound">InputHasher</ref><sp/>{</highlight></codeline>
<codeline lineno="55" refid="structme_1_1_input_hasher_1a73c49166daa33d72cebb98c59c4bcbc3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structme_1_1_input_hasher_1a73c49166daa33d72cebb98c59c4bcbc3" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structme_1_1_input" kindref="compound">Input</ref>&amp;<sp/>t)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::hash&lt;int&gt;()(t.<ref refid="structme_1_1_input_1abb8d8dd9c37d1bea216affb4c9b8aa5a" kindref="member">which</ref>)<sp/>^<sp/>std::hash&lt;int&gt;()(t.<ref refid="structme_1_1_input_1ad80a18dd05ad864a6da82e70dea1af1a" kindref="member">type</ref>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/><sp/>Stores<sp/>data<sp/>for<sp/>virtual<sp/>buttons&apos;<sp/>callbacks.</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="structme_1_1_on_button_pressed_info" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="_motor_engine_a_p_i_8h_1ae7d210fc6a9598f82960577024307219" kindref="member">__MOTORENGINE_API</ref><sp/><ref refid="structme_1_1_on_button_pressed_info" kindref="compound">OnButtonPressedInfo</ref><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Simple<sp/>callback<sp/>provided<sp/>by<sp/>the<sp/>user.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="structme_1_1_on_button_pressed_info_1abfecc66cb9912c7c05f55506ae95c53d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int(*callback)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*);<sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Additional<sp/>userdata<sp/>given<sp/>to<sp/>callback<sp/>as<sp/>a<sp/>parameter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="structme_1_1_on_button_pressed_info_1a7f08adf20c54925200f25cdd51ac15d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="structme_1_1_on_button_pressed_info_1a7f08adf20c54925200f25cdd51ac15d7" kindref="member">additionalData</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Filtered<sp/>callback<sp/>that<sp/>calls<sp/>callback<sp/>if<sp/>the<sp/>event<sp/>source<sp/>matches<sp/>any<sp/>of<sp/>the<sp/>virtual<sp/>button&apos;s<sp/>bindings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="structme_1_1_on_button_pressed_info_1a8b77a2514ed3f32f28e6c2bc7638856c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_button_8h_1aeb0e500783d5ab2d59cb0509da33af0c" kindref="member">SDL_EventFilter</ref><sp/><ref refid="structme_1_1_on_button_pressed_info_1a8b77a2514ed3f32f28e6c2bc7638856c" kindref="member">filter</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Reference<sp/>to<sp/>InputManager&apos;s<sp/>mButtonBindings<sp/>multimap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="structme_1_1_on_button_pressed_info_1a763217dc1bcd45569a6c7ebe08106cf1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unordered_multimap&lt;Input,<sp/>std::string,<sp/>InputHasher&gt;*<sp/><ref refid="structme_1_1_on_button_pressed_info_1a763217dc1bcd45569a6c7ebe08106cf1" kindref="member">buttonBindings</ref>;<sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Name<sp/>of<sp/>the<sp/>button<sp/>this<sp/>callback<sp/>belongs<sp/>to.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="structme_1_1_on_button_pressed_info_1a49ee0adbdae15793f2f29ce77fd5a706" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structme_1_1_on_button_pressed_info_1a49ee0adbdae15793f2f29ce77fd5a706" kindref="member">buttonName</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Whose<sp/>player<sp/>this<sp/>button<sp/>is,<sp/>used<sp/>in<sp/>case<sp/>its<sp/>a<sp/>gamepad<sp/>button<sp/>press.</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>first<sp/>player<sp/>is<sp/>0.</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1<sp/>will<sp/>be<sp/>considered<sp/>as<sp/>a<sp/>playerless<sp/>input.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="structme_1_1_on_button_pressed_info_1ab6d8a7a6dbd3afc4ebfe924588c83a77" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structme_1_1_on_button_pressed_info_1ab6d8a7a6dbd3afc4ebfe924588c83a77" kindref="member">player</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="Src/Input/Button.h"/>
  </compounddef>
</doxygen>
