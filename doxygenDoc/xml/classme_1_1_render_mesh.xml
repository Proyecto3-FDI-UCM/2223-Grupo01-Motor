<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classme_1_1_render_mesh" kind="class" language="C++" prot="public">
    <compoundname>me::RenderMesh</compoundname>
    <includes refid="_render_mesh_8h" local="no">RenderMesh.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classme_1_1_render_mesh_1a7b0503d0a84d1e528ea9c450ab48a0c1" prot="protected" static="no" mutable="no">
        <type>Ogre::SceneNode *</type>
        <definition>Ogre::SceneNode* me::RenderMesh::mNode</definition>
        <argsstring></argsstring>
        <name>mNode</name>
        <qualifiedname>me::RenderMesh::mNode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Render/RenderMesh.h" line="23" column="17" bodyfile="Src/Render/RenderMesh.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classme_1_1_render_mesh_1a10ec5689b8d395b7a3313731a67530e5" prot="protected" static="no" mutable="no">
        <type>Ogre::Entity *</type>
        <definition>Ogre::Entity* me::RenderMesh::mEntity</definition>
        <argsstring></argsstring>
        <name>mEntity</name>
        <qualifiedname>me::RenderMesh::mEntity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Render/RenderMesh.h" line="25" column="14" bodyfile="Src/Render/RenderMesh.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classme_1_1_render_mesh_1a8ddfbdf2193533e71721139fd2332332" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string me::RenderMesh::mMeshName</definition>
        <argsstring></argsstring>
        <name>mMeshName</name>
        <qualifiedname>me::RenderMesh::mMeshName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Render/RenderMesh.h" line="27" column="13" bodyfile="Src/Render/RenderMesh.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classme_1_1_render_mesh_1ab3dc00d2951b2f5ee467f87b2810d460" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string me::RenderMesh::mMaterialName</definition>
        <argsstring></argsstring>
        <name>mMaterialName</name>
        <qualifiedname>me::RenderMesh::mMaterialName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Render/RenderMesh.h" line="28" column="13" bodyfile="Src/Render/RenderMesh.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classme_1_1_render_mesh_1a54a4bf99c2243033a24bd16c5f909ee0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>me::RenderMesh::RenderMesh</definition>
        <argsstring>(Ogre::SceneNode *node, std::string meshName)</argsstring>
        <name>RenderMesh</name>
        <qualifiedname>me::RenderMesh::RenderMesh</qualifiedname>
        <param>
          <type>Ogre::SceneNode *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>meshName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assign information and create Ogre::Entity with the given mesh and attach to mNode <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>mNode for attach Ogre::Entity created </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>meshName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of resource (type mesh) that we used for create Ogre::Entity. Must be writted in resource.cfg (.mesh inside Zip or FileSystem) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Render/RenderMesh.h" line="39" column="1" bodyfile="Src/Render/RenderMesh.cpp" bodystart="7" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_render_mesh_1ae93ce9766eed4cd88f841c19ffe10595" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>me::RenderMesh::~RenderMesh</definition>
        <argsstring>()</argsstring>
        <name>~RenderMesh</name>
        <qualifiedname>me::RenderMesh::~RenderMesh</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Render/RenderMesh.h" line="40" column="1" bodyfile="Src/Render/RenderMesh.cpp" bodystart="18" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_render_mesh_1ac51564e410f50c8a79d0e03a9ccf3796" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void me::RenderMesh::setTransform</definition>
        <argsstring>(const Ogre::Vector3f &amp;pos, const Ogre::Vector3f &amp;scale, const Ogre::Quaternion &amp;rot)</argsstring>
        <name>setTransform</name>
        <qualifiedname>me::RenderMesh::setTransform</qualifiedname>
        <param>
          <type>const <ref refid="namespace_ogre_1a8b4adeb18d1b0fcedea1b58bcbc67879" kindref="member">Ogre::Vector3f</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_ogre_1a8b4adeb18d1b0fcedea1b58bcbc67879" kindref="member">Ogre::Vector3f</ref> &amp;</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>const Ogre::Quaternion &amp;</type>
          <declname>rot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Render/RenderMesh.h" line="42" column="6" bodyfile="Src/Render/RenderMesh.cpp" bodystart="28" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_render_mesh_1a575c2ce1c6d49d58daf78a2dd6fec0e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void me::RenderMesh::setPosition</definition>
        <argsstring>(const Ogre::Vector3f &amp;pos)</argsstring>
        <name>setPosition</name>
        <qualifiedname>me::RenderMesh::setPosition</qualifiedname>
        <param>
          <type>const <ref refid="namespace_ogre_1a8b4adeb18d1b0fcedea1b58bcbc67879" kindref="member">Ogre::Vector3f</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Render/RenderMesh.h" line="43" column="6" bodyfile="Src/Render/RenderMesh.cpp" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_render_mesh_1ab94e87bc5223c4ea558dedaa8c5992f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void me::RenderMesh::setScale</definition>
        <argsstring>(const Ogre::Vector3f &amp;scale)</argsstring>
        <name>setScale</name>
        <qualifiedname>me::RenderMesh::setScale</qualifiedname>
        <param>
          <type>const <ref refid="namespace_ogre_1a8b4adeb18d1b0fcedea1b58bcbc67879" kindref="member">Ogre::Vector3f</ref> &amp;</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Render/RenderMesh.h" line="44" column="6" bodyfile="Src/Render/RenderMesh.cpp" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_render_mesh_1a1abef28d58cd023be4c8e986d14e8740" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void me::RenderMesh::setRotation</definition>
        <argsstring>(Ogre::Quaternion rot)</argsstring>
        <name>setRotation</name>
        <qualifiedname>me::RenderMesh::setRotation</qualifiedname>
        <param>
          <type>Ogre::Quaternion</type>
          <declname>rot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Render/RenderMesh.h" line="45" column="6" bodyfile="Src/Render/RenderMesh.cpp" bodystart="45" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_render_mesh_1a10d529e7ca70d19e125ef595a88f68de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Ogre::Entity *</type>
        <definition>Ogre::Entity * me::RenderMesh::getOgreEntity</definition>
        <argsstring>()</argsstring>
        <name>getOgreEntity</name>
        <qualifiedname>me::RenderMesh::getOgreEntity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the Ogre::Entity asociated </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Render/RenderMesh.h" line="50" column="14" bodyfile="Src/Render/RenderMesh.cpp" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classme_1_1_render_mesh_1aa3b9991173b75a29da5d71b4f7b20a79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void me::RenderMesh::setMaterial</definition>
        <argsstring>(std::string materialName)</argsstring>
        <name>setMaterial</name>
        <qualifiedname>me::RenderMesh::setMaterial</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>materialName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assign material name to entity <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>materialName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of material that we used Must be writted in MaterialResource.material </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Render/RenderMesh.h" line="57" column="6" bodyfile="Src/Render/RenderMesh.cpp" bodystart="55" bodyend="60"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Src/Render/RenderMesh.h" line="17" column="1" bodyfile="Src/Render/RenderMesh.h" bodystart="18" bodyend="60"/>
    <listofallmembers>
      <member refid="classme_1_1_render_mesh_1a10d529e7ca70d19e125ef595a88f68de" prot="public" virt="non-virtual"><scope>me::RenderMesh</scope><name>getOgreEntity</name></member>
      <member refid="classme_1_1_render_mesh_1a10ec5689b8d395b7a3313731a67530e5" prot="protected" virt="non-virtual"><scope>me::RenderMesh</scope><name>mEntity</name></member>
      <member refid="classme_1_1_render_mesh_1ab3dc00d2951b2f5ee467f87b2810d460" prot="protected" virt="non-virtual"><scope>me::RenderMesh</scope><name>mMaterialName</name></member>
      <member refid="classme_1_1_render_mesh_1a8ddfbdf2193533e71721139fd2332332" prot="protected" virt="non-virtual"><scope>me::RenderMesh</scope><name>mMeshName</name></member>
      <member refid="classme_1_1_render_mesh_1a7b0503d0a84d1e528ea9c450ab48a0c1" prot="protected" virt="non-virtual"><scope>me::RenderMesh</scope><name>mNode</name></member>
      <member refid="classme_1_1_render_mesh_1a54a4bf99c2243033a24bd16c5f909ee0" prot="public" virt="non-virtual"><scope>me::RenderMesh</scope><name>RenderMesh</name></member>
      <member refid="classme_1_1_render_mesh_1aa3b9991173b75a29da5d71b4f7b20a79" prot="public" virt="non-virtual"><scope>me::RenderMesh</scope><name>setMaterial</name></member>
      <member refid="classme_1_1_render_mesh_1a575c2ce1c6d49d58daf78a2dd6fec0e0" prot="public" virt="non-virtual"><scope>me::RenderMesh</scope><name>setPosition</name></member>
      <member refid="classme_1_1_render_mesh_1a1abef28d58cd023be4c8e986d14e8740" prot="public" virt="non-virtual"><scope>me::RenderMesh</scope><name>setRotation</name></member>
      <member refid="classme_1_1_render_mesh_1ab94e87bc5223c4ea558dedaa8c5992f8" prot="public" virt="non-virtual"><scope>me::RenderMesh</scope><name>setScale</name></member>
      <member refid="classme_1_1_render_mesh_1ac51564e410f50c8a79d0e03a9ccf3796" prot="public" virt="non-virtual"><scope>me::RenderMesh</scope><name>setTransform</name></member>
      <member refid="classme_1_1_render_mesh_1ae93ce9766eed4cd88f841c19ffe10595" prot="public" virt="non-virtual"><scope>me::RenderMesh</scope><name>~RenderMesh</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
