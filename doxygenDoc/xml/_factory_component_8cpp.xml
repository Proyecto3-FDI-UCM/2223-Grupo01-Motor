<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="_factory_component_8cpp" kind="file" language="C++">
    <compoundname>FactoryComponent.cpp</compoundname>
    <includes refid="_factory_component_8h" local="yes">FactoryComponent.h</includes>
    <includes refid="_animator_8h" local="yes">Animator.h</includes>
    <includes refid="_audio_listener_8h" local="yes">AudioListener.h</includes>
    <includes refid="_audio_source_8h" local="yes">AudioSource.h</includes>
    <includes refid="_camera_8h" local="yes">Camera.h</includes>
    <includes refid="_collider_8h" local="yes">Collider.h</includes>
    <includes refid="_mesh_renderer_8h" local="yes">MeshRenderer.h</includes>
    <includes refid="_particle_system_8h" local="yes">ParticleSystem.h</includes>
    <includes refid="_rigid_body_8h" local="yes">Rigidbody.h</includes>
    <includes refid="_transform_8h" local="yes">Transform.h</includes>
    <incdepgraph>
      <node id="7">
        <label>Animator.h</label>
        <link refid="_animator_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>AudioListener.h</label>
        <link refid="_audio_listener_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>AudioSource.h</label>
        <link refid="_audio_source_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Camera.h</label>
        <link refid="_camera_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>Collider.h</label>
        <link refid="_collider_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>Component.h</label>
        <link refid="_component_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Src/EntityComponent/Components/FactoryComponent.cpp</label>
        <link refid="_factory_component_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>FactoryComponent.h</label>
        <link refid="_factory_component_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>MeshRenderer.h</label>
        <link refid="_mesh_renderer_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>ParticleSystem.h</label>
        <link refid="_particle_system_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>Rigidbody.h</label>
        <link refid="_rigid_body_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>Transform.h</label>
        <link refid="_transform_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>EntityComponent/InfoScene.h</label>
        <link refid="_info_scene_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>MotorEngine/MotorEngineAPI.h</label>
        <link refid="_motor_engine_a_p_i_8h"/>
      </node>
      <node id="12">
        <label>Utils/Vector3.h</label>
        <link refid="_vector3_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>Utils/Vector4.h</label>
        <link refid="_vector4_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>cmath</label>
      </node>
      <node id="15">
        <label>list</label>
      </node>
      <node id="13">
        <label>math.h</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="6">
        <label>unordered_map</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_factory_component_8h" kindref="compound">FactoryComponent.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_animator_8h" kindref="compound">Animator.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_audio_listener_8h" kindref="compound">AudioListener.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_audio_source_8h" kindref="compound">AudioSource.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_camera_8h" kindref="compound">Camera.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_collider_8h" kindref="compound">Collider.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_mesh_renderer_8h" kindref="compound">MeshRenderer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_particle_system_8h" kindref="compound">ParticleSystem.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_rigid_body_8h" kindref="compound">Rigidbody.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_transform_8h" kindref="compound">Transform.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceme" kindref="compound">me</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_factory_component_1a494ea3a746bc7e6e127f9fff8731a41e" kindref="member">me::FactoryComponent::value</ref>(<ref refid="namespaceme_1aa32db0f4d84698471d693fe90639d8e6" kindref="member">Parameters</ref><sp/>params,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceme_1ad830450629248f34d5ce0ae49268edfa" kindref="member">ParameterName</ref>&amp;<sp/>parameter,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>defaultValue)</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>params.count(parameter)<sp/>?<sp/>std::stof(params[parameter])<sp/>:<sp/>defaultValue;</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_factory_component_1a494ea3a746bc7e6e127f9fff8731a41e" kindref="member">me::FactoryComponent::value</ref>(<ref refid="namespaceme_1aa32db0f4d84698471d693fe90639d8e6" kindref="member">Parameters</ref><sp/>params,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceme_1ad830450629248f34d5ce0ae49268edfa" kindref="member">ParameterName</ref>&amp;<sp/>parameter,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>defaultValue)</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>params.count(parameter)<sp/>?<sp/>std::stoi(params[parameter])<sp/>:<sp/>defaultValue;</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_factory_component_1a494ea3a746bc7e6e127f9fff8731a41e" kindref="member">me::FactoryComponent::value</ref>(<ref refid="namespaceme_1aa32db0f4d84698471d693fe90639d8e6" kindref="member">Parameters</ref><sp/>params,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceme_1ad830450629248f34d5ce0ae49268edfa" kindref="member">ParameterName</ref>&amp;<sp/>parameter,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>defaultValue)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>params.count(parameter)<sp/>?<sp/>(bool)std::stoi(params[parameter])<sp/>:<sp/>defaultValue;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">std::string<sp/><ref refid="classme_1_1_factory_component_1a494ea3a746bc7e6e127f9fff8731a41e" kindref="member">me::FactoryComponent::value</ref>(<ref refid="namespaceme_1aa32db0f4d84698471d693fe90639d8e6" kindref="member">Parameters</ref><sp/>params,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceme_1ad830450629248f34d5ce0ae49268edfa" kindref="member">ParameterName</ref>&amp;<sp/>parameter,<sp/>std::string<sp/>defaultValue)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>params.count(parameter)<sp/>?<sp/>params[parameter]<sp/>:<sp/>defaultValue;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><ref refid="classme_1_1_component" kindref="compound">Component</ref>*<sp/><ref refid="classme_1_1_factory_animator_1a27d0257039dcec27525701ea7a20452f" kindref="member">FactoryAnimator::create</ref>(<ref refid="namespaceme_1aa32db0f4d84698471d693fe90639d8e6" kindref="member">Parameters</ref><sp/>params)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classme_1_1_animator" kindref="compound">Animator</ref>*<sp/>animator<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_animator" kindref="compound">Animator</ref>();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*if(params.count(&quot;animation&quot;))</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>animator-&gt;playAnim(value&lt;std::string&gt;(params,<sp/>&quot;animation&quot;),<sp/>value(params,<sp/>&quot;loop&quot;,<sp/>true));*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>animator;</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><ref refid="classme_1_1_component" kindref="compound">Component</ref>*<sp/><ref refid="classme_1_1_factory_transform_1ad554b91529ec8e8ccc45e95a57064a48" kindref="member">FactoryTransform::create</ref>(<ref refid="namespaceme_1aa32db0f4d84698471d693fe90639d8e6" kindref="member">Parameters</ref><sp/>params)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classme_1_1_transform" kindref="compound">Transform</ref>*<sp/>transform<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_transform" kindref="compound">Transform</ref>();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>transform-&gt;<ref refid="classme_1_1_transform_1a535f79706339ccffb31ac911fc13a406" kindref="member">setPosition</ref>(<ref refid="classme_1_1_vector3" kindref="compound">Vector3</ref>(<ref refid="classme_1_1_factory_component_1a494ea3a746bc7e6e127f9fff8731a41e" kindref="member">value</ref>(params,<sp/></highlight><highlight class="stringliteral">&quot;position_x&quot;</highlight><highlight class="normal">,<sp/>0.0f),</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classme_1_1_factory_component_1a494ea3a746bc7e6e127f9fff8731a41e" kindref="member">value</ref>(params,<sp/></highlight><highlight class="stringliteral">&quot;position_y&quot;</highlight><highlight class="normal">,<sp/>0.0f),<sp/><ref refid="classme_1_1_factory_component_1a494ea3a746bc7e6e127f9fff8731a41e" kindref="member">value</ref>(params,<sp/></highlight><highlight class="stringliteral">&quot;position_z&quot;</highlight><highlight class="normal">,<sp/>0.0f)));</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>transform-&gt;<ref refid="classme_1_1_transform_1aa80922610841e1db8bfb8317297b6f83" kindref="member">setRotation</ref>(<ref refid="classme_1_1_vector3" kindref="compound">Vector3</ref>(<ref refid="classme_1_1_factory_component_1a494ea3a746bc7e6e127f9fff8731a41e" kindref="member">value</ref>(params,<sp/></highlight><highlight class="stringliteral">&quot;rotation_x&quot;</highlight><highlight class="normal">,<sp/>0.0f),</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classme_1_1_factory_component_1a494ea3a746bc7e6e127f9fff8731a41e" kindref="member">value</ref>(params,<sp/></highlight><highlight class="stringliteral">&quot;rotation_y&quot;</highlight><highlight class="normal">,<sp/>0.0f),<sp/><ref refid="classme_1_1_factory_component_1a494ea3a746bc7e6e127f9fff8731a41e" kindref="member">value</ref>(params,<sp/></highlight><highlight class="stringliteral">&quot;rotation_z&quot;</highlight><highlight class="normal">,<sp/>0.0f)));</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>transform-&gt;<ref refid="classme_1_1_transform_1a6517411dc8c1457d1472259d3660401b" kindref="member">setScale</ref>(<ref refid="classme_1_1_vector3" kindref="compound">Vector3</ref>(<ref refid="classme_1_1_factory_component_1a494ea3a746bc7e6e127f9fff8731a41e" kindref="member">value</ref>(params,<sp/></highlight><highlight class="stringliteral">&quot;scale_x&quot;</highlight><highlight class="normal">,<sp/>1.0f),</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classme_1_1_factory_component_1a494ea3a746bc7e6e127f9fff8731a41e" kindref="member">value</ref>(params,<sp/></highlight><highlight class="stringliteral">&quot;scale_y&quot;</highlight><highlight class="normal">,<sp/>1.0f),<sp/><ref refid="classme_1_1_factory_component_1a494ea3a746bc7e6e127f9fff8731a41e" kindref="member">value</ref>(params,<sp/></highlight><highlight class="stringliteral">&quot;scale_z&quot;</highlight><highlight class="normal">,<sp/>1.0f)));</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>transform;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><ref refid="classme_1_1_component" kindref="compound">me::Component</ref>*<sp/><ref refid="classme_1_1_factory_audio_listener_1ab9680c41ce5b1ca56aa408b0adf143ed" kindref="member">me::FactoryAudioListener::create</ref>(<ref refid="namespaceme_1aa32db0f4d84698471d693fe90639d8e6" kindref="member">Parameters</ref><sp/>params)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classme_1_1_audio_listener" kindref="compound">AudioListener</ref>*<sp/>audioListener<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_audio_listener" kindref="compound">AudioListener</ref>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>audioListener;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><ref refid="classme_1_1_component" kindref="compound">me::Component</ref>*<sp/><ref refid="classme_1_1_factory_audio_source_1a32a7220c332b19d049d2d4b7a307fddb" kindref="member">me::FactoryAudioSource::create</ref>(<ref refid="namespaceme_1aa32db0f4d84698471d693fe90639d8e6" kindref="member">Parameters</ref><sp/>params)</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classme_1_1_audio_source" kindref="compound">AudioSource</ref>*<sp/>audioSource<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_audio_source" kindref="compound">AudioSource</ref>();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>audioSource-&gt;<ref refid="classme_1_1_audio_source_1aeb8529bf0253d9b5a381590e51c5895b" kindref="member">setSource</ref>(value(params,<sp/></highlight><highlight class="stringliteral">&quot;source&quot;</highlight><highlight class="normal">,<sp/>std::string()));</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>audioSource-&gt;<ref refid="classme_1_1_audio_source_1aa2bc76ebd47588a27e223f2eb67d012f" kindref="member">setPlayOnStart</ref>(value(params,<sp/></highlight><highlight class="stringliteral">&quot;onStart&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>audioSource-&gt;<ref refid="classme_1_1_audio_source_1a5ca6a460d477f066272381801a3bee99" kindref="member">setVolume</ref>(value(params,<sp/></highlight><highlight class="stringliteral">&quot;volume&quot;</highlight><highlight class="normal">,<sp/>1));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>audioSource-&gt;<ref refid="classme_1_1_audio_source_1a99a58dc68d3016d54ebb5e9f8cbfc49a" kindref="member">setIs3D</ref>(value(params,<sp/></highlight><highlight class="stringliteral">&quot;3D&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>audioSource-&gt;<ref refid="classme_1_1_audio_source_1a2f5c395ed054590810167de8bee36340" kindref="member">setLoop</ref>(value(params,<sp/></highlight><highlight class="stringliteral">&quot;loop&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>audioSource;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><ref refid="classme_1_1_component" kindref="compound">me::Component</ref>*<sp/><ref refid="classme_1_1_factory_camera_1a89b0f0035a6fc7af68640d1148d09b1b" kindref="member">me::FactoryCamera::create</ref>(<ref refid="namespaceme_1aa32db0f4d84698471d693fe90639d8e6" kindref="member">Parameters</ref><sp/>params)</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classme_1_1_camera" kindref="compound">Camera</ref>*<sp/>camera<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_camera" kindref="compound">Camera</ref>();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="classme_1_1_camera_1a2703d4f36193fa328b0fae6be26260e2" kindref="member">setName</ref>(value(params,<sp/></highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/>std::string()));</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="classme_1_1_camera_1a086be3808300bb5f7381fb75c5dfcc39" kindref="member">setNearDistance</ref>(value(params,<sp/></highlight><highlight class="stringliteral">&quot;nearDistance&quot;</highlight><highlight class="normal">,<sp/>1));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="classme_1_1_camera_1a7ebd57ecfe7fdac4f05ec17085a59894" kindref="member">setFarDistance</ref>(value(params,<sp/></highlight><highlight class="stringliteral">&quot;farDistance&quot;</highlight><highlight class="normal">,<sp/>1));</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="classme_1_1_camera_1afd714756c07e4e772affef8ce4e70fd2" kindref="member">setAutoRadio</ref>(value(params,<sp/></highlight><highlight class="stringliteral">&quot;autoRadio&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="classme_1_1_camera_1abb44256375ca1417fa507be047be96b2" kindref="member">setZOrder</ref>(value(params,<sp/></highlight><highlight class="stringliteral">&quot;zOrder&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="classme_1_1_camera_1a83dc55560d8b19a266afc5f2e079e3e9" kindref="member">setLookAt</ref>(<ref refid="classme_1_1_vector3" kindref="compound">Vector3</ref>(value(params,<sp/></highlight><highlight class="stringliteral">&quot;lookAt_x&quot;</highlight><highlight class="normal">,<sp/>0),<sp/>value(params,<sp/></highlight><highlight class="stringliteral">&quot;lookAt_y&quot;</highlight><highlight class="normal">,<sp/>0),<sp/>value(params,<sp/></highlight><highlight class="stringliteral">&quot;lookAt_y&quot;</highlight><highlight class="normal">,<sp/>0)));</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>camera;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><ref refid="classme_1_1_component" kindref="compound">me::Component</ref>*<sp/><ref refid="classme_1_1_factory_collider_1a80d2627182246f0b82134e51a63af34a" kindref="member">me::FactoryCollider::create</ref>(<ref refid="namespaceme_1aa32db0f4d84698471d693fe90639d8e6" kindref="member">Parameters</ref><sp/>params)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classme_1_1_collider" kindref="compound">Collider</ref>*<sp/>collider<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_collider" kindref="compound">Collider</ref>();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>collider;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><ref refid="classme_1_1_component" kindref="compound">me::Component</ref>*<sp/><ref refid="classme_1_1_factory_mesh_renderer_1a86f57a95037ffb710b99ad0977e98707" kindref="member">me::FactoryMeshRenderer::create</ref>(<ref refid="namespaceme_1aa32db0f4d84698471d693fe90639d8e6" kindref="member">Parameters</ref><sp/>params)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>mesh<sp/>=<sp/>value(params,<sp/></highlight><highlight class="stringliteral">&quot;mesh&quot;</highlight><highlight class="normal">,<sp/>std::string());</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>meshName<sp/>=<sp/>value(params,<sp/></highlight><highlight class="stringliteral">&quot;meshname&quot;</highlight><highlight class="normal">,<sp/>std::string());</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>materialName<sp/>=<sp/>value(params,<sp/></highlight><highlight class="stringliteral">&quot;materialname&quot;</highlight><highlight class="normal">,<sp/>std::string());</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>staticState<sp/>=<sp/>value(params,<sp/></highlight><highlight class="stringliteral">&quot;staticobj&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classme_1_1_mesh_renderer" kindref="compound">MeshRenderer</ref>*<sp/>meshRenderer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_mesh_renderer" kindref="compound">MeshRenderer</ref>(mesh,<sp/>meshName);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>meshRenderer-&gt;<ref refid="classme_1_1_mesh_renderer_1ad812ec39c9b5752b2d1699f4baf6898c" kindref="member">setMaterial</ref>(materialName);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>meshRenderer-&gt;<ref refid="classme_1_1_mesh_renderer_1a2b3bd27f68a453df055d3b47c493060c" kindref="member">setStatic</ref>(staticState);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>meshRenderer;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><ref refid="classme_1_1_component" kindref="compound">me::Component</ref>*<sp/><ref refid="classme_1_1_factory_particle_system_1ac97a8b19ba38e29fb466fd2dc8f874cb" kindref="member">me::FactoryParticleSystem::create</ref>(<ref refid="namespaceme_1aa32db0f4d84698471d693fe90639d8e6" kindref="member">Parameters</ref><sp/>params)</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>particle<sp/>=<sp/>value(params,<sp/></highlight><highlight class="stringliteral">&quot;particle&quot;</highlight><highlight class="normal">,<sp/>std::string());</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>particleName<sp/>=<sp/>value(params,<sp/></highlight><highlight class="stringliteral">&quot;particlename&quot;</highlight><highlight class="normal">,<sp/>std::string());</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>emitted<sp/>=<sp/>value(params,<sp/></highlight><highlight class="stringliteral">&quot;emitted&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classme_1_1_particle_system" kindref="compound">ParticleSystem</ref>*<sp/>particleSystem<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_particle_system" kindref="compound">ParticleSystem</ref>(particle,<sp/>particleName);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>particleSystem-&gt;<ref refid="classme_1_1_particle_system_1a844a04e4dc959dc3c1070f87ef2c4570" kindref="member">setEmitting</ref>(emitted);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>particleSystem-&gt;<ref refid="classme_1_1_particle_system_1a1027ef30bf9435150c2aa617b67699aa" kindref="member">setOffsetPos</ref>(<ref refid="classme_1_1_vector3" kindref="compound">Vector3</ref>(value(params,<sp/></highlight><highlight class="stringliteral">&quot;offpos_x&quot;</highlight><highlight class="normal">,<sp/>0.0f),</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value(params,<sp/></highlight><highlight class="stringliteral">&quot;offpos_y&quot;</highlight><highlight class="normal">,<sp/>0.0f),<sp/>value(params,<sp/></highlight><highlight class="stringliteral">&quot;offpos_z&quot;</highlight><highlight class="normal">,<sp/>0.0f)));</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>particleSystem-&gt;<ref refid="classme_1_1_particle_system_1a0bec91f37c753a5fcfce427be7f47710" kindref="member">setOffsetScale</ref>(<ref refid="classme_1_1_vector3" kindref="compound">Vector3</ref>(value(params,<sp/></highlight><highlight class="stringliteral">&quot;offscale_x&quot;</highlight><highlight class="normal">,<sp/>0.0f),</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value(params,<sp/></highlight><highlight class="stringliteral">&quot;offscale_y&quot;</highlight><highlight class="normal">,<sp/>0.0f),<sp/>value(params,<sp/></highlight><highlight class="stringliteral">&quot;offscale_z&quot;</highlight><highlight class="normal">,<sp/>0.0f)));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>particleSystem;</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><ref refid="classme_1_1_component" kindref="compound">me::Component</ref>*<sp/><ref refid="classme_1_1_factory_rigid_body_1ac4649e941f35106db5e4cc49e7b76acc" kindref="member">me::FactoryRigidBody::create</ref>(<ref refid="namespaceme_1aa32db0f4d84698471d693fe90639d8e6" kindref="member">Parameters</ref><sp/>params)</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classme_1_1_rigid_body" kindref="compound">RigidBody</ref>*<sp/>rigidbody<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classme_1_1_rigid_body" kindref="compound">RigidBody</ref>();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>rigidbody-&gt;<ref refid="classme_1_1_rigid_body_1a391d125434fe50a9fa3cdf51dc624759" kindref="member">setMass</ref>(value(params,<sp/></highlight><highlight class="stringliteral">&quot;mass&quot;</highlight><highlight class="normal">,<sp/>0.0f));</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>rigidbody-&gt;<ref refid="classme_1_1_rigid_body_1a6180a6f9718f828df3158a8bab23236a" kindref="member">setRestitution</ref>(value(params,<sp/></highlight><highlight class="stringliteral">&quot;restitution&quot;</highlight><highlight class="normal">,<sp/>0.0f));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>rigidbody-&gt;<ref refid="classme_1_1_rigid_body_1a55964a98631556a45ab72a39ba994a4a" kindref="member">setFriction</ref>(value(params,<sp/></highlight><highlight class="stringliteral">&quot;friction&quot;</highlight><highlight class="normal">,<sp/>0.0f));</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>rigidbody-&gt;<ref refid="classme_1_1_rigid_body_1a54d755df6695c7bda14440b8b49be7f9" kindref="member">setTrigger</ref>(value(params,<sp/></highlight><highlight class="stringliteral">&quot;istrigger&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>rigidbody-&gt;<ref refid="classme_1_1_rigid_body_1a2601a159924ddb9f57c781f0dad979e4" kindref="member">setColShape</ref>(value(params,<sp/></highlight><highlight class="stringliteral">&quot;colshape&quot;</highlight><highlight class="normal">,<sp/>1));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>rigidbody-&gt;<ref refid="classme_1_1_rigid_body_1a4152f4fd03ae45fc146178cd1cd2396e" kindref="member">setMomeventType</ref>(value(params,<sp/></highlight><highlight class="stringliteral">&quot;mvtype&quot;</highlight><highlight class="normal">,<sp/>1));</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rigidbody;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Src/EntityComponent/Components/FactoryComponent.cpp"/>
  </compounddef>
</doxygen>
