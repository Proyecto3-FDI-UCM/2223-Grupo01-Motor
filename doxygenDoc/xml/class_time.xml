<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="class_time" kind="class" language="C++" prot="public">
    <compoundname>Time</compoundname>
    <includes refid="_time_8h" local="no">Time.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_time_1ac80d4360b9928730fb071843f2e387e2" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Time::deltaTime</definition>
        <argsstring></argsstring>
        <name>deltaTime</name>
        <qualifiedname>Time::deltaTime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Utils/Time.h" line="41" column="8" bodyfile="Src/Utils/Time.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_time_1a392f74c55779960792e13a71564b921c" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Time::fixedDeltaTime</definition>
        <argsstring></argsstring>
        <name>fixedDeltaTime</name>
        <qualifiedname>Time::fixedDeltaTime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Utils/Time.h" line="46" column="8" bodyfile="Src/Utils/Time.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_time_1a561b4617629ba2326030e6c4ba4390bd" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Time::currentFPSValue</definition>
        <argsstring></argsstring>
        <name>currentFPSValue</name>
        <qualifiedname>Time::currentFPSValue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Utils/Time.h" line="51" column="7" bodyfile="Src/Utils/Time.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_time_1ad768483aa6f9b6e80620ec7038b5d82e" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float Time::mFrameValue</definition>
        <argsstring></argsstring>
        <name>mFrameValue</name>
        <qualifiedname>Time::mFrameValue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Utils/Time.h" line="59" column="7" bodyfile="Src/Utils/Time.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_time_1af6c1ba39d39ac08547cf64b281283016" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float Time::mPhysicsFrameValue</definition>
        <argsstring></argsstring>
        <name>mPhysicsFrameValue</name>
        <qualifiedname>Time::mPhysicsFrameValue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Utils/Time.h" line="64" column="7" bodyfile="Src/Utils/Time.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_time_1a4245e409c7347d1d671858962c2ca3b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Time::Time</definition>
        <argsstring>()</argsstring>
        <name>Time</name>
        <qualifiedname>Time::Time</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Utils/Time.h" line="14" column="1" bodyfile="Src/Utils/Time.cpp" bodystart="3" bodyend="7"/>
      </memberdef>
      <memberdef kind="function" id="class_time_1a38946bbdc530450cdb2a9636ffb10b82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Time::getGameFrameValue</definition>
        <argsstring>()</argsstring>
        <name>getGameFrameValue</name>
        <qualifiedname>Time::getGameFrameValue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read Only Function used to get the framerate value <simplesect kind="return"><para>A float number representing the framerate value (Example: 60fps, 144fps) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Utils/Time.h" line="20" column="7" bodyfile="Src/Utils/Time.cpp" bodystart="9" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="class_time_1a879bfedfffe323754165585e85bb1e46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Time::getPhysicsFrameValue</definition>
        <argsstring>()</argsstring>
        <name>getPhysicsFrameValue</name>
        <qualifiedname>Time::getPhysicsFrameValue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read Only Function used to get the physics framerate value <simplesect kind="return"><para>A float number representing the framerate value (Example: 50.0f) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Utils/Time.h" line="26" column="7" bodyfile="Src/Utils/Time.cpp" bodystart="14" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="class_time_1a4b43b2ddd41c534daab9016e06440fbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Time::enableVSYNC</definition>
        <argsstring>()</argsstring>
        <name>enableVSYNC</name>
        <qualifiedname>Time::enableVSYNC</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function used to enable vertical syncronization to cap the framerate of the game </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Utils/Time.h" line="31" column="6" bodyfile="Src/Utils/Time.cpp" bodystart="20" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="class_time_1a824855d063b8e47e2e33ac556381ea3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Time::disableVSYNC</definition>
        <argsstring>()</argsstring>
        <name>disableVSYNC</name>
        <qualifiedname>Time::disableVSYNC</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function used to disable vertical syncronization to uncap the framerate of the game </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/Utils/Time.h" line="36" column="6" bodyfile="Src/Utils/Time.cpp" bodystart="25" bodyend="28"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Src/Utils/Time.h" line="11" column="1" bodyfile="Src/Utils/Time.h" bodystart="12" bodyend="65"/>
    <listofallmembers>
      <member refid="class_time_1a561b4617629ba2326030e6c4ba4390bd" prot="public" virt="non-virtual"><scope>Time</scope><name>currentFPSValue</name></member>
      <member refid="class_time_1ac80d4360b9928730fb071843f2e387e2" prot="public" virt="non-virtual"><scope>Time</scope><name>deltaTime</name></member>
      <member refid="class_time_1a824855d063b8e47e2e33ac556381ea3a" prot="public" virt="non-virtual"><scope>Time</scope><name>disableVSYNC</name></member>
      <member refid="class_time_1a4b43b2ddd41c534daab9016e06440fbe" prot="public" virt="non-virtual"><scope>Time</scope><name>enableVSYNC</name></member>
      <member refid="class_time_1a392f74c55779960792e13a71564b921c" prot="public" virt="non-virtual"><scope>Time</scope><name>fixedDeltaTime</name></member>
      <member refid="class_time_1a38946bbdc530450cdb2a9636ffb10b82" prot="public" virt="non-virtual"><scope>Time</scope><name>getGameFrameValue</name></member>
      <member refid="class_time_1a879bfedfffe323754165585e85bb1e46" prot="public" virt="non-virtual"><scope>Time</scope><name>getPhysicsFrameValue</name></member>
      <member refid="class_time_1ad768483aa6f9b6e80620ec7038b5d82e" prot="protected" virt="non-virtual"><scope>Time</scope><name>mFrameValue</name></member>
      <member refid="class_time_1af6c1ba39d39ac08547cf64b281283016" prot="protected" virt="non-virtual"><scope>Time</scope><name>mPhysicsFrameValue</name></member>
      <member refid="class_time_1a4245e409c7347d1d671858962c2ca3b5" prot="public" virt="non-virtual"><scope>Time</scope><name>Time</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
