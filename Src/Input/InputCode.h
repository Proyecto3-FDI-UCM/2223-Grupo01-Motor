#pragma once
#ifndef __INPUT_INPUTCODE
#define __INPUT_INPUTCODE

#include "MotorEngine/MotorEngineAPI.h"
#include <SDL3/SDL_keyboard.h>
#include <SDL3/SDL_mouse.h>
#include <SDL3/SDL_gamepad.h>

namespace me {
	/*
	Type of input: which device was triggered
	*/
	enum __MOTORENGINE_API InputType {
		INPUTTYPE_KEYBOARD,
		INPUTTYPE_MOUSE_CLICK,
		INPUTTYPE_MOUSE_MOTION,
		INPUTTYPE_MOUSE_WHEEL,
		INPUTTYPE_GAMEPAD_BUTTON,
		INPUTTYPE_GAMEPAD_AXIS,
		INPUTTYPE_NULL
	};

	/*
	Keys of the keyboard
	*/
	enum __MOTORENGINE_API KeyboardCode {
		KEYBOARDCODE_UNKNOWN = SDLK_UNKNOWN,
		KEYBOARDCODE_RETURN = SDLK_RETURN,
		KEYBOARDCODE_ESCAPE = SDLK_ESCAPE,
		KEYBOARDCODE_BACKSPACE = SDLK_BACKSPACE,
		KEYBOARDCODE_TAB = SDLK_TAB,
		KEYBOARDCODE_SPACE = SDLK_SPACE,
		KEYBOARDCODE_EXCLAIM = SDLK_EXCLAIM,
		KEYBOARDCODE_DOUBLEQUOTE = SDLK_QUOTEDBL,
		KEYBOARDCODE_HASH = SDLK_HASH,
		KEYBOARDCODE_PERCENT = SDLK_PERCENT,
		KEYBOARDCODE_DOLLAR = SDLK_DOLLAR,
		KEYBOARDCODE_AMPERSAND = SDLK_AMPERSAND,
		KEYBOARDCODE_QUOTE = SDLK_QUOTE,
		KEYBOARDCODE_LEFTPARENTHESIS = SDLK_LEFTPAREN,
		KEYBOARDCODE_RIGHTPARENTHESIS = SDLK_RIGHTPAREN,
		KEYBOARDCODE_ASTERISK = SDLK_ASTERISK,
		KEYBOARDCODE_PLUS = SDLK_PLUS,
		KEYBOARDCODE_COMMA = SDLK_COMMA,
		KEYBOARDCODE_MINUS = SDLK_MINUS,
		KEYBOARDCODE_PERIOD = SDLK_PERIOD,
		KEYBOARDCODE_SLASH = SDLK_SLASH,
		KEYBOARDCODE_0 = SDLK_0,
		KEYBOARDCODE_1 = SDLK_1,
		KEYBOARDCODE_2 = SDLK_2,
		KEYBOARDCODE_3 = SDLK_3,
		KEYBOARDCODE_4 = SDLK_4,
		KEYBOARDCODE_5 = SDLK_5,
		KEYBOARDCODE_6 = SDLK_6,
		KEYBOARDCODE_7 = SDLK_7,
		KEYBOARDCODE_8 = SDLK_8,
		KEYBOARDCODE_9 = SDLK_9,
		KEYBOARDCODE_COLON = SDLK_COLON,
		KEYBOARDCODE_SEMICOLON = SDLK_SEMICOLON,
		KEYBOARDCODE_LESS = SDLK_LESS,
		KEYBOARDCODE_EQUALS = SDLK_EQUALS,
		KEYBOARDCODE_GREATER = SDLK_GREATER,
		KEYBOARDCODE_QUESTION = SDLK_QUESTION,
		KEYBOARDCODE_AT = SDLK_AT,

		KEYBOARDCODE_LEFTBRACKET = SDLK_LEFTBRACKET,
		KEYBOARDCODE_BACKSLASH = SDLK_BACKSLASH,
		KEYBOARDCODE_RIGHTBRACKET = SDLK_RIGHTBRACKET,
		KEYBOARDCODE_CARET = SDLK_CARET,
		KEYBOARDCODE_UNDERSCORE = SDLK_UNDERSCORE,
		KEYBOARDCODE_BACKQUOTE = SDLK_BACKQUOTE,
		KEYBOARDCODE_A = SDLK_a,
		KEYBOARDCODE_B = SDLK_b,
		KEYBOARDCODE_C = SDLK_c,
		KEYBOARDCODE_D = SDLK_d,
		KEYBOARDCODE_E = SDLK_e,
		KEYBOARDCODE_F = SDLK_f,
		KEYBOARDCODE_G = SDLK_g,
		KEYBOARDCODE_H = SDLK_h,
		KEYBOARDCODE_I = SDLK_i,
		KEYBOARDCODE_J = SDLK_j,
		KEYBOARDCODE_K = SDLK_k,
		KEYBOARDCODE_L = SDLK_l,
		KEYBOARDCODE_M = SDLK_m,
		KEYBOARDCODE_N = SDLK_n,
		KEYBOARDCODE_O = SDLK_o,
		KEYBOARDCODE_P = SDLK_p,
		KEYBOARDCODE_Q = SDLK_q,
		KEYBOARDCODE_R = SDLK_r,
		KEYBOARDCODE_S = SDLK_s,
		KEYBOARDCODE_T = SDLK_t,
		KEYBOARDCODE_U = SDLK_u,
		KEYBOARDCODE_V = SDLK_v,
		KEYBOARDCODE_W = SDLK_w,
		KEYBOARDCODE_X = SDLK_x,
		KEYBOARDCODE_Y = SDLK_y,
		KEYBOARDCODE_Z = SDLK_z,

		KEYBOARDCODE_CAPSLOCK = SDLK_CAPSLOCK,

		KEYBOARDCODE_F1 = SDLK_F1,
		KEYBOARDCODE_F2 = SDLK_F2,
		KEYBOARDCODE_F3 = SDLK_F3,
		KEYBOARDCODE_F4 = SDLK_F4,
		KEYBOARDCODE_F5 = SDLK_F5,
		KEYBOARDCODE_F6 = SDLK_F6,
		KEYBOARDCODE_F7 = SDLK_F7,
		KEYBOARDCODE_F8 = SDLK_F8,
		KEYBOARDCODE_F9 = SDLK_F9,
		KEYBOARDCODE_F10 = SDLK_F10,
		KEYBOARDCODE_F11 = SDLK_F11,
		KEYBOARDCODE_F12 = SDLK_F12,

		KEYBOARDCODE_PRINTSCREEN = SDLK_PRINTSCREEN,
		KEYBOARDCODE_SCROLLLOCK = SDLK_SCROLLLOCK,
		KEYBOARDCODE_PAUSE = SDLK_PAUSE,
		KEYBOARDCODE_INSERT = SDLK_INSERT,
		KEYBOARDCODE_HOME = SDLK_HOME,
		KEYBOARDCODE_PAGEUP = SDLK_PAGEUP,
		KEYBOARDCODE_DELETE = SDLK_DELETE,
		KEYBOARDCODE_END = SDLK_END,
		KEYBOARDCODE_PAGEDOWN = SDLK_PAGEDOWN,
		KEYBOARDCODE_RIGHT = SDLK_RIGHT,
		KEYBOARDCODE_LEFT = SDLK_LEFT,
		KEYBOARDCODE_DOWN = SDLK_DOWN,
		KEYBOARDCODE_UP = SDLK_UP,

		KEYBOARDCODE_NUMPAD_NUMLOCKCLEAR = SDLK_NUMLOCKCLEAR,
		KEYBOARDCODE_NUMPAD_DIVIDE = SDLK_KP_DIVIDE,
		KEYBOARDCODE_NUMPAD_MULTIPLY = SDLK_KP_MULTIPLY,
		KEYBOARDCODE_NUMPAD_MINUS = SDLK_KP_MINUS,
		KEYBOARDCODE_NUMPAD_PLUS = SDLK_KP_PLUS,
		KEYBOARDCODE_NUMPAD_ENTER = SDLK_KP_ENTER,
		KEYBOARDCODE_NUMPAD_1 = SDLK_KP_1,
		KEYBOARDCODE_NUMPAD_2 = SDLK_KP_2,
		KEYBOARDCODE_NUMPAD_3 = SDLK_KP_3,
		KEYBOARDCODE_NUMPAD_4 = SDLK_KP_4,
		KEYBOARDCODE_NUMPAD_5 = SDLK_KP_5,
		KEYBOARDCODE_NUMPAD_6 = SDLK_KP_6,
		KEYBOARDCODE_NUMPAD_7 = SDLK_KP_7,
		KEYBOARDCODE_NUMPAD_8 = SDLK_KP_8,
		KEYBOARDCODE_NUMPAD_9 = SDLK_KP_9,
		KEYBOARDCODE_NUMPAD_0 = SDLK_KP_0,
		KEYBOARDCODE_NUMPAD_PERIOD = SDLK_KP_PERIOD
	};

	/*
	Buttons of the mouse
	*/
	enum __MOTORENGINE_API MouseClickCode
	{
		MOUSE_LEFTCLICK = SDL_BUTTON_LEFT,
		MOUSE_MIDDLECLICK = SDL_BUTTON_MIDDLE,
		MOUSE_RIGHTCLICK = SDL_BUTTON_RIGHT,
		MOUSE_X1 = SDL_BUTTON_X1,
		MOUSE_X2 = SDL_BUTTON_X2
	};

	/*
	Directions of the mouse wheel
	*/
	enum __MOTORENGINE_API MouseWheelCode
	{
		MOUSEWHEELCODE_NORMAL = SDL_MOUSEWHEEL_NORMAL,    /**< The scroll direction is normal */
		MOUSEWHEELCODE_FLIPPED = SDL_MOUSEWHEEL_FLIPPED    /**< The scroll direction is flipped / natural */
	};

	/*
	Buttons of the gamepad
	*/
	enum __MOTORENGINE_API GamepadButtonCode
	{
		GAMEPAD_BUTTONCODE_INVALID = SDL_GAMEPAD_BUTTON_INVALID,
		GAMEPAD_BUTTONCODE_A = SDL_GAMEPAD_BUTTON_A,
		GAMEPAD_BUTTONCODE_B = SDL_GAMEPAD_BUTTON_B,
		GAMEPAD_BUTTONCODE_X = SDL_GAMEPAD_BUTTON_X,
		GAMEPAD_BUTTONCODE_Y = SDL_GAMEPAD_BUTTON_Y,
		GAMEPAD_BUTTONCODE_BACK = SDL_GAMEPAD_BUTTON_BACK,
		GAMEPAD_BUTTONCODE_GUIDE = SDL_GAMEPAD_BUTTON_GUIDE,
		GAMEPAD_BUTTONCODE_START = SDL_GAMEPAD_BUTTON_START,
		GAMEPAD_BUTTONCODE_LEFT_STICK = SDL_GAMEPAD_BUTTON_LEFT_STICK,
		GAMEPAD_BUTTONCODE_RIGHT_STICK = SDL_GAMEPAD_BUTTON_RIGHT_STICK,
		GAMEPAD_BUTTONCODE_LEFT_SHOULDER = SDL_GAMEPAD_BUTTON_LEFT_SHOULDER,
		GAMEPAD_BUTTONCODE_RIGHT_SHOULDER = SDL_GAMEPAD_BUTTON_RIGHT_SHOULDER,
		GAMEPAD_BUTTONCODE_DPAD_UP = SDL_GAMEPAD_BUTTON_DPAD_UP,
		GAMEPAD_BUTTONCODE_DPAD_DOWN = SDL_GAMEPAD_BUTTON_DPAD_DOWN,
		GAMEPAD_BUTTONCODE_DPAD_LEFT = SDL_GAMEPAD_BUTTON_DPAD_LEFT,
		GAMEPAD_BUTTONCODE_DPAD_RIGHT = SDL_GAMEPAD_BUTTON_DPAD_RIGHT,
		GAMEPAD_BUTTONCODE_MISC1 = SDL_GAMEPAD_BUTTON_MISC1,    /* Xbox Series X share button, PS5 microphone button, Nintendo Switch Pro capture button, Amazon Luna microphone button */
		GAMEPAD_BUTTONCODE_PADDLE1 = SDL_GAMEPAD_BUTTON_PADDLE1,  /* Xbox Elite paddle P1 (upper left, facing the back) */
		GAMEPAD_BUTTONCODE_PADDLE2 = SDL_GAMEPAD_BUTTON_PADDLE2,  /* Xbox Elite paddle P3 (upper right, facing the back) */
		GAMEPAD_BUTTONCODE_PADDLE3 = SDL_GAMEPAD_BUTTON_PADDLE3,  /* Xbox Elite paddle P2 (lower left, facing the back) */
		GAMEPAD_BUTTONCODE_PADDLE4 = SDL_GAMEPAD_BUTTON_PADDLE4,  /* Xbox Elite paddle P4 (lower right, facing the back) */
		GAMEPAD_BUTTONCODE_TOUCHPAD = SDL_GAMEPAD_BUTTON_TOUCHPAD, /* PS4/PS5 touchpad button */
		GAMEPAD_BUTTONCODE_MAX = SDL_GAMEPAD_BUTTON_MAX
	};

	/*
	Axis of the gamepad
	*/
	enum __MOTORENGINE_API GamepadAxisCode
	{
		GAMEPAD_AXISCODE_INVALID = SDL_GAMEPAD_AXIS_INVALID,
		GAMEPAD_AXISCODE_LEFTX = SDL_GAMEPAD_AXIS_LEFTX,
		GAMEPAD_AXISCODE_LEFTY = SDL_GAMEPAD_AXIS_LEFTY,
		GAMEPAD_AXISCODE_RIGHTX = SDL_GAMEPAD_AXIS_RIGHTX,
		GAMEPAD_AXISCODE_RIGHTY = SDL_GAMEPAD_AXIS_RIGHTY,
		GAMEPAD_AXISCODE_LEFT_TRIGGER = SDL_GAMEPAD_AXIS_LEFT_TRIGGER,
		GAMEPAD_AXISCODE_RIGHT_TRIGGER = SDL_GAMEPAD_AXIS_RIGHT_TRIGGER,
		GAMEPAD_AXISCODE_MAX = SDL_GAMEPAD_AXIS_MAX
	};
}

#endif